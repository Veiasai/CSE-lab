// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: namenode.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "namenode.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* HdfsFileStatusProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HdfsFileStatusProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* HdfsFileStatusProto_FileType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DirectoryListingProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DirectoryListingProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFileInfoRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFileInfoRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFileInfoResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFileInfoResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetListingRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetListingRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetListingResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetListingResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBlockLocationsRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBlockLocationsRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBlockLocationsResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBlockLocationsResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* FsServerDefaultsProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FsServerDefaultsProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetServerDefaultsRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetServerDefaultsRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetServerDefaultsResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetServerDefaultsResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompleteRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompleteRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompleteResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompleteResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddBlockRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddBlockRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddBlockResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddBlockResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RenewLeaseRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RenewLeaseRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RenewLeaseResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RenewLeaseResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RenameRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RenameRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RenameResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RenameResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* MkdirsRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MkdirsRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* MkdirsResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MkdirsResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFsStatsRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFsStatsRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFsStatsResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFsStatsResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetSafeModeRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetSafeModeRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetSafeModeResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetSafeModeResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDatanodeReportRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDatanodeReportRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDatanodeReportResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetDatanodeReportResponseProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AddBlockFlagProto_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SafeModeActionProto_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* DatanodeReportTypeProto_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_namenode_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_namenode_2eproto() {
  protobuf_AddDesc_namenode_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "namenode.proto");
  GOOGLE_CHECK(file != NULL);
  HdfsFileStatusProto_descriptor_ = file->message_type(0);
  static const int HdfsFileStatusProto_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, filetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, permission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, owner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, modification_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, access_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, symlink_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, block_replication_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, blocksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, locations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, fileid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, childrennum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, fileencryptioninfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, storagepolicy_),
  };
  HdfsFileStatusProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HdfsFileStatusProto_descriptor_,
      HdfsFileStatusProto::default_instance_,
      HdfsFileStatusProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(HdfsFileStatusProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HdfsFileStatusProto, _internal_metadata_),
      -1);
  HdfsFileStatusProto_FileType_descriptor_ = HdfsFileStatusProto_descriptor_->enum_type(0);
  DirectoryListingProto_descriptor_ = file->message_type(1);
  static const int DirectoryListingProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectoryListingProto, partiallisting_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectoryListingProto, remainingentries_),
  };
  DirectoryListingProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DirectoryListingProto_descriptor_,
      DirectoryListingProto::default_instance_,
      DirectoryListingProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectoryListingProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(DirectoryListingProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectoryListingProto, _internal_metadata_),
      -1);
  GetFileInfoRequestProto_descriptor_ = file->message_type(2);
  static const int GetFileInfoRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFileInfoRequestProto, src_),
  };
  GetFileInfoRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetFileInfoRequestProto_descriptor_,
      GetFileInfoRequestProto::default_instance_,
      GetFileInfoRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFileInfoRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetFileInfoRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFileInfoRequestProto, _internal_metadata_),
      -1);
  GetFileInfoResponseProto_descriptor_ = file->message_type(3);
  static const int GetFileInfoResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFileInfoResponseProto, fs_),
  };
  GetFileInfoResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetFileInfoResponseProto_descriptor_,
      GetFileInfoResponseProto::default_instance_,
      GetFileInfoResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFileInfoResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetFileInfoResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFileInfoResponseProto, _internal_metadata_),
      -1);
  GetListingRequestProto_descriptor_ = file->message_type(4);
  static const int GetListingRequestProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetListingRequestProto, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetListingRequestProto, startafter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetListingRequestProto, needlocation_),
  };
  GetListingRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetListingRequestProto_descriptor_,
      GetListingRequestProto::default_instance_,
      GetListingRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetListingRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetListingRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetListingRequestProto, _internal_metadata_),
      -1);
  GetListingResponseProto_descriptor_ = file->message_type(5);
  static const int GetListingResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetListingResponseProto, dirlist_),
  };
  GetListingResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetListingResponseProto_descriptor_,
      GetListingResponseProto::default_instance_,
      GetListingResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetListingResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetListingResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetListingResponseProto, _internal_metadata_),
      -1);
  GetBlockLocationsRequestProto_descriptor_ = file->message_type(6);
  static const int GetBlockLocationsRequestProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocationsRequestProto, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocationsRequestProto, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocationsRequestProto, length_),
  };
  GetBlockLocationsRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBlockLocationsRequestProto_descriptor_,
      GetBlockLocationsRequestProto::default_instance_,
      GetBlockLocationsRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocationsRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetBlockLocationsRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocationsRequestProto, _internal_metadata_),
      -1);
  GetBlockLocationsResponseProto_descriptor_ = file->message_type(7);
  static const int GetBlockLocationsResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocationsResponseProto, locations_),
  };
  GetBlockLocationsResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBlockLocationsResponseProto_descriptor_,
      GetBlockLocationsResponseProto::default_instance_,
      GetBlockLocationsResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocationsResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetBlockLocationsResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBlockLocationsResponseProto, _internal_metadata_),
      -1);
  FsServerDefaultsProto_descriptor_ = file->message_type(8);
  static const int FsServerDefaultsProto_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, blocksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, bytesperchecksum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, writepacketsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, replication_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, filebuffersize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, encryptdatatransfer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, trashinterval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, checksumtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, keyprovideruri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, policyid_),
  };
  FsServerDefaultsProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FsServerDefaultsProto_descriptor_,
      FsServerDefaultsProto::default_instance_,
      FsServerDefaultsProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(FsServerDefaultsProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FsServerDefaultsProto, _internal_metadata_),
      -1);
  GetServerDefaultsRequestProto_descriptor_ = file->message_type(9);
  static const int GetServerDefaultsRequestProto_offsets_[1] = {
  };
  GetServerDefaultsRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetServerDefaultsRequestProto_descriptor_,
      GetServerDefaultsRequestProto::default_instance_,
      GetServerDefaultsRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetServerDefaultsRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetServerDefaultsRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetServerDefaultsRequestProto, _internal_metadata_),
      -1);
  GetServerDefaultsResponseProto_descriptor_ = file->message_type(10);
  static const int GetServerDefaultsResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetServerDefaultsResponseProto, serverdefaults_),
  };
  GetServerDefaultsResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetServerDefaultsResponseProto_descriptor_,
      GetServerDefaultsResponseProto::default_instance_,
      GetServerDefaultsResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetServerDefaultsResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetServerDefaultsResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetServerDefaultsResponseProto, _internal_metadata_),
      -1);
  CreateRequestProto_descriptor_ = file->message_type(11);
  static const int CreateRequestProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequestProto, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequestProto, masked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequestProto, clientname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequestProto, createflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequestProto, createparent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequestProto, replication_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequestProto, blocksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequestProto, cryptoprotocolversion_),
  };
  CreateRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateRequestProto_descriptor_,
      CreateRequestProto::default_instance_,
      CreateRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CreateRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRequestProto, _internal_metadata_),
      -1);
  CreateResponseProto_descriptor_ = file->message_type(12);
  static const int CreateResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResponseProto, fs_),
  };
  CreateResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateResponseProto_descriptor_,
      CreateResponseProto::default_instance_,
      CreateResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CreateResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateResponseProto, _internal_metadata_),
      -1);
  CompleteRequestProto_descriptor_ = file->message_type(13);
  static const int CompleteRequestProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteRequestProto, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteRequestProto, clientname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteRequestProto, last_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteRequestProto, fileid_),
  };
  CompleteRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CompleteRequestProto_descriptor_,
      CompleteRequestProto::default_instance_,
      CompleteRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CompleteRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteRequestProto, _internal_metadata_),
      -1);
  CompleteResponseProto_descriptor_ = file->message_type(14);
  static const int CompleteResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteResponseProto, result_),
  };
  CompleteResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CompleteResponseProto_descriptor_,
      CompleteResponseProto::default_instance_,
      CompleteResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(CompleteResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteResponseProto, _internal_metadata_),
      -1);
  AddBlockRequestProto_descriptor_ = file->message_type(15);
  static const int AddBlockRequestProto_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockRequestProto, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockRequestProto, clientname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockRequestProto, previous_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockRequestProto, excludenodes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockRequestProto, fileid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockRequestProto, favorednodes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockRequestProto, flags_),
  };
  AddBlockRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddBlockRequestProto_descriptor_,
      AddBlockRequestProto::default_instance_,
      AddBlockRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(AddBlockRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockRequestProto, _internal_metadata_),
      -1);
  AddBlockResponseProto_descriptor_ = file->message_type(16);
  static const int AddBlockResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockResponseProto, block_),
  };
  AddBlockResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddBlockResponseProto_descriptor_,
      AddBlockResponseProto::default_instance_,
      AddBlockResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(AddBlockResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddBlockResponseProto, _internal_metadata_),
      -1);
  RenewLeaseRequestProto_descriptor_ = file->message_type(17);
  static const int RenewLeaseRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenewLeaseRequestProto, clientname_),
  };
  RenewLeaseRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RenewLeaseRequestProto_descriptor_,
      RenewLeaseRequestProto::default_instance_,
      RenewLeaseRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenewLeaseRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(RenewLeaseRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenewLeaseRequestProto, _internal_metadata_),
      -1);
  RenewLeaseResponseProto_descriptor_ = file->message_type(18);
  static const int RenewLeaseResponseProto_offsets_[1] = {
  };
  RenewLeaseResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RenewLeaseResponseProto_descriptor_,
      RenewLeaseResponseProto::default_instance_,
      RenewLeaseResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenewLeaseResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(RenewLeaseResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenewLeaseResponseProto, _internal_metadata_),
      -1);
  RenameRequestProto_descriptor_ = file->message_type(19);
  static const int RenameRequestProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameRequestProto, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameRequestProto, dst_),
  };
  RenameRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RenameRequestProto_descriptor_,
      RenameRequestProto::default_instance_,
      RenameRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(RenameRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameRequestProto, _internal_metadata_),
      -1);
  RenameResponseProto_descriptor_ = file->message_type(20);
  static const int RenameResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameResponseProto, result_),
  };
  RenameResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RenameResponseProto_descriptor_,
      RenameResponseProto::default_instance_,
      RenameResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(RenameResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RenameResponseProto, _internal_metadata_),
      -1);
  DeleteRequestProto_descriptor_ = file->message_type(21);
  static const int DeleteRequestProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRequestProto, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRequestProto, recursive_),
  };
  DeleteRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteRequestProto_descriptor_,
      DeleteRequestProto::default_instance_,
      DeleteRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(DeleteRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRequestProto, _internal_metadata_),
      -1);
  DeleteResponseProto_descriptor_ = file->message_type(22);
  static const int DeleteResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteResponseProto, result_),
  };
  DeleteResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteResponseProto_descriptor_,
      DeleteResponseProto::default_instance_,
      DeleteResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(DeleteResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteResponseProto, _internal_metadata_),
      -1);
  MkdirsRequestProto_descriptor_ = file->message_type(23);
  static const int MkdirsRequestProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirsRequestProto, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirsRequestProto, masked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirsRequestProto, createparent_),
  };
  MkdirsRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MkdirsRequestProto_descriptor_,
      MkdirsRequestProto::default_instance_,
      MkdirsRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirsRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(MkdirsRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirsRequestProto, _internal_metadata_),
      -1);
  MkdirsResponseProto_descriptor_ = file->message_type(24);
  static const int MkdirsResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirsResponseProto, result_),
  };
  MkdirsResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MkdirsResponseProto_descriptor_,
      MkdirsResponseProto::default_instance_,
      MkdirsResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirsResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(MkdirsResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MkdirsResponseProto, _internal_metadata_),
      -1);
  GetFsStatsRequestProto_descriptor_ = file->message_type(25);
  static const int GetFsStatsRequestProto_offsets_[1] = {
  };
  GetFsStatsRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetFsStatsRequestProto_descriptor_,
      GetFsStatsRequestProto::default_instance_,
      GetFsStatsRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetFsStatsRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsRequestProto, _internal_metadata_),
      -1);
  GetFsStatsResponseProto_descriptor_ = file->message_type(26);
  static const int GetFsStatsResponseProto_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsResponseProto, capacity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsResponseProto, used_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsResponseProto, remaining_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsResponseProto, under_replicated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsResponseProto, corrupt_blocks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsResponseProto, missing_blocks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsResponseProto, missing_repl_one_blocks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsResponseProto, blocks_in_future_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsResponseProto, pending_deletion_blocks_),
  };
  GetFsStatsResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetFsStatsResponseProto_descriptor_,
      GetFsStatsResponseProto::default_instance_,
      GetFsStatsResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetFsStatsResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFsStatsResponseProto, _internal_metadata_),
      -1);
  SetSafeModeRequestProto_descriptor_ = file->message_type(27);
  static const int SetSafeModeRequestProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSafeModeRequestProto, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSafeModeRequestProto, checked_),
  };
  SetSafeModeRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetSafeModeRequestProto_descriptor_,
      SetSafeModeRequestProto::default_instance_,
      SetSafeModeRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSafeModeRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SetSafeModeRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSafeModeRequestProto, _internal_metadata_),
      -1);
  SetSafeModeResponseProto_descriptor_ = file->message_type(28);
  static const int SetSafeModeResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSafeModeResponseProto, result_),
  };
  SetSafeModeResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetSafeModeResponseProto_descriptor_,
      SetSafeModeResponseProto::default_instance_,
      SetSafeModeResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSafeModeResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(SetSafeModeResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSafeModeResponseProto, _internal_metadata_),
      -1);
  GetDatanodeReportRequestProto_descriptor_ = file->message_type(29);
  static const int GetDatanodeReportRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDatanodeReportRequestProto, type_),
  };
  GetDatanodeReportRequestProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetDatanodeReportRequestProto_descriptor_,
      GetDatanodeReportRequestProto::default_instance_,
      GetDatanodeReportRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDatanodeReportRequestProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetDatanodeReportRequestProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDatanodeReportRequestProto, _internal_metadata_),
      -1);
  GetDatanodeReportResponseProto_descriptor_ = file->message_type(30);
  static const int GetDatanodeReportResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDatanodeReportResponseProto, di_),
  };
  GetDatanodeReportResponseProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetDatanodeReportResponseProto_descriptor_,
      GetDatanodeReportResponseProto::default_instance_,
      GetDatanodeReportResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDatanodeReportResponseProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetDatanodeReportResponseProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDatanodeReportResponseProto, _internal_metadata_),
      -1);
  AddBlockFlagProto_descriptor_ = file->enum_type(0);
  SafeModeActionProto_descriptor_ = file->enum_type(1);
  DatanodeReportTypeProto_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_namenode_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HdfsFileStatusProto_descriptor_, &HdfsFileStatusProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DirectoryListingProto_descriptor_, &DirectoryListingProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetFileInfoRequestProto_descriptor_, &GetFileInfoRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetFileInfoResponseProto_descriptor_, &GetFileInfoResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetListingRequestProto_descriptor_, &GetListingRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetListingResponseProto_descriptor_, &GetListingResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBlockLocationsRequestProto_descriptor_, &GetBlockLocationsRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBlockLocationsResponseProto_descriptor_, &GetBlockLocationsResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FsServerDefaultsProto_descriptor_, &FsServerDefaultsProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetServerDefaultsRequestProto_descriptor_, &GetServerDefaultsRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetServerDefaultsResponseProto_descriptor_, &GetServerDefaultsResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateRequestProto_descriptor_, &CreateRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateResponseProto_descriptor_, &CreateResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CompleteRequestProto_descriptor_, &CompleteRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CompleteResponseProto_descriptor_, &CompleteResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddBlockRequestProto_descriptor_, &AddBlockRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddBlockResponseProto_descriptor_, &AddBlockResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RenewLeaseRequestProto_descriptor_, &RenewLeaseRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RenewLeaseResponseProto_descriptor_, &RenewLeaseResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RenameRequestProto_descriptor_, &RenameRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RenameResponseProto_descriptor_, &RenameResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteRequestProto_descriptor_, &DeleteRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteResponseProto_descriptor_, &DeleteResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MkdirsRequestProto_descriptor_, &MkdirsRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MkdirsResponseProto_descriptor_, &MkdirsResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetFsStatsRequestProto_descriptor_, &GetFsStatsRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetFsStatsResponseProto_descriptor_, &GetFsStatsResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetSafeModeRequestProto_descriptor_, &SetSafeModeRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetSafeModeResponseProto_descriptor_, &SetSafeModeResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetDatanodeReportRequestProto_descriptor_, &GetDatanodeReportRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetDatanodeReportResponseProto_descriptor_, &GetDatanodeReportResponseProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_namenode_2eproto() {
  delete HdfsFileStatusProto::default_instance_;
  delete HdfsFileStatusProto_reflection_;
  delete DirectoryListingProto::default_instance_;
  delete DirectoryListingProto_reflection_;
  delete GetFileInfoRequestProto::default_instance_;
  delete GetFileInfoRequestProto_reflection_;
  delete GetFileInfoResponseProto::default_instance_;
  delete GetFileInfoResponseProto_reflection_;
  delete GetListingRequestProto::default_instance_;
  delete GetListingRequestProto_reflection_;
  delete GetListingResponseProto::default_instance_;
  delete GetListingResponseProto_reflection_;
  delete GetBlockLocationsRequestProto::default_instance_;
  delete GetBlockLocationsRequestProto_reflection_;
  delete GetBlockLocationsResponseProto::default_instance_;
  delete GetBlockLocationsResponseProto_reflection_;
  delete FsServerDefaultsProto::default_instance_;
  delete FsServerDefaultsProto_reflection_;
  delete GetServerDefaultsRequestProto::default_instance_;
  delete GetServerDefaultsRequestProto_reflection_;
  delete GetServerDefaultsResponseProto::default_instance_;
  delete GetServerDefaultsResponseProto_reflection_;
  delete CreateRequestProto::default_instance_;
  delete CreateRequestProto_reflection_;
  delete CreateResponseProto::default_instance_;
  delete CreateResponseProto_reflection_;
  delete CompleteRequestProto::default_instance_;
  delete CompleteRequestProto_reflection_;
  delete CompleteResponseProto::default_instance_;
  delete CompleteResponseProto_reflection_;
  delete AddBlockRequestProto::default_instance_;
  delete AddBlockRequestProto_reflection_;
  delete AddBlockResponseProto::default_instance_;
  delete AddBlockResponseProto_reflection_;
  delete RenewLeaseRequestProto::default_instance_;
  delete RenewLeaseRequestProto_reflection_;
  delete RenewLeaseResponseProto::default_instance_;
  delete RenewLeaseResponseProto_reflection_;
  delete RenameRequestProto::default_instance_;
  delete RenameRequestProto_reflection_;
  delete RenameResponseProto::default_instance_;
  delete RenameResponseProto_reflection_;
  delete DeleteRequestProto::default_instance_;
  delete DeleteRequestProto_reflection_;
  delete DeleteResponseProto::default_instance_;
  delete DeleteResponseProto_reflection_;
  delete MkdirsRequestProto::default_instance_;
  delete MkdirsRequestProto_reflection_;
  delete MkdirsResponseProto::default_instance_;
  delete MkdirsResponseProto_reflection_;
  delete GetFsStatsRequestProto::default_instance_;
  delete GetFsStatsRequestProto_reflection_;
  delete GetFsStatsResponseProto::default_instance_;
  delete GetFsStatsResponseProto_reflection_;
  delete SetSafeModeRequestProto::default_instance_;
  delete SetSafeModeRequestProto_reflection_;
  delete SetSafeModeResponseProto::default_instance_;
  delete SetSafeModeResponseProto_reflection_;
  delete GetDatanodeReportRequestProto::default_instance_;
  delete GetDatanodeReportRequestProto_reflection_;
  delete GetDatanodeReportResponseProto::default_instance_;
  delete GetDatanodeReportResponseProto_reflection_;
}

void protobuf_AddDesc_namenode_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_namenode_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016namenode.proto\032\014common.proto\"\370\003\n\023HdfsF"
    "ileStatusProto\022/\n\010fileType\030\001 \002(\0162\035.HdfsF"
    "ileStatusProto.FileType\022\014\n\004path\030\002 \002(\014\022\016\n"
    "\006length\030\003 \002(\004\022&\n\npermission\030\004 \002(\0132\022.FsPe"
    "rmissionProto\022\r\n\005owner\030\005 \002(\t\022\r\n\005group\030\006 "
    "\002(\t\022\031\n\021modification_time\030\007 \002(\004\022\023\n\013access"
    "_time\030\010 \002(\004\022\017\n\007symlink\030\t \001(\014\022\034\n\021block_re"
    "plication\030\n \001(\r:\0010\022\024\n\tblocksize\030\013 \001(\004:\0010"
    "\022&\n\tlocations\030\014 \001(\0132\023.LocatedBlocksProto"
    "\022\021\n\006fileId\030\r \001(\004:\0010\022\027\n\013childrenNum\030\016 \001(\005"
    ":\002-1\0224\n\022fileEncryptionInfo\030\017 \001(\0132\030.FileE"
    "ncryptionInfoProto\022\030\n\rstoragePolicy\030\020 \001("
    "\r:\0010\"3\n\010FileType\022\n\n\006IS_DIR\020\001\022\013\n\007IS_FILE\020"
    "\002\022\016\n\nIS_SYMLINK\020\003\"_\n\025DirectoryListingPro"
    "to\022,\n\016partialListing\030\001 \003(\0132\024.HdfsFileSta"
    "tusProto\022\030\n\020remainingEntries\030\002 \002(\r\"&\n\027Ge"
    "tFileInfoRequestProto\022\013\n\003src\030\001 \002(\t\"<\n\030Ge"
    "tFileInfoResponseProto\022 \n\002fs\030\001 \001(\0132\024.Hdf"
    "sFileStatusProto\"O\n\026GetListingRequestPro"
    "to\022\013\n\003src\030\001 \002(\t\022\022\n\nstartAfter\030\002 \002(\014\022\024\n\014n"
    "eedLocation\030\003 \002(\010\"B\n\027GetListingResponseP"
    "roto\022\'\n\007dirList\030\001 \001(\0132\026.DirectoryListing"
    "Proto\"L\n\035GetBlockLocationsRequestProto\022\013"
    "\n\003src\030\001 \002(\t\022\016\n\006offset\030\002 \002(\004\022\016\n\006length\030\003 "
    "\002(\004\"H\n\036GetBlockLocationsResponseProto\022&\n"
    "\tlocations\030\001 \001(\0132\023.LocatedBlocksProto\"\257\002"
    "\n\025FsServerDefaultsProto\022\021\n\tblockSize\030\001 \002"
    "(\004\022\030\n\020bytesPerChecksum\030\002 \002(\r\022\027\n\017writePac"
    "ketSize\030\003 \002(\r\022\023\n\013replication\030\004 \002(\r\022\026\n\016fi"
    "leBufferSize\030\005 \002(\r\022\"\n\023encryptDataTransfe"
    "r\030\006 \001(\010:\005false\022\030\n\rtrashInterval\030\007 \001(\004:\0010"
    "\0228\n\014checksumType\030\010 \001(\0162\022.ChecksumTypePro"
    "to:\016CHECKSUM_CRC32\022\026\n\016keyProviderUri\030\t \001"
    "(\t\022\023\n\010policyId\030\n \001(\r:\0010\"\037\n\035GetServerDefa"
    "ultsRequestProto\"P\n\036GetServerDefaultsRes"
    "ponseProto\022.\n\016serverDefaults\030\001 \002(\0132\026.FsS"
    "erverDefaultsProto\"\347\001\n\022CreateRequestProt"
    "o\022\013\n\003src\030\001 \002(\t\022\"\n\006masked\030\002 \002(\0132\022.FsPermi"
    "ssionProto\022\022\n\nclientName\030\003 \002(\t\022\022\n\ncreate"
    "Flag\030\004 \002(\r\022\024\n\014createParent\030\005 \002(\010\022\023\n\013repl"
    "ication\030\006 \002(\r\022\021\n\tblockSize\030\007 \002(\004\022:\n\025cryp"
    "toProtocolVersion\030\010 \003(\0162\033.CryptoProtocol"
    "VersionProto\"7\n\023CreateResponseProto\022 \n\002f"
    "s\030\001 \001(\0132\024.HdfsFileStatusProto\"m\n\024Complet"
    "eRequestProto\022\013\n\003src\030\001 \002(\t\022\022\n\nclientName"
    "\030\002 \002(\t\022!\n\004last\030\003 \001(\0132\023.ExtendedBlockProt"
    "o\022\021\n\006fileId\030\004 \001(\004:\0010\"\'\n\025CompleteResponse"
    "Proto\022\016\n\006result\030\001 \002(\010\"\324\001\n\024AddBlockReques"
    "tProto\022\013\n\003src\030\001 \002(\t\022\022\n\nclientName\030\002 \002(\t\022"
    "%\n\010previous\030\003 \001(\0132\023.ExtendedBlockProto\022("
    "\n\014excludeNodes\030\004 \003(\0132\022.DatanodeInfoProto"
    "\022\021\n\006fileId\030\005 \001(\004:\0010\022\024\n\014favoredNodes\030\006 \003("
    "\t\022!\n\005flags\030\007 \003(\0162\022.AddBlockFlagProto\":\n\025"
    "AddBlockResponseProto\022!\n\005block\030\001 \002(\0132\022.L"
    "ocatedBlockProto\",\n\026RenewLeaseRequestPro"
    "to\022\022\n\nclientName\030\001 \002(\t\"\031\n\027RenewLeaseResp"
    "onseProto\".\n\022RenameRequestProto\022\013\n\003src\030\001"
    " \002(\t\022\013\n\003dst\030\002 \002(\t\"%\n\023RenameResponseProto"
    "\022\016\n\006result\030\001 \002(\010\"4\n\022DeleteRequestProto\022\013"
    "\n\003src\030\001 \002(\t\022\021\n\trecursive\030\002 \002(\010\"%\n\023Delete"
    "ResponseProto\022\016\n\006result\030\001 \002(\010\"[\n\022MkdirsR"
    "equestProto\022\013\n\003src\030\001 \002(\t\022\"\n\006masked\030\002 \002(\013"
    "2\022.FsPermissionProto\022\024\n\014createParent\030\003 \002"
    "(\010\"%\n\023MkdirsResponseProto\022\016\n\006result\030\001 \002("
    "\010\"\030\n\026GetFsStatsRequestProto\"\362\001\n\027GetFsSta"
    "tsResponseProto\022\020\n\010capacity\030\001 \002(\004\022\014\n\004use"
    "d\030\002 \002(\004\022\021\n\tremaining\030\003 \002(\004\022\030\n\020under_repl"
    "icated\030\004 \002(\004\022\026\n\016corrupt_blocks\030\005 \002(\004\022\026\n\016"
    "missing_blocks\030\006 \002(\004\022\037\n\027missing_repl_one"
    "_blocks\030\007 \001(\004\022\030\n\020blocks_in_future\030\010 \001(\004\022"
    "\037\n\027pending_deletion_blocks\030\t \001(\004\"W\n\027SetS"
    "afeModeRequestProto\022$\n\006action\030\001 \002(\0162\024.Sa"
    "feModeActionProto\022\026\n\007checked\030\002 \001(\010:\005fals"
    "e\"*\n\030SetSafeModeResponseProto\022\016\n\006result\030"
    "\001 \002(\010\"G\n\035GetDatanodeReportRequestProto\022&"
    "\n\004type\030\001 \002(\0162\030.DatanodeReportTypeProto\"@"
    "\n\036GetDatanodeReportResponseProto\022\036\n\002di\030\001"
    " \003(\0132\022.DatanodeInfoProto*\'\n\021AddBlockFlag"
    "Proto\022\022\n\016NO_LOCAL_WRITE\020\001*h\n\023SafeModeAct"
    "ionProto\022\022\n\016SAFEMODE_LEAVE\020\001\022\022\n\016SAFEMODE"
    "_ENTER\020\002\022\020\n\014SAFEMODE_GET\020\003\022\027\n\023SAFEMODE_F"
    "ORCE_EXIT\020\004*K\n\027DatanodeReportTypeProto\022\007"
    "\n\003ALL\020\001\022\010\n\004LIVE\020\002\022\010\n\004DEAD\020\003\022\023\n\017DECOMMISS"
    "IONING\020\004", 3328);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "namenode.proto", &protobuf_RegisterTypes);
  HdfsFileStatusProto::default_instance_ = new HdfsFileStatusProto();
  DirectoryListingProto::default_instance_ = new DirectoryListingProto();
  GetFileInfoRequestProto::default_instance_ = new GetFileInfoRequestProto();
  GetFileInfoResponseProto::default_instance_ = new GetFileInfoResponseProto();
  GetListingRequestProto::default_instance_ = new GetListingRequestProto();
  GetListingResponseProto::default_instance_ = new GetListingResponseProto();
  GetBlockLocationsRequestProto::default_instance_ = new GetBlockLocationsRequestProto();
  GetBlockLocationsResponseProto::default_instance_ = new GetBlockLocationsResponseProto();
  FsServerDefaultsProto::default_instance_ = new FsServerDefaultsProto();
  GetServerDefaultsRequestProto::default_instance_ = new GetServerDefaultsRequestProto();
  GetServerDefaultsResponseProto::default_instance_ = new GetServerDefaultsResponseProto();
  CreateRequestProto::default_instance_ = new CreateRequestProto();
  CreateResponseProto::default_instance_ = new CreateResponseProto();
  CompleteRequestProto::default_instance_ = new CompleteRequestProto();
  CompleteResponseProto::default_instance_ = new CompleteResponseProto();
  AddBlockRequestProto::default_instance_ = new AddBlockRequestProto();
  AddBlockResponseProto::default_instance_ = new AddBlockResponseProto();
  RenewLeaseRequestProto::default_instance_ = new RenewLeaseRequestProto();
  RenewLeaseResponseProto::default_instance_ = new RenewLeaseResponseProto();
  RenameRequestProto::default_instance_ = new RenameRequestProto();
  RenameResponseProto::default_instance_ = new RenameResponseProto();
  DeleteRequestProto::default_instance_ = new DeleteRequestProto();
  DeleteResponseProto::default_instance_ = new DeleteResponseProto();
  MkdirsRequestProto::default_instance_ = new MkdirsRequestProto();
  MkdirsResponseProto::default_instance_ = new MkdirsResponseProto();
  GetFsStatsRequestProto::default_instance_ = new GetFsStatsRequestProto();
  GetFsStatsResponseProto::default_instance_ = new GetFsStatsResponseProto();
  SetSafeModeRequestProto::default_instance_ = new SetSafeModeRequestProto();
  SetSafeModeResponseProto::default_instance_ = new SetSafeModeResponseProto();
  GetDatanodeReportRequestProto::default_instance_ = new GetDatanodeReportRequestProto();
  GetDatanodeReportResponseProto::default_instance_ = new GetDatanodeReportResponseProto();
  HdfsFileStatusProto::default_instance_->InitAsDefaultInstance();
  DirectoryListingProto::default_instance_->InitAsDefaultInstance();
  GetFileInfoRequestProto::default_instance_->InitAsDefaultInstance();
  GetFileInfoResponseProto::default_instance_->InitAsDefaultInstance();
  GetListingRequestProto::default_instance_->InitAsDefaultInstance();
  GetListingResponseProto::default_instance_->InitAsDefaultInstance();
  GetBlockLocationsRequestProto::default_instance_->InitAsDefaultInstance();
  GetBlockLocationsResponseProto::default_instance_->InitAsDefaultInstance();
  FsServerDefaultsProto::default_instance_->InitAsDefaultInstance();
  GetServerDefaultsRequestProto::default_instance_->InitAsDefaultInstance();
  GetServerDefaultsResponseProto::default_instance_->InitAsDefaultInstance();
  CreateRequestProto::default_instance_->InitAsDefaultInstance();
  CreateResponseProto::default_instance_->InitAsDefaultInstance();
  CompleteRequestProto::default_instance_->InitAsDefaultInstance();
  CompleteResponseProto::default_instance_->InitAsDefaultInstance();
  AddBlockRequestProto::default_instance_->InitAsDefaultInstance();
  AddBlockResponseProto::default_instance_->InitAsDefaultInstance();
  RenewLeaseRequestProto::default_instance_->InitAsDefaultInstance();
  RenewLeaseResponseProto::default_instance_->InitAsDefaultInstance();
  RenameRequestProto::default_instance_->InitAsDefaultInstance();
  RenameResponseProto::default_instance_->InitAsDefaultInstance();
  DeleteRequestProto::default_instance_->InitAsDefaultInstance();
  DeleteResponseProto::default_instance_->InitAsDefaultInstance();
  MkdirsRequestProto::default_instance_->InitAsDefaultInstance();
  MkdirsResponseProto::default_instance_->InitAsDefaultInstance();
  GetFsStatsRequestProto::default_instance_->InitAsDefaultInstance();
  GetFsStatsResponseProto::default_instance_->InitAsDefaultInstance();
  SetSafeModeRequestProto::default_instance_->InitAsDefaultInstance();
  SetSafeModeResponseProto::default_instance_->InitAsDefaultInstance();
  GetDatanodeReportRequestProto::default_instance_->InitAsDefaultInstance();
  GetDatanodeReportResponseProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_namenode_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_namenode_2eproto {
  StaticDescriptorInitializer_namenode_2eproto() {
    protobuf_AddDesc_namenode_2eproto();
  }
} static_descriptor_initializer_namenode_2eproto_;
const ::google::protobuf::EnumDescriptor* AddBlockFlagProto_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddBlockFlagProto_descriptor_;
}
bool AddBlockFlagProto_IsValid(int value) {
  switch(value) {
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SafeModeActionProto_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SafeModeActionProto_descriptor_;
}
bool SafeModeActionProto_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DatanodeReportTypeProto_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DatanodeReportTypeProto_descriptor_;
}
bool DatanodeReportTypeProto_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* HdfsFileStatusProto_FileType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HdfsFileStatusProto_FileType_descriptor_;
}
bool HdfsFileStatusProto_FileType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HdfsFileStatusProto_FileType HdfsFileStatusProto::IS_DIR;
const HdfsFileStatusProto_FileType HdfsFileStatusProto::IS_FILE;
const HdfsFileStatusProto_FileType HdfsFileStatusProto::IS_SYMLINK;
const HdfsFileStatusProto_FileType HdfsFileStatusProto::FileType_MIN;
const HdfsFileStatusProto_FileType HdfsFileStatusProto::FileType_MAX;
const int HdfsFileStatusProto::FileType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HdfsFileStatusProto::kFileTypeFieldNumber;
const int HdfsFileStatusProto::kPathFieldNumber;
const int HdfsFileStatusProto::kLengthFieldNumber;
const int HdfsFileStatusProto::kPermissionFieldNumber;
const int HdfsFileStatusProto::kOwnerFieldNumber;
const int HdfsFileStatusProto::kGroupFieldNumber;
const int HdfsFileStatusProto::kModificationTimeFieldNumber;
const int HdfsFileStatusProto::kAccessTimeFieldNumber;
const int HdfsFileStatusProto::kSymlinkFieldNumber;
const int HdfsFileStatusProto::kBlockReplicationFieldNumber;
const int HdfsFileStatusProto::kBlocksizeFieldNumber;
const int HdfsFileStatusProto::kLocationsFieldNumber;
const int HdfsFileStatusProto::kFileIdFieldNumber;
const int HdfsFileStatusProto::kChildrenNumFieldNumber;
const int HdfsFileStatusProto::kFileEncryptionInfoFieldNumber;
const int HdfsFileStatusProto::kStoragePolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HdfsFileStatusProto::HdfsFileStatusProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HdfsFileStatusProto)
}

void HdfsFileStatusProto::InitAsDefaultInstance() {
  permission_ = const_cast< ::FsPermissionProto*>(&::FsPermissionProto::default_instance());
  locations_ = const_cast< ::LocatedBlocksProto*>(&::LocatedBlocksProto::default_instance());
  fileencryptioninfo_ = const_cast< ::FileEncryptionInfoProto*>(&::FileEncryptionInfoProto::default_instance());
}

HdfsFileStatusProto::HdfsFileStatusProto(const HdfsFileStatusProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HdfsFileStatusProto)
}

void HdfsFileStatusProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  filetype_ = 1;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  length_ = GOOGLE_ULONGLONG(0);
  permission_ = NULL;
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modification_time_ = GOOGLE_ULONGLONG(0);
  access_time_ = GOOGLE_ULONGLONG(0);
  symlink_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_replication_ = 0u;
  blocksize_ = GOOGLE_ULONGLONG(0);
  locations_ = NULL;
  fileid_ = GOOGLE_ULONGLONG(0);
  childrennum_ = -1;
  fileencryptioninfo_ = NULL;
  storagepolicy_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HdfsFileStatusProto::~HdfsFileStatusProto() {
  // @@protoc_insertion_point(destructor:HdfsFileStatusProto)
  SharedDtor();
}

void HdfsFileStatusProto::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symlink_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete permission_;
    delete locations_;
    delete fileencryptioninfo_;
  }
}

void HdfsFileStatusProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HdfsFileStatusProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HdfsFileStatusProto_descriptor_;
}

const HdfsFileStatusProto& HdfsFileStatusProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

HdfsFileStatusProto* HdfsFileStatusProto::default_instance_ = NULL;

HdfsFileStatusProto* HdfsFileStatusProto::New(::google::protobuf::Arena* arena) const {
  HdfsFileStatusProto* n = new HdfsFileStatusProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HdfsFileStatusProto::Clear() {
// @@protoc_insertion_point(message_clear_start:HdfsFileStatusProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HdfsFileStatusProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HdfsFileStatusProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(modification_time_, access_time_);
    filetype_ = 1;
    if (has_path()) {
      path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    length_ = GOOGLE_ULONGLONG(0);
    if (has_permission()) {
      if (permission_ != NULL) permission_->::FsPermissionProto::Clear();
    }
    if (has_owner()) {
      owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_group()) {
      group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_symlink()) {
      symlink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    block_replication_ = 0u;
    blocksize_ = GOOGLE_ULONGLONG(0);
    if (has_locations()) {
      if (locations_ != NULL) locations_->::LocatedBlocksProto::Clear();
    }
    fileid_ = GOOGLE_ULONGLONG(0);
    childrennum_ = -1;
    if (has_fileencryptioninfo()) {
      if (fileencryptioninfo_ != NULL) fileencryptioninfo_->::FileEncryptionInfoProto::Clear();
    }
    storagepolicy_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HdfsFileStatusProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HdfsFileStatusProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .HdfsFileStatusProto.FileType fileType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::HdfsFileStatusProto_FileType_IsValid(value)) {
            set_filetype(static_cast< ::HdfsFileStatusProto_FileType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // required bytes path = 2;
      case 2: {
        if (tag == 18) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_path()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_length;
        break;
      }

      // required uint64 length = 3;
      case 3: {
        if (tag == 24) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
          set_has_length();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_permission;
        break;
      }

      // required .FsPermissionProto permission = 4;
      case 4: {
        if (tag == 34) {
         parse_permission:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_permission()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_owner;
        break;
      }

      // required string owner = 5;
      case 5: {
        if (tag == 42) {
         parse_owner:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->owner().data(), this->owner().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "HdfsFileStatusProto.owner");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_group;
        break;
      }

      // required string group = 6;
      case 6: {
        if (tag == 50) {
         parse_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "HdfsFileStatusProto.group");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_modification_time;
        break;
      }

      // required uint64 modification_time = 7;
      case 7: {
        if (tag == 56) {
         parse_modification_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modification_time_)));
          set_has_modification_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_access_time;
        break;
      }

      // required uint64 access_time = 8;
      case 8: {
        if (tag == 64) {
         parse_access_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &access_time_)));
          set_has_access_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_symlink;
        break;
      }

      // optional bytes symlink = 9;
      case 9: {
        if (tag == 74) {
         parse_symlink:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_symlink()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_block_replication;
        break;
      }

      // optional uint32 block_replication = 10 [default = 0];
      case 10: {
        if (tag == 80) {
         parse_block_replication:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_replication_)));
          set_has_block_replication();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_blocksize;
        break;
      }

      // optional uint64 blocksize = 11 [default = 0];
      case 11: {
        if (tag == 88) {
         parse_blocksize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &blocksize_)));
          set_has_blocksize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_locations;
        break;
      }

      // optional .LocatedBlocksProto locations = 12;
      case 12: {
        if (tag == 98) {
         parse_locations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_fileId;
        break;
      }

      // optional uint64 fileId = 13 [default = 0];
      case 13: {
        if (tag == 104) {
         parse_fileId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fileid_)));
          set_has_fileid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_childrenNum;
        break;
      }

      // optional int32 childrenNum = 14 [default = -1];
      case 14: {
        if (tag == 112) {
         parse_childrenNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &childrennum_)));
          set_has_childrennum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_fileEncryptionInfo;
        break;
      }

      // optional .FileEncryptionInfoProto fileEncryptionInfo = 15;
      case 15: {
        if (tag == 122) {
         parse_fileEncryptionInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fileencryptioninfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_storagePolicy;
        break;
      }

      // optional uint32 storagePolicy = 16 [default = 0];
      case 16: {
        if (tag == 128) {
         parse_storagePolicy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &storagepolicy_)));
          set_has_storagepolicy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HdfsFileStatusProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HdfsFileStatusProto)
  return false;
#undef DO_
}

void HdfsFileStatusProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HdfsFileStatusProto)
  // required .HdfsFileStatusProto.FileType fileType = 1;
  if (has_filetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->filetype(), output);
  }

  // required bytes path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->path(), output);
  }

  // required uint64 length = 3;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->length(), output);
  }

  // required .FsPermissionProto permission = 4;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->permission_, output);
  }

  // required string owner = 5;
  if (has_owner()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "HdfsFileStatusProto.owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->owner(), output);
  }

  // required string group = 6;
  if (has_group()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "HdfsFileStatusProto.group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->group(), output);
  }

  // required uint64 modification_time = 7;
  if (has_modification_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->modification_time(), output);
  }

  // required uint64 access_time = 8;
  if (has_access_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->access_time(), output);
  }

  // optional bytes symlink = 9;
  if (has_symlink()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->symlink(), output);
  }

  // optional uint32 block_replication = 10 [default = 0];
  if (has_block_replication()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->block_replication(), output);
  }

  // optional uint64 blocksize = 11 [default = 0];
  if (has_blocksize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->blocksize(), output);
  }

  // optional .LocatedBlocksProto locations = 12;
  if (has_locations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->locations_, output);
  }

  // optional uint64 fileId = 13 [default = 0];
  if (has_fileid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->fileid(), output);
  }

  // optional int32 childrenNum = 14 [default = -1];
  if (has_childrennum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->childrennum(), output);
  }

  // optional .FileEncryptionInfoProto fileEncryptionInfo = 15;
  if (has_fileencryptioninfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->fileencryptioninfo_, output);
  }

  // optional uint32 storagePolicy = 16 [default = 0];
  if (has_storagepolicy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->storagepolicy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HdfsFileStatusProto)
}

::google::protobuf::uint8* HdfsFileStatusProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HdfsFileStatusProto)
  // required .HdfsFileStatusProto.FileType fileType = 1;
  if (has_filetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->filetype(), target);
  }

  // required bytes path = 2;
  if (has_path()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->path(), target);
  }

  // required uint64 length = 3;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->length(), target);
  }

  // required .FsPermissionProto permission = 4;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->permission_, false, target);
  }

  // required string owner = 5;
  if (has_owner()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "HdfsFileStatusProto.owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->owner(), target);
  }

  // required string group = 6;
  if (has_group()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "HdfsFileStatusProto.group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->group(), target);
  }

  // required uint64 modification_time = 7;
  if (has_modification_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->modification_time(), target);
  }

  // required uint64 access_time = 8;
  if (has_access_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->access_time(), target);
  }

  // optional bytes symlink = 9;
  if (has_symlink()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->symlink(), target);
  }

  // optional uint32 block_replication = 10 [default = 0];
  if (has_block_replication()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->block_replication(), target);
  }

  // optional uint64 blocksize = 11 [default = 0];
  if (has_blocksize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->blocksize(), target);
  }

  // optional .LocatedBlocksProto locations = 12;
  if (has_locations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->locations_, false, target);
  }

  // optional uint64 fileId = 13 [default = 0];
  if (has_fileid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->fileid(), target);
  }

  // optional int32 childrenNum = 14 [default = -1];
  if (has_childrennum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->childrennum(), target);
  }

  // optional .FileEncryptionInfoProto fileEncryptionInfo = 15;
  if (has_fileencryptioninfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->fileencryptioninfo_, false, target);
  }

  // optional uint32 storagePolicy = 16 [default = 0];
  if (has_storagepolicy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->storagepolicy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HdfsFileStatusProto)
  return target;
}

int HdfsFileStatusProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HdfsFileStatusProto)
  int total_size = 0;

  if (has_filetype()) {
    // required .HdfsFileStatusProto.FileType fileType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->filetype());
  }

  if (has_path()) {
    // required bytes path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->path());
  }

  if (has_length()) {
    // required uint64 length = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());
  }

  if (has_permission()) {
    // required .FsPermissionProto permission = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->permission_);
  }

  if (has_owner()) {
    // required string owner = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner());
  }

  if (has_group()) {
    // required string group = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());
  }

  if (has_modification_time()) {
    // required uint64 modification_time = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modification_time());
  }

  if (has_access_time()) {
    // required uint64 access_time = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->access_time());
  }

  return total_size;
}
int HdfsFileStatusProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:HdfsFileStatusProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required .HdfsFileStatusProto.FileType fileType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->filetype());

    // required bytes path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->path());

    // required uint64 length = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());

    // required .FsPermissionProto permission = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->permission_);

    // required string owner = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner());

    // required string group = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());

    // required uint64 modification_time = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modification_time());

    // required uint64 access_time = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->access_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bytes symlink = 9;
    if (has_symlink()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->symlink());
    }

    // optional uint32 block_replication = 10 [default = 0];
    if (has_block_replication()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->block_replication());
    }

    // optional uint64 blocksize = 11 [default = 0];
    if (has_blocksize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->blocksize());
    }

    // optional .LocatedBlocksProto locations = 12;
    if (has_locations()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->locations_);
    }

    // optional uint64 fileId = 13 [default = 0];
    if (has_fileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fileid());
    }

    // optional int32 childrenNum = 14 [default = -1];
    if (has_childrennum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->childrennum());
    }

    // optional .FileEncryptionInfoProto fileEncryptionInfo = 15;
    if (has_fileencryptioninfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->fileencryptioninfo_);
    }

    // optional uint32 storagePolicy = 16 [default = 0];
    if (has_storagepolicy()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->storagepolicy());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HdfsFileStatusProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HdfsFileStatusProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HdfsFileStatusProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HdfsFileStatusProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HdfsFileStatusProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HdfsFileStatusProto)
    MergeFrom(*source);
  }
}

void HdfsFileStatusProto::MergeFrom(const HdfsFileStatusProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HdfsFileStatusProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_filetype()) {
      set_filetype(from.filetype());
    }
    if (from.has_path()) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (from.has_length()) {
      set_length(from.length());
    }
    if (from.has_permission()) {
      mutable_permission()->::FsPermissionProto::MergeFrom(from.permission());
    }
    if (from.has_owner()) {
      set_has_owner();
      owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
    }
    if (from.has_group()) {
      set_has_group();
      group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
    }
    if (from.has_modification_time()) {
      set_modification_time(from.modification_time());
    }
    if (from.has_access_time()) {
      set_access_time(from.access_time());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_symlink()) {
      set_has_symlink();
      symlink_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symlink_);
    }
    if (from.has_block_replication()) {
      set_block_replication(from.block_replication());
    }
    if (from.has_blocksize()) {
      set_blocksize(from.blocksize());
    }
    if (from.has_locations()) {
      mutable_locations()->::LocatedBlocksProto::MergeFrom(from.locations());
    }
    if (from.has_fileid()) {
      set_fileid(from.fileid());
    }
    if (from.has_childrennum()) {
      set_childrennum(from.childrennum());
    }
    if (from.has_fileencryptioninfo()) {
      mutable_fileencryptioninfo()->::FileEncryptionInfoProto::MergeFrom(from.fileencryptioninfo());
    }
    if (from.has_storagepolicy()) {
      set_storagepolicy(from.storagepolicy());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HdfsFileStatusProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HdfsFileStatusProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HdfsFileStatusProto::CopyFrom(const HdfsFileStatusProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HdfsFileStatusProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HdfsFileStatusProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  if (has_permission()) {
    if (!this->permission_->IsInitialized()) return false;
  }
  if (has_locations()) {
    if (!this->locations_->IsInitialized()) return false;
  }
  if (has_fileencryptioninfo()) {
    if (!this->fileencryptioninfo_->IsInitialized()) return false;
  }
  return true;
}

void HdfsFileStatusProto::Swap(HdfsFileStatusProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HdfsFileStatusProto::InternalSwap(HdfsFileStatusProto* other) {
  std::swap(filetype_, other->filetype_);
  path_.Swap(&other->path_);
  std::swap(length_, other->length_);
  std::swap(permission_, other->permission_);
  owner_.Swap(&other->owner_);
  group_.Swap(&other->group_);
  std::swap(modification_time_, other->modification_time_);
  std::swap(access_time_, other->access_time_);
  symlink_.Swap(&other->symlink_);
  std::swap(block_replication_, other->block_replication_);
  std::swap(blocksize_, other->blocksize_);
  std::swap(locations_, other->locations_);
  std::swap(fileid_, other->fileid_);
  std::swap(childrennum_, other->childrennum_);
  std::swap(fileencryptioninfo_, other->fileencryptioninfo_);
  std::swap(storagepolicy_, other->storagepolicy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HdfsFileStatusProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HdfsFileStatusProto_descriptor_;
  metadata.reflection = HdfsFileStatusProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HdfsFileStatusProto

// required .HdfsFileStatusProto.FileType fileType = 1;
bool HdfsFileStatusProto::has_filetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HdfsFileStatusProto::set_has_filetype() {
  _has_bits_[0] |= 0x00000001u;
}
void HdfsFileStatusProto::clear_has_filetype() {
  _has_bits_[0] &= ~0x00000001u;
}
void HdfsFileStatusProto::clear_filetype() {
  filetype_ = 1;
  clear_has_filetype();
}
 ::HdfsFileStatusProto_FileType HdfsFileStatusProto::filetype() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.fileType)
  return static_cast< ::HdfsFileStatusProto_FileType >(filetype_);
}
 void HdfsFileStatusProto::set_filetype(::HdfsFileStatusProto_FileType value) {
  assert(::HdfsFileStatusProto_FileType_IsValid(value));
  set_has_filetype();
  filetype_ = value;
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.fileType)
}

// required bytes path = 2;
bool HdfsFileStatusProto::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HdfsFileStatusProto::set_has_path() {
  _has_bits_[0] |= 0x00000002u;
}
void HdfsFileStatusProto::clear_has_path() {
  _has_bits_[0] &= ~0x00000002u;
}
void HdfsFileStatusProto::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
 const ::std::string& HdfsFileStatusProto::path() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HdfsFileStatusProto::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.path)
}
 void HdfsFileStatusProto::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HdfsFileStatusProto.path)
}
 void HdfsFileStatusProto::set_path(const void* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HdfsFileStatusProto.path)
}
 ::std::string* HdfsFileStatusProto::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:HdfsFileStatusProto.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HdfsFileStatusProto::release_path() {
  // @@protoc_insertion_point(field_release:HdfsFileStatusProto.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HdfsFileStatusProto::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:HdfsFileStatusProto.path)
}

// required uint64 length = 3;
bool HdfsFileStatusProto::has_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HdfsFileStatusProto::set_has_length() {
  _has_bits_[0] |= 0x00000004u;
}
void HdfsFileStatusProto::clear_has_length() {
  _has_bits_[0] &= ~0x00000004u;
}
void HdfsFileStatusProto::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
  clear_has_length();
}
 ::google::protobuf::uint64 HdfsFileStatusProto::length() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.length)
  return length_;
}
 void HdfsFileStatusProto::set_length(::google::protobuf::uint64 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.length)
}

// required .FsPermissionProto permission = 4;
bool HdfsFileStatusProto::has_permission() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HdfsFileStatusProto::set_has_permission() {
  _has_bits_[0] |= 0x00000008u;
}
void HdfsFileStatusProto::clear_has_permission() {
  _has_bits_[0] &= ~0x00000008u;
}
void HdfsFileStatusProto::clear_permission() {
  if (permission_ != NULL) permission_->::FsPermissionProto::Clear();
  clear_has_permission();
}
const ::FsPermissionProto& HdfsFileStatusProto::permission() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.permission)
  return permission_ != NULL ? *permission_ : *default_instance_->permission_;
}
::FsPermissionProto* HdfsFileStatusProto::mutable_permission() {
  set_has_permission();
  if (permission_ == NULL) {
    permission_ = new ::FsPermissionProto;
  }
  // @@protoc_insertion_point(field_mutable:HdfsFileStatusProto.permission)
  return permission_;
}
::FsPermissionProto* HdfsFileStatusProto::release_permission() {
  // @@protoc_insertion_point(field_release:HdfsFileStatusProto.permission)
  clear_has_permission();
  ::FsPermissionProto* temp = permission_;
  permission_ = NULL;
  return temp;
}
void HdfsFileStatusProto::set_allocated_permission(::FsPermissionProto* permission) {
  delete permission_;
  permission_ = permission;
  if (permission) {
    set_has_permission();
  } else {
    clear_has_permission();
  }
  // @@protoc_insertion_point(field_set_allocated:HdfsFileStatusProto.permission)
}

// required string owner = 5;
bool HdfsFileStatusProto::has_owner() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HdfsFileStatusProto::set_has_owner() {
  _has_bits_[0] |= 0x00000010u;
}
void HdfsFileStatusProto::clear_has_owner() {
  _has_bits_[0] &= ~0x00000010u;
}
void HdfsFileStatusProto::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_owner();
}
 const ::std::string& HdfsFileStatusProto::owner() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.owner)
  return owner_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HdfsFileStatusProto::set_owner(const ::std::string& value) {
  set_has_owner();
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.owner)
}
 void HdfsFileStatusProto::set_owner(const char* value) {
  set_has_owner();
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HdfsFileStatusProto.owner)
}
 void HdfsFileStatusProto::set_owner(const char* value, size_t size) {
  set_has_owner();
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HdfsFileStatusProto.owner)
}
 ::std::string* HdfsFileStatusProto::mutable_owner() {
  set_has_owner();
  // @@protoc_insertion_point(field_mutable:HdfsFileStatusProto.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HdfsFileStatusProto::release_owner() {
  // @@protoc_insertion_point(field_release:HdfsFileStatusProto.owner)
  clear_has_owner();
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HdfsFileStatusProto::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    set_has_owner();
  } else {
    clear_has_owner();
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:HdfsFileStatusProto.owner)
}

// required string group = 6;
bool HdfsFileStatusProto::has_group() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void HdfsFileStatusProto::set_has_group() {
  _has_bits_[0] |= 0x00000020u;
}
void HdfsFileStatusProto::clear_has_group() {
  _has_bits_[0] &= ~0x00000020u;
}
void HdfsFileStatusProto::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_group();
}
 const ::std::string& HdfsFileStatusProto::group() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.group)
  return group_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HdfsFileStatusProto::set_group(const ::std::string& value) {
  set_has_group();
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.group)
}
 void HdfsFileStatusProto::set_group(const char* value) {
  set_has_group();
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HdfsFileStatusProto.group)
}
 void HdfsFileStatusProto::set_group(const char* value, size_t size) {
  set_has_group();
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HdfsFileStatusProto.group)
}
 ::std::string* HdfsFileStatusProto::mutable_group() {
  set_has_group();
  // @@protoc_insertion_point(field_mutable:HdfsFileStatusProto.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HdfsFileStatusProto::release_group() {
  // @@protoc_insertion_point(field_release:HdfsFileStatusProto.group)
  clear_has_group();
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HdfsFileStatusProto::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    set_has_group();
  } else {
    clear_has_group();
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:HdfsFileStatusProto.group)
}

// required uint64 modification_time = 7;
bool HdfsFileStatusProto::has_modification_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void HdfsFileStatusProto::set_has_modification_time() {
  _has_bits_[0] |= 0x00000040u;
}
void HdfsFileStatusProto::clear_has_modification_time() {
  _has_bits_[0] &= ~0x00000040u;
}
void HdfsFileStatusProto::clear_modification_time() {
  modification_time_ = GOOGLE_ULONGLONG(0);
  clear_has_modification_time();
}
 ::google::protobuf::uint64 HdfsFileStatusProto::modification_time() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.modification_time)
  return modification_time_;
}
 void HdfsFileStatusProto::set_modification_time(::google::protobuf::uint64 value) {
  set_has_modification_time();
  modification_time_ = value;
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.modification_time)
}

// required uint64 access_time = 8;
bool HdfsFileStatusProto::has_access_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void HdfsFileStatusProto::set_has_access_time() {
  _has_bits_[0] |= 0x00000080u;
}
void HdfsFileStatusProto::clear_has_access_time() {
  _has_bits_[0] &= ~0x00000080u;
}
void HdfsFileStatusProto::clear_access_time() {
  access_time_ = GOOGLE_ULONGLONG(0);
  clear_has_access_time();
}
 ::google::protobuf::uint64 HdfsFileStatusProto::access_time() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.access_time)
  return access_time_;
}
 void HdfsFileStatusProto::set_access_time(::google::protobuf::uint64 value) {
  set_has_access_time();
  access_time_ = value;
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.access_time)
}

// optional bytes symlink = 9;
bool HdfsFileStatusProto::has_symlink() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void HdfsFileStatusProto::set_has_symlink() {
  _has_bits_[0] |= 0x00000100u;
}
void HdfsFileStatusProto::clear_has_symlink() {
  _has_bits_[0] &= ~0x00000100u;
}
void HdfsFileStatusProto::clear_symlink() {
  symlink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_symlink();
}
 const ::std::string& HdfsFileStatusProto::symlink() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.symlink)
  return symlink_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HdfsFileStatusProto::set_symlink(const ::std::string& value) {
  set_has_symlink();
  symlink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.symlink)
}
 void HdfsFileStatusProto::set_symlink(const char* value) {
  set_has_symlink();
  symlink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HdfsFileStatusProto.symlink)
}
 void HdfsFileStatusProto::set_symlink(const void* value, size_t size) {
  set_has_symlink();
  symlink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HdfsFileStatusProto.symlink)
}
 ::std::string* HdfsFileStatusProto::mutable_symlink() {
  set_has_symlink();
  // @@protoc_insertion_point(field_mutable:HdfsFileStatusProto.symlink)
  return symlink_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HdfsFileStatusProto::release_symlink() {
  // @@protoc_insertion_point(field_release:HdfsFileStatusProto.symlink)
  clear_has_symlink();
  return symlink_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HdfsFileStatusProto::set_allocated_symlink(::std::string* symlink) {
  if (symlink != NULL) {
    set_has_symlink();
  } else {
    clear_has_symlink();
  }
  symlink_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symlink);
  // @@protoc_insertion_point(field_set_allocated:HdfsFileStatusProto.symlink)
}

// optional uint32 block_replication = 10 [default = 0];
bool HdfsFileStatusProto::has_block_replication() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void HdfsFileStatusProto::set_has_block_replication() {
  _has_bits_[0] |= 0x00000200u;
}
void HdfsFileStatusProto::clear_has_block_replication() {
  _has_bits_[0] &= ~0x00000200u;
}
void HdfsFileStatusProto::clear_block_replication() {
  block_replication_ = 0u;
  clear_has_block_replication();
}
 ::google::protobuf::uint32 HdfsFileStatusProto::block_replication() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.block_replication)
  return block_replication_;
}
 void HdfsFileStatusProto::set_block_replication(::google::protobuf::uint32 value) {
  set_has_block_replication();
  block_replication_ = value;
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.block_replication)
}

// optional uint64 blocksize = 11 [default = 0];
bool HdfsFileStatusProto::has_blocksize() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void HdfsFileStatusProto::set_has_blocksize() {
  _has_bits_[0] |= 0x00000400u;
}
void HdfsFileStatusProto::clear_has_blocksize() {
  _has_bits_[0] &= ~0x00000400u;
}
void HdfsFileStatusProto::clear_blocksize() {
  blocksize_ = GOOGLE_ULONGLONG(0);
  clear_has_blocksize();
}
 ::google::protobuf::uint64 HdfsFileStatusProto::blocksize() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.blocksize)
  return blocksize_;
}
 void HdfsFileStatusProto::set_blocksize(::google::protobuf::uint64 value) {
  set_has_blocksize();
  blocksize_ = value;
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.blocksize)
}

// optional .LocatedBlocksProto locations = 12;
bool HdfsFileStatusProto::has_locations() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void HdfsFileStatusProto::set_has_locations() {
  _has_bits_[0] |= 0x00000800u;
}
void HdfsFileStatusProto::clear_has_locations() {
  _has_bits_[0] &= ~0x00000800u;
}
void HdfsFileStatusProto::clear_locations() {
  if (locations_ != NULL) locations_->::LocatedBlocksProto::Clear();
  clear_has_locations();
}
const ::LocatedBlocksProto& HdfsFileStatusProto::locations() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.locations)
  return locations_ != NULL ? *locations_ : *default_instance_->locations_;
}
::LocatedBlocksProto* HdfsFileStatusProto::mutable_locations() {
  set_has_locations();
  if (locations_ == NULL) {
    locations_ = new ::LocatedBlocksProto;
  }
  // @@protoc_insertion_point(field_mutable:HdfsFileStatusProto.locations)
  return locations_;
}
::LocatedBlocksProto* HdfsFileStatusProto::release_locations() {
  // @@protoc_insertion_point(field_release:HdfsFileStatusProto.locations)
  clear_has_locations();
  ::LocatedBlocksProto* temp = locations_;
  locations_ = NULL;
  return temp;
}
void HdfsFileStatusProto::set_allocated_locations(::LocatedBlocksProto* locations) {
  delete locations_;
  locations_ = locations;
  if (locations) {
    set_has_locations();
  } else {
    clear_has_locations();
  }
  // @@protoc_insertion_point(field_set_allocated:HdfsFileStatusProto.locations)
}

// optional uint64 fileId = 13 [default = 0];
bool HdfsFileStatusProto::has_fileid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void HdfsFileStatusProto::set_has_fileid() {
  _has_bits_[0] |= 0x00001000u;
}
void HdfsFileStatusProto::clear_has_fileid() {
  _has_bits_[0] &= ~0x00001000u;
}
void HdfsFileStatusProto::clear_fileid() {
  fileid_ = GOOGLE_ULONGLONG(0);
  clear_has_fileid();
}
 ::google::protobuf::uint64 HdfsFileStatusProto::fileid() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.fileId)
  return fileid_;
}
 void HdfsFileStatusProto::set_fileid(::google::protobuf::uint64 value) {
  set_has_fileid();
  fileid_ = value;
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.fileId)
}

// optional int32 childrenNum = 14 [default = -1];
bool HdfsFileStatusProto::has_childrennum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void HdfsFileStatusProto::set_has_childrennum() {
  _has_bits_[0] |= 0x00002000u;
}
void HdfsFileStatusProto::clear_has_childrennum() {
  _has_bits_[0] &= ~0x00002000u;
}
void HdfsFileStatusProto::clear_childrennum() {
  childrennum_ = -1;
  clear_has_childrennum();
}
 ::google::protobuf::int32 HdfsFileStatusProto::childrennum() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.childrenNum)
  return childrennum_;
}
 void HdfsFileStatusProto::set_childrennum(::google::protobuf::int32 value) {
  set_has_childrennum();
  childrennum_ = value;
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.childrenNum)
}

// optional .FileEncryptionInfoProto fileEncryptionInfo = 15;
bool HdfsFileStatusProto::has_fileencryptioninfo() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void HdfsFileStatusProto::set_has_fileencryptioninfo() {
  _has_bits_[0] |= 0x00004000u;
}
void HdfsFileStatusProto::clear_has_fileencryptioninfo() {
  _has_bits_[0] &= ~0x00004000u;
}
void HdfsFileStatusProto::clear_fileencryptioninfo() {
  if (fileencryptioninfo_ != NULL) fileencryptioninfo_->::FileEncryptionInfoProto::Clear();
  clear_has_fileencryptioninfo();
}
const ::FileEncryptionInfoProto& HdfsFileStatusProto::fileencryptioninfo() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.fileEncryptionInfo)
  return fileencryptioninfo_ != NULL ? *fileencryptioninfo_ : *default_instance_->fileencryptioninfo_;
}
::FileEncryptionInfoProto* HdfsFileStatusProto::mutable_fileencryptioninfo() {
  set_has_fileencryptioninfo();
  if (fileencryptioninfo_ == NULL) {
    fileencryptioninfo_ = new ::FileEncryptionInfoProto;
  }
  // @@protoc_insertion_point(field_mutable:HdfsFileStatusProto.fileEncryptionInfo)
  return fileencryptioninfo_;
}
::FileEncryptionInfoProto* HdfsFileStatusProto::release_fileencryptioninfo() {
  // @@protoc_insertion_point(field_release:HdfsFileStatusProto.fileEncryptionInfo)
  clear_has_fileencryptioninfo();
  ::FileEncryptionInfoProto* temp = fileencryptioninfo_;
  fileencryptioninfo_ = NULL;
  return temp;
}
void HdfsFileStatusProto::set_allocated_fileencryptioninfo(::FileEncryptionInfoProto* fileencryptioninfo) {
  delete fileencryptioninfo_;
  fileencryptioninfo_ = fileencryptioninfo;
  if (fileencryptioninfo) {
    set_has_fileencryptioninfo();
  } else {
    clear_has_fileencryptioninfo();
  }
  // @@protoc_insertion_point(field_set_allocated:HdfsFileStatusProto.fileEncryptionInfo)
}

// optional uint32 storagePolicy = 16 [default = 0];
bool HdfsFileStatusProto::has_storagepolicy() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void HdfsFileStatusProto::set_has_storagepolicy() {
  _has_bits_[0] |= 0x00008000u;
}
void HdfsFileStatusProto::clear_has_storagepolicy() {
  _has_bits_[0] &= ~0x00008000u;
}
void HdfsFileStatusProto::clear_storagepolicy() {
  storagepolicy_ = 0u;
  clear_has_storagepolicy();
}
 ::google::protobuf::uint32 HdfsFileStatusProto::storagepolicy() const {
  // @@protoc_insertion_point(field_get:HdfsFileStatusProto.storagePolicy)
  return storagepolicy_;
}
 void HdfsFileStatusProto::set_storagepolicy(::google::protobuf::uint32 value) {
  set_has_storagepolicy();
  storagepolicy_ = value;
  // @@protoc_insertion_point(field_set:HdfsFileStatusProto.storagePolicy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DirectoryListingProto::kPartialListingFieldNumber;
const int DirectoryListingProto::kRemainingEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DirectoryListingProto::DirectoryListingProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DirectoryListingProto)
}

void DirectoryListingProto::InitAsDefaultInstance() {
}

DirectoryListingProto::DirectoryListingProto(const DirectoryListingProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DirectoryListingProto)
}

void DirectoryListingProto::SharedCtor() {
  _cached_size_ = 0;
  remainingentries_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DirectoryListingProto::~DirectoryListingProto() {
  // @@protoc_insertion_point(destructor:DirectoryListingProto)
  SharedDtor();
}

void DirectoryListingProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DirectoryListingProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DirectoryListingProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DirectoryListingProto_descriptor_;
}

const DirectoryListingProto& DirectoryListingProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

DirectoryListingProto* DirectoryListingProto::default_instance_ = NULL;

DirectoryListingProto* DirectoryListingProto::New(::google::protobuf::Arena* arena) const {
  DirectoryListingProto* n = new DirectoryListingProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DirectoryListingProto::Clear() {
// @@protoc_insertion_point(message_clear_start:DirectoryListingProto)
  remainingentries_ = 0u;
  partiallisting_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DirectoryListingProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DirectoryListingProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HdfsFileStatusProto partialListing = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_partialListing:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_partiallisting()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_partialListing;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_remainingEntries;
        break;
      }

      // required uint32 remainingEntries = 2;
      case 2: {
        if (tag == 16) {
         parse_remainingEntries:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remainingentries_)));
          set_has_remainingentries();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DirectoryListingProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DirectoryListingProto)
  return false;
#undef DO_
}

void DirectoryListingProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DirectoryListingProto)
  // repeated .HdfsFileStatusProto partialListing = 1;
  for (unsigned int i = 0, n = this->partiallisting_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->partiallisting(i), output);
  }

  // required uint32 remainingEntries = 2;
  if (has_remainingentries()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->remainingentries(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DirectoryListingProto)
}

::google::protobuf::uint8* DirectoryListingProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DirectoryListingProto)
  // repeated .HdfsFileStatusProto partialListing = 1;
  for (unsigned int i = 0, n = this->partiallisting_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->partiallisting(i), false, target);
  }

  // required uint32 remainingEntries = 2;
  if (has_remainingentries()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->remainingentries(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DirectoryListingProto)
  return target;
}

int DirectoryListingProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DirectoryListingProto)
  int total_size = 0;

  // required uint32 remainingEntries = 2;
  if (has_remainingentries()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remainingentries());
  }
  // repeated .HdfsFileStatusProto partialListing = 1;
  total_size += 1 * this->partiallisting_size();
  for (int i = 0; i < this->partiallisting_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->partiallisting(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DirectoryListingProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DirectoryListingProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DirectoryListingProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DirectoryListingProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DirectoryListingProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DirectoryListingProto)
    MergeFrom(*source);
  }
}

void DirectoryListingProto::MergeFrom(const DirectoryListingProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DirectoryListingProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  partiallisting_.MergeFrom(from.partiallisting_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_remainingentries()) {
      set_remainingentries(from.remainingentries());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DirectoryListingProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DirectoryListingProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirectoryListingProto::CopyFrom(const DirectoryListingProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DirectoryListingProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirectoryListingProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->partiallisting())) return false;
  return true;
}

void DirectoryListingProto::Swap(DirectoryListingProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DirectoryListingProto::InternalSwap(DirectoryListingProto* other) {
  partiallisting_.UnsafeArenaSwap(&other->partiallisting_);
  std::swap(remainingentries_, other->remainingentries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DirectoryListingProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DirectoryListingProto_descriptor_;
  metadata.reflection = DirectoryListingProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DirectoryListingProto

// repeated .HdfsFileStatusProto partialListing = 1;
int DirectoryListingProto::partiallisting_size() const {
  return partiallisting_.size();
}
void DirectoryListingProto::clear_partiallisting() {
  partiallisting_.Clear();
}
const ::HdfsFileStatusProto& DirectoryListingProto::partiallisting(int index) const {
  // @@protoc_insertion_point(field_get:DirectoryListingProto.partialListing)
  return partiallisting_.Get(index);
}
::HdfsFileStatusProto* DirectoryListingProto::mutable_partiallisting(int index) {
  // @@protoc_insertion_point(field_mutable:DirectoryListingProto.partialListing)
  return partiallisting_.Mutable(index);
}
::HdfsFileStatusProto* DirectoryListingProto::add_partiallisting() {
  // @@protoc_insertion_point(field_add:DirectoryListingProto.partialListing)
  return partiallisting_.Add();
}
::google::protobuf::RepeatedPtrField< ::HdfsFileStatusProto >*
DirectoryListingProto::mutable_partiallisting() {
  // @@protoc_insertion_point(field_mutable_list:DirectoryListingProto.partialListing)
  return &partiallisting_;
}
const ::google::protobuf::RepeatedPtrField< ::HdfsFileStatusProto >&
DirectoryListingProto::partiallisting() const {
  // @@protoc_insertion_point(field_list:DirectoryListingProto.partialListing)
  return partiallisting_;
}

// required uint32 remainingEntries = 2;
bool DirectoryListingProto::has_remainingentries() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DirectoryListingProto::set_has_remainingentries() {
  _has_bits_[0] |= 0x00000002u;
}
void DirectoryListingProto::clear_has_remainingentries() {
  _has_bits_[0] &= ~0x00000002u;
}
void DirectoryListingProto::clear_remainingentries() {
  remainingentries_ = 0u;
  clear_has_remainingentries();
}
 ::google::protobuf::uint32 DirectoryListingProto::remainingentries() const {
  // @@protoc_insertion_point(field_get:DirectoryListingProto.remainingEntries)
  return remainingentries_;
}
 void DirectoryListingProto::set_remainingentries(::google::protobuf::uint32 value) {
  set_has_remainingentries();
  remainingentries_ = value;
  // @@protoc_insertion_point(field_set:DirectoryListingProto.remainingEntries)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFileInfoRequestProto::kSrcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFileInfoRequestProto::GetFileInfoRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetFileInfoRequestProto)
}

void GetFileInfoRequestProto::InitAsDefaultInstance() {
}

GetFileInfoRequestProto::GetFileInfoRequestProto(const GetFileInfoRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetFileInfoRequestProto)
}

void GetFileInfoRequestProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFileInfoRequestProto::~GetFileInfoRequestProto() {
  // @@protoc_insertion_point(destructor:GetFileInfoRequestProto)
  SharedDtor();
}

void GetFileInfoRequestProto::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetFileInfoRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFileInfoRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFileInfoRequestProto_descriptor_;
}

const GetFileInfoRequestProto& GetFileInfoRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetFileInfoRequestProto* GetFileInfoRequestProto::default_instance_ = NULL;

GetFileInfoRequestProto* GetFileInfoRequestProto::New(::google::protobuf::Arena* arena) const {
  GetFileInfoRequestProto* n = new GetFileInfoRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFileInfoRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetFileInfoRequestProto)
  if (has_src()) {
    src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetFileInfoRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetFileInfoRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GetFileInfoRequestProto.src");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetFileInfoRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetFileInfoRequestProto)
  return false;
#undef DO_
}

void GetFileInfoRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetFileInfoRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GetFileInfoRequestProto.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetFileInfoRequestProto)
}

::google::protobuf::uint8* GetFileInfoRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetFileInfoRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GetFileInfoRequestProto.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetFileInfoRequestProto)
  return target;
}

int GetFileInfoRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetFileInfoRequestProto)
  int total_size = 0;

  // required string src = 1;
  if (has_src()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFileInfoRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetFileInfoRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetFileInfoRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFileInfoRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetFileInfoRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetFileInfoRequestProto)
    MergeFrom(*source);
  }
}

void GetFileInfoRequestProto::MergeFrom(const GetFileInfoRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetFileInfoRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_has_src();
      src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetFileInfoRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetFileInfoRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFileInfoRequestProto::CopyFrom(const GetFileInfoRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetFileInfoRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFileInfoRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetFileInfoRequestProto::Swap(GetFileInfoRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFileInfoRequestProto::InternalSwap(GetFileInfoRequestProto* other) {
  src_.Swap(&other->src_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFileInfoRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFileInfoRequestProto_descriptor_;
  metadata.reflection = GetFileInfoRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFileInfoRequestProto

// required string src = 1;
bool GetFileInfoRequestProto::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetFileInfoRequestProto::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
void GetFileInfoRequestProto::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetFileInfoRequestProto::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_src();
}
 const ::std::string& GetFileInfoRequestProto::src() const {
  // @@protoc_insertion_point(field_get:GetFileInfoRequestProto.src)
  return src_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetFileInfoRequestProto::set_src(const ::std::string& value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetFileInfoRequestProto.src)
}
 void GetFileInfoRequestProto::set_src(const char* value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetFileInfoRequestProto.src)
}
 void GetFileInfoRequestProto::set_src(const char* value, size_t size) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetFileInfoRequestProto.src)
}
 ::std::string* GetFileInfoRequestProto::mutable_src() {
  set_has_src();
  // @@protoc_insertion_point(field_mutable:GetFileInfoRequestProto.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetFileInfoRequestProto::release_src() {
  // @@protoc_insertion_point(field_release:GetFileInfoRequestProto.src)
  clear_has_src();
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetFileInfoRequestProto::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    set_has_src();
  } else {
    clear_has_src();
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:GetFileInfoRequestProto.src)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFileInfoResponseProto::kFsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFileInfoResponseProto::GetFileInfoResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetFileInfoResponseProto)
}

void GetFileInfoResponseProto::InitAsDefaultInstance() {
  fs_ = const_cast< ::HdfsFileStatusProto*>(&::HdfsFileStatusProto::default_instance());
}

GetFileInfoResponseProto::GetFileInfoResponseProto(const GetFileInfoResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetFileInfoResponseProto)
}

void GetFileInfoResponseProto::SharedCtor() {
  _cached_size_ = 0;
  fs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFileInfoResponseProto::~GetFileInfoResponseProto() {
  // @@protoc_insertion_point(destructor:GetFileInfoResponseProto)
  SharedDtor();
}

void GetFileInfoResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete fs_;
  }
}

void GetFileInfoResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFileInfoResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFileInfoResponseProto_descriptor_;
}

const GetFileInfoResponseProto& GetFileInfoResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetFileInfoResponseProto* GetFileInfoResponseProto::default_instance_ = NULL;

GetFileInfoResponseProto* GetFileInfoResponseProto::New(::google::protobuf::Arena* arena) const {
  GetFileInfoResponseProto* n = new GetFileInfoResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFileInfoResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetFileInfoResponseProto)
  if (has_fs()) {
    if (fs_ != NULL) fs_->::HdfsFileStatusProto::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetFileInfoResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetFileInfoResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .HdfsFileStatusProto fs = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetFileInfoResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetFileInfoResponseProto)
  return false;
#undef DO_
}

void GetFileInfoResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetFileInfoResponseProto)
  // optional .HdfsFileStatusProto fs = 1;
  if (has_fs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->fs_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetFileInfoResponseProto)
}

::google::protobuf::uint8* GetFileInfoResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetFileInfoResponseProto)
  // optional .HdfsFileStatusProto fs = 1;
  if (has_fs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->fs_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetFileInfoResponseProto)
  return target;
}

int GetFileInfoResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetFileInfoResponseProto)
  int total_size = 0;

  // optional .HdfsFileStatusProto fs = 1;
  if (has_fs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fs_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFileInfoResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetFileInfoResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetFileInfoResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFileInfoResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetFileInfoResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetFileInfoResponseProto)
    MergeFrom(*source);
  }
}

void GetFileInfoResponseProto::MergeFrom(const GetFileInfoResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetFileInfoResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fs()) {
      mutable_fs()->::HdfsFileStatusProto::MergeFrom(from.fs());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetFileInfoResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetFileInfoResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFileInfoResponseProto::CopyFrom(const GetFileInfoResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetFileInfoResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFileInfoResponseProto::IsInitialized() const {

  if (has_fs()) {
    if (!this->fs_->IsInitialized()) return false;
  }
  return true;
}

void GetFileInfoResponseProto::Swap(GetFileInfoResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFileInfoResponseProto::InternalSwap(GetFileInfoResponseProto* other) {
  std::swap(fs_, other->fs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFileInfoResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFileInfoResponseProto_descriptor_;
  metadata.reflection = GetFileInfoResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFileInfoResponseProto

// optional .HdfsFileStatusProto fs = 1;
bool GetFileInfoResponseProto::has_fs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetFileInfoResponseProto::set_has_fs() {
  _has_bits_[0] |= 0x00000001u;
}
void GetFileInfoResponseProto::clear_has_fs() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetFileInfoResponseProto::clear_fs() {
  if (fs_ != NULL) fs_->::HdfsFileStatusProto::Clear();
  clear_has_fs();
}
const ::HdfsFileStatusProto& GetFileInfoResponseProto::fs() const {
  // @@protoc_insertion_point(field_get:GetFileInfoResponseProto.fs)
  return fs_ != NULL ? *fs_ : *default_instance_->fs_;
}
::HdfsFileStatusProto* GetFileInfoResponseProto::mutable_fs() {
  set_has_fs();
  if (fs_ == NULL) {
    fs_ = new ::HdfsFileStatusProto;
  }
  // @@protoc_insertion_point(field_mutable:GetFileInfoResponseProto.fs)
  return fs_;
}
::HdfsFileStatusProto* GetFileInfoResponseProto::release_fs() {
  // @@protoc_insertion_point(field_release:GetFileInfoResponseProto.fs)
  clear_has_fs();
  ::HdfsFileStatusProto* temp = fs_;
  fs_ = NULL;
  return temp;
}
void GetFileInfoResponseProto::set_allocated_fs(::HdfsFileStatusProto* fs) {
  delete fs_;
  fs_ = fs;
  if (fs) {
    set_has_fs();
  } else {
    clear_has_fs();
  }
  // @@protoc_insertion_point(field_set_allocated:GetFileInfoResponseProto.fs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetListingRequestProto::kSrcFieldNumber;
const int GetListingRequestProto::kStartAfterFieldNumber;
const int GetListingRequestProto::kNeedLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetListingRequestProto::GetListingRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetListingRequestProto)
}

void GetListingRequestProto::InitAsDefaultInstance() {
}

GetListingRequestProto::GetListingRequestProto(const GetListingRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetListingRequestProto)
}

void GetListingRequestProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  startafter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  needlocation_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetListingRequestProto::~GetListingRequestProto() {
  // @@protoc_insertion_point(destructor:GetListingRequestProto)
  SharedDtor();
}

void GetListingRequestProto::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  startafter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetListingRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetListingRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetListingRequestProto_descriptor_;
}

const GetListingRequestProto& GetListingRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetListingRequestProto* GetListingRequestProto::default_instance_ = NULL;

GetListingRequestProto* GetListingRequestProto::New(::google::protobuf::Arena* arena) const {
  GetListingRequestProto* n = new GetListingRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetListingRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetListingRequestProto)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_src()) {
      src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_startafter()) {
      startafter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    needlocation_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetListingRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetListingRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GetListingRequestProto.src");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_startAfter;
        break;
      }

      // required bytes startAfter = 2;
      case 2: {
        if (tag == 18) {
         parse_startAfter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_startafter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_needLocation;
        break;
      }

      // required bool needLocation = 3;
      case 3: {
        if (tag == 24) {
         parse_needLocation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needlocation_)));
          set_has_needlocation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetListingRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetListingRequestProto)
  return false;
#undef DO_
}

void GetListingRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetListingRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GetListingRequestProto.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src(), output);
  }

  // required bytes startAfter = 2;
  if (has_startafter()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->startafter(), output);
  }

  // required bool needLocation = 3;
  if (has_needlocation()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->needlocation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetListingRequestProto)
}

::google::protobuf::uint8* GetListingRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetListingRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GetListingRequestProto.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  // required bytes startAfter = 2;
  if (has_startafter()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->startafter(), target);
  }

  // required bool needLocation = 3;
  if (has_needlocation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->needlocation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetListingRequestProto)
  return target;
}

int GetListingRequestProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GetListingRequestProto)
  int total_size = 0;

  if (has_src()) {
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }

  if (has_startafter()) {
    // required bytes startAfter = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->startafter());
  }

  if (has_needlocation()) {
    // required bool needLocation = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
int GetListingRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetListingRequestProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());

    // required bytes startAfter = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->startafter());

    // required bool needLocation = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetListingRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetListingRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetListingRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetListingRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetListingRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetListingRequestProto)
    MergeFrom(*source);
  }
}

void GetListingRequestProto::MergeFrom(const GetListingRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetListingRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_has_src();
      src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
    }
    if (from.has_startafter()) {
      set_has_startafter();
      startafter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.startafter_);
    }
    if (from.has_needlocation()) {
      set_needlocation(from.needlocation());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetListingRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetListingRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetListingRequestProto::CopyFrom(const GetListingRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetListingRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetListingRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GetListingRequestProto::Swap(GetListingRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetListingRequestProto::InternalSwap(GetListingRequestProto* other) {
  src_.Swap(&other->src_);
  startafter_.Swap(&other->startafter_);
  std::swap(needlocation_, other->needlocation_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetListingRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetListingRequestProto_descriptor_;
  metadata.reflection = GetListingRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetListingRequestProto

// required string src = 1;
bool GetListingRequestProto::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetListingRequestProto::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
void GetListingRequestProto::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetListingRequestProto::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_src();
}
 const ::std::string& GetListingRequestProto::src() const {
  // @@protoc_insertion_point(field_get:GetListingRequestProto.src)
  return src_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetListingRequestProto::set_src(const ::std::string& value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetListingRequestProto.src)
}
 void GetListingRequestProto::set_src(const char* value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetListingRequestProto.src)
}
 void GetListingRequestProto::set_src(const char* value, size_t size) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetListingRequestProto.src)
}
 ::std::string* GetListingRequestProto::mutable_src() {
  set_has_src();
  // @@protoc_insertion_point(field_mutable:GetListingRequestProto.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetListingRequestProto::release_src() {
  // @@protoc_insertion_point(field_release:GetListingRequestProto.src)
  clear_has_src();
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetListingRequestProto::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    set_has_src();
  } else {
    clear_has_src();
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:GetListingRequestProto.src)
}

// required bytes startAfter = 2;
bool GetListingRequestProto::has_startafter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetListingRequestProto::set_has_startafter() {
  _has_bits_[0] |= 0x00000002u;
}
void GetListingRequestProto::clear_has_startafter() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetListingRequestProto::clear_startafter() {
  startafter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_startafter();
}
 const ::std::string& GetListingRequestProto::startafter() const {
  // @@protoc_insertion_point(field_get:GetListingRequestProto.startAfter)
  return startafter_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetListingRequestProto::set_startafter(const ::std::string& value) {
  set_has_startafter();
  startafter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetListingRequestProto.startAfter)
}
 void GetListingRequestProto::set_startafter(const char* value) {
  set_has_startafter();
  startafter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetListingRequestProto.startAfter)
}
 void GetListingRequestProto::set_startafter(const void* value, size_t size) {
  set_has_startafter();
  startafter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetListingRequestProto.startAfter)
}
 ::std::string* GetListingRequestProto::mutable_startafter() {
  set_has_startafter();
  // @@protoc_insertion_point(field_mutable:GetListingRequestProto.startAfter)
  return startafter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetListingRequestProto::release_startafter() {
  // @@protoc_insertion_point(field_release:GetListingRequestProto.startAfter)
  clear_has_startafter();
  return startafter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetListingRequestProto::set_allocated_startafter(::std::string* startafter) {
  if (startafter != NULL) {
    set_has_startafter();
  } else {
    clear_has_startafter();
  }
  startafter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), startafter);
  // @@protoc_insertion_point(field_set_allocated:GetListingRequestProto.startAfter)
}

// required bool needLocation = 3;
bool GetListingRequestProto::has_needlocation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetListingRequestProto::set_has_needlocation() {
  _has_bits_[0] |= 0x00000004u;
}
void GetListingRequestProto::clear_has_needlocation() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetListingRequestProto::clear_needlocation() {
  needlocation_ = false;
  clear_has_needlocation();
}
 bool GetListingRequestProto::needlocation() const {
  // @@protoc_insertion_point(field_get:GetListingRequestProto.needLocation)
  return needlocation_;
}
 void GetListingRequestProto::set_needlocation(bool value) {
  set_has_needlocation();
  needlocation_ = value;
  // @@protoc_insertion_point(field_set:GetListingRequestProto.needLocation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetListingResponseProto::kDirListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetListingResponseProto::GetListingResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetListingResponseProto)
}

void GetListingResponseProto::InitAsDefaultInstance() {
  dirlist_ = const_cast< ::DirectoryListingProto*>(&::DirectoryListingProto::default_instance());
}

GetListingResponseProto::GetListingResponseProto(const GetListingResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetListingResponseProto)
}

void GetListingResponseProto::SharedCtor() {
  _cached_size_ = 0;
  dirlist_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetListingResponseProto::~GetListingResponseProto() {
  // @@protoc_insertion_point(destructor:GetListingResponseProto)
  SharedDtor();
}

void GetListingResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete dirlist_;
  }
}

void GetListingResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetListingResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetListingResponseProto_descriptor_;
}

const GetListingResponseProto& GetListingResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetListingResponseProto* GetListingResponseProto::default_instance_ = NULL;

GetListingResponseProto* GetListingResponseProto::New(::google::protobuf::Arena* arena) const {
  GetListingResponseProto* n = new GetListingResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetListingResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetListingResponseProto)
  if (has_dirlist()) {
    if (dirlist_ != NULL) dirlist_->::DirectoryListingProto::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetListingResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetListingResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DirectoryListingProto dirList = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dirlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetListingResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetListingResponseProto)
  return false;
#undef DO_
}

void GetListingResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetListingResponseProto)
  // optional .DirectoryListingProto dirList = 1;
  if (has_dirlist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->dirlist_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetListingResponseProto)
}

::google::protobuf::uint8* GetListingResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetListingResponseProto)
  // optional .DirectoryListingProto dirList = 1;
  if (has_dirlist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->dirlist_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetListingResponseProto)
  return target;
}

int GetListingResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetListingResponseProto)
  int total_size = 0;

  // optional .DirectoryListingProto dirList = 1;
  if (has_dirlist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dirlist_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetListingResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetListingResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetListingResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetListingResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetListingResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetListingResponseProto)
    MergeFrom(*source);
  }
}

void GetListingResponseProto::MergeFrom(const GetListingResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetListingResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dirlist()) {
      mutable_dirlist()->::DirectoryListingProto::MergeFrom(from.dirlist());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetListingResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetListingResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetListingResponseProto::CopyFrom(const GetListingResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetListingResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetListingResponseProto::IsInitialized() const {

  if (has_dirlist()) {
    if (!this->dirlist_->IsInitialized()) return false;
  }
  return true;
}

void GetListingResponseProto::Swap(GetListingResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetListingResponseProto::InternalSwap(GetListingResponseProto* other) {
  std::swap(dirlist_, other->dirlist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetListingResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetListingResponseProto_descriptor_;
  metadata.reflection = GetListingResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetListingResponseProto

// optional .DirectoryListingProto dirList = 1;
bool GetListingResponseProto::has_dirlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetListingResponseProto::set_has_dirlist() {
  _has_bits_[0] |= 0x00000001u;
}
void GetListingResponseProto::clear_has_dirlist() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetListingResponseProto::clear_dirlist() {
  if (dirlist_ != NULL) dirlist_->::DirectoryListingProto::Clear();
  clear_has_dirlist();
}
const ::DirectoryListingProto& GetListingResponseProto::dirlist() const {
  // @@protoc_insertion_point(field_get:GetListingResponseProto.dirList)
  return dirlist_ != NULL ? *dirlist_ : *default_instance_->dirlist_;
}
::DirectoryListingProto* GetListingResponseProto::mutable_dirlist() {
  set_has_dirlist();
  if (dirlist_ == NULL) {
    dirlist_ = new ::DirectoryListingProto;
  }
  // @@protoc_insertion_point(field_mutable:GetListingResponseProto.dirList)
  return dirlist_;
}
::DirectoryListingProto* GetListingResponseProto::release_dirlist() {
  // @@protoc_insertion_point(field_release:GetListingResponseProto.dirList)
  clear_has_dirlist();
  ::DirectoryListingProto* temp = dirlist_;
  dirlist_ = NULL;
  return temp;
}
void GetListingResponseProto::set_allocated_dirlist(::DirectoryListingProto* dirlist) {
  delete dirlist_;
  dirlist_ = dirlist;
  if (dirlist) {
    set_has_dirlist();
  } else {
    clear_has_dirlist();
  }
  // @@protoc_insertion_point(field_set_allocated:GetListingResponseProto.dirList)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBlockLocationsRequestProto::kSrcFieldNumber;
const int GetBlockLocationsRequestProto::kOffsetFieldNumber;
const int GetBlockLocationsRequestProto::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlockLocationsRequestProto::GetBlockLocationsRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetBlockLocationsRequestProto)
}

void GetBlockLocationsRequestProto::InitAsDefaultInstance() {
}

GetBlockLocationsRequestProto::GetBlockLocationsRequestProto(const GetBlockLocationsRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetBlockLocationsRequestProto)
}

void GetBlockLocationsRequestProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = GOOGLE_ULONGLONG(0);
  length_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBlockLocationsRequestProto::~GetBlockLocationsRequestProto() {
  // @@protoc_insertion_point(destructor:GetBlockLocationsRequestProto)
  SharedDtor();
}

void GetBlockLocationsRequestProto::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetBlockLocationsRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBlockLocationsRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBlockLocationsRequestProto_descriptor_;
}

const GetBlockLocationsRequestProto& GetBlockLocationsRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetBlockLocationsRequestProto* GetBlockLocationsRequestProto::default_instance_ = NULL;

GetBlockLocationsRequestProto* GetBlockLocationsRequestProto::New(::google::protobuf::Arena* arena) const {
  GetBlockLocationsRequestProto* n = new GetBlockLocationsRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBlockLocationsRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetBlockLocationsRequestProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetBlockLocationsRequestProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetBlockLocationsRequestProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(offset_, length_);
    if (has_src()) {
      src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetBlockLocationsRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetBlockLocationsRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GetBlockLocationsRequestProto.src");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_offset;
        break;
      }

      // required uint64 offset = 2;
      case 2: {
        if (tag == 16) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_length;
        break;
      }

      // required uint64 length = 3;
      case 3: {
        if (tag == 24) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
          set_has_length();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetBlockLocationsRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetBlockLocationsRequestProto)
  return false;
#undef DO_
}

void GetBlockLocationsRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetBlockLocationsRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GetBlockLocationsRequestProto.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src(), output);
  }

  // required uint64 offset = 2;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  // required uint64 length = 3;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->length(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetBlockLocationsRequestProto)
}

::google::protobuf::uint8* GetBlockLocationsRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetBlockLocationsRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GetBlockLocationsRequestProto.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  // required uint64 offset = 2;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset(), target);
  }

  // required uint64 length = 3;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->length(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetBlockLocationsRequestProto)
  return target;
}

int GetBlockLocationsRequestProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GetBlockLocationsRequestProto)
  int total_size = 0;

  if (has_src()) {
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }

  if (has_offset()) {
    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  if (has_length()) {
    // required uint64 length = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());
  }

  return total_size;
}
int GetBlockLocationsRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetBlockLocationsRequestProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());

    // required uint64 offset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

    // required uint64 length = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBlockLocationsRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetBlockLocationsRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBlockLocationsRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlockLocationsRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetBlockLocationsRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetBlockLocationsRequestProto)
    MergeFrom(*source);
  }
}

void GetBlockLocationsRequestProto::MergeFrom(const GetBlockLocationsRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetBlockLocationsRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_has_src();
      src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_length()) {
      set_length(from.length());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetBlockLocationsRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetBlockLocationsRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockLocationsRequestProto::CopyFrom(const GetBlockLocationsRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetBlockLocationsRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockLocationsRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GetBlockLocationsRequestProto::Swap(GetBlockLocationsRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlockLocationsRequestProto::InternalSwap(GetBlockLocationsRequestProto* other) {
  src_.Swap(&other->src_);
  std::swap(offset_, other->offset_);
  std::swap(length_, other->length_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBlockLocationsRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBlockLocationsRequestProto_descriptor_;
  metadata.reflection = GetBlockLocationsRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBlockLocationsRequestProto

// required string src = 1;
bool GetBlockLocationsRequestProto::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetBlockLocationsRequestProto::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
void GetBlockLocationsRequestProto::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetBlockLocationsRequestProto::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_src();
}
 const ::std::string& GetBlockLocationsRequestProto::src() const {
  // @@protoc_insertion_point(field_get:GetBlockLocationsRequestProto.src)
  return src_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBlockLocationsRequestProto::set_src(const ::std::string& value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetBlockLocationsRequestProto.src)
}
 void GetBlockLocationsRequestProto::set_src(const char* value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetBlockLocationsRequestProto.src)
}
 void GetBlockLocationsRequestProto::set_src(const char* value, size_t size) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetBlockLocationsRequestProto.src)
}
 ::std::string* GetBlockLocationsRequestProto::mutable_src() {
  set_has_src();
  // @@protoc_insertion_point(field_mutable:GetBlockLocationsRequestProto.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetBlockLocationsRequestProto::release_src() {
  // @@protoc_insertion_point(field_release:GetBlockLocationsRequestProto.src)
  clear_has_src();
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBlockLocationsRequestProto::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    set_has_src();
  } else {
    clear_has_src();
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:GetBlockLocationsRequestProto.src)
}

// required uint64 offset = 2;
bool GetBlockLocationsRequestProto::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetBlockLocationsRequestProto::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
void GetBlockLocationsRequestProto::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetBlockLocationsRequestProto::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
 ::google::protobuf::uint64 GetBlockLocationsRequestProto::offset() const {
  // @@protoc_insertion_point(field_get:GetBlockLocationsRequestProto.offset)
  return offset_;
}
 void GetBlockLocationsRequestProto::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:GetBlockLocationsRequestProto.offset)
}

// required uint64 length = 3;
bool GetBlockLocationsRequestProto::has_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetBlockLocationsRequestProto::set_has_length() {
  _has_bits_[0] |= 0x00000004u;
}
void GetBlockLocationsRequestProto::clear_has_length() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetBlockLocationsRequestProto::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
  clear_has_length();
}
 ::google::protobuf::uint64 GetBlockLocationsRequestProto::length() const {
  // @@protoc_insertion_point(field_get:GetBlockLocationsRequestProto.length)
  return length_;
}
 void GetBlockLocationsRequestProto::set_length(::google::protobuf::uint64 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:GetBlockLocationsRequestProto.length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBlockLocationsResponseProto::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlockLocationsResponseProto::GetBlockLocationsResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetBlockLocationsResponseProto)
}

void GetBlockLocationsResponseProto::InitAsDefaultInstance() {
  locations_ = const_cast< ::LocatedBlocksProto*>(&::LocatedBlocksProto::default_instance());
}

GetBlockLocationsResponseProto::GetBlockLocationsResponseProto(const GetBlockLocationsResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetBlockLocationsResponseProto)
}

void GetBlockLocationsResponseProto::SharedCtor() {
  _cached_size_ = 0;
  locations_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBlockLocationsResponseProto::~GetBlockLocationsResponseProto() {
  // @@protoc_insertion_point(destructor:GetBlockLocationsResponseProto)
  SharedDtor();
}

void GetBlockLocationsResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete locations_;
  }
}

void GetBlockLocationsResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBlockLocationsResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBlockLocationsResponseProto_descriptor_;
}

const GetBlockLocationsResponseProto& GetBlockLocationsResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetBlockLocationsResponseProto* GetBlockLocationsResponseProto::default_instance_ = NULL;

GetBlockLocationsResponseProto* GetBlockLocationsResponseProto::New(::google::protobuf::Arena* arena) const {
  GetBlockLocationsResponseProto* n = new GetBlockLocationsResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBlockLocationsResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetBlockLocationsResponseProto)
  if (has_locations()) {
    if (locations_ != NULL) locations_->::LocatedBlocksProto::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetBlockLocationsResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetBlockLocationsResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .LocatedBlocksProto locations = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetBlockLocationsResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetBlockLocationsResponseProto)
  return false;
#undef DO_
}

void GetBlockLocationsResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetBlockLocationsResponseProto)
  // optional .LocatedBlocksProto locations = 1;
  if (has_locations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->locations_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetBlockLocationsResponseProto)
}

::google::protobuf::uint8* GetBlockLocationsResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetBlockLocationsResponseProto)
  // optional .LocatedBlocksProto locations = 1;
  if (has_locations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->locations_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetBlockLocationsResponseProto)
  return target;
}

int GetBlockLocationsResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetBlockLocationsResponseProto)
  int total_size = 0;

  // optional .LocatedBlocksProto locations = 1;
  if (has_locations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->locations_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBlockLocationsResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetBlockLocationsResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBlockLocationsResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlockLocationsResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetBlockLocationsResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetBlockLocationsResponseProto)
    MergeFrom(*source);
  }
}

void GetBlockLocationsResponseProto::MergeFrom(const GetBlockLocationsResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetBlockLocationsResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_locations()) {
      mutable_locations()->::LocatedBlocksProto::MergeFrom(from.locations());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetBlockLocationsResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetBlockLocationsResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockLocationsResponseProto::CopyFrom(const GetBlockLocationsResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetBlockLocationsResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockLocationsResponseProto::IsInitialized() const {

  if (has_locations()) {
    if (!this->locations_->IsInitialized()) return false;
  }
  return true;
}

void GetBlockLocationsResponseProto::Swap(GetBlockLocationsResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlockLocationsResponseProto::InternalSwap(GetBlockLocationsResponseProto* other) {
  std::swap(locations_, other->locations_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBlockLocationsResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBlockLocationsResponseProto_descriptor_;
  metadata.reflection = GetBlockLocationsResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBlockLocationsResponseProto

// optional .LocatedBlocksProto locations = 1;
bool GetBlockLocationsResponseProto::has_locations() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetBlockLocationsResponseProto::set_has_locations() {
  _has_bits_[0] |= 0x00000001u;
}
void GetBlockLocationsResponseProto::clear_has_locations() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetBlockLocationsResponseProto::clear_locations() {
  if (locations_ != NULL) locations_->::LocatedBlocksProto::Clear();
  clear_has_locations();
}
const ::LocatedBlocksProto& GetBlockLocationsResponseProto::locations() const {
  // @@protoc_insertion_point(field_get:GetBlockLocationsResponseProto.locations)
  return locations_ != NULL ? *locations_ : *default_instance_->locations_;
}
::LocatedBlocksProto* GetBlockLocationsResponseProto::mutable_locations() {
  set_has_locations();
  if (locations_ == NULL) {
    locations_ = new ::LocatedBlocksProto;
  }
  // @@protoc_insertion_point(field_mutable:GetBlockLocationsResponseProto.locations)
  return locations_;
}
::LocatedBlocksProto* GetBlockLocationsResponseProto::release_locations() {
  // @@protoc_insertion_point(field_release:GetBlockLocationsResponseProto.locations)
  clear_has_locations();
  ::LocatedBlocksProto* temp = locations_;
  locations_ = NULL;
  return temp;
}
void GetBlockLocationsResponseProto::set_allocated_locations(::LocatedBlocksProto* locations) {
  delete locations_;
  locations_ = locations;
  if (locations) {
    set_has_locations();
  } else {
    clear_has_locations();
  }
  // @@protoc_insertion_point(field_set_allocated:GetBlockLocationsResponseProto.locations)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FsServerDefaultsProto::kBlockSizeFieldNumber;
const int FsServerDefaultsProto::kBytesPerChecksumFieldNumber;
const int FsServerDefaultsProto::kWritePacketSizeFieldNumber;
const int FsServerDefaultsProto::kReplicationFieldNumber;
const int FsServerDefaultsProto::kFileBufferSizeFieldNumber;
const int FsServerDefaultsProto::kEncryptDataTransferFieldNumber;
const int FsServerDefaultsProto::kTrashIntervalFieldNumber;
const int FsServerDefaultsProto::kChecksumTypeFieldNumber;
const int FsServerDefaultsProto::kKeyProviderUriFieldNumber;
const int FsServerDefaultsProto::kPolicyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FsServerDefaultsProto::FsServerDefaultsProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FsServerDefaultsProto)
}

void FsServerDefaultsProto::InitAsDefaultInstance() {
}

FsServerDefaultsProto::FsServerDefaultsProto(const FsServerDefaultsProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FsServerDefaultsProto)
}

void FsServerDefaultsProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  blocksize_ = GOOGLE_ULONGLONG(0);
  bytesperchecksum_ = 0u;
  writepacketsize_ = 0u;
  replication_ = 0u;
  filebuffersize_ = 0u;
  encryptdatatransfer_ = false;
  trashinterval_ = GOOGLE_ULONGLONG(0);
  checksumtype_ = 1;
  keyprovideruri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  policyid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FsServerDefaultsProto::~FsServerDefaultsProto() {
  // @@protoc_insertion_point(destructor:FsServerDefaultsProto)
  SharedDtor();
}

void FsServerDefaultsProto::SharedDtor() {
  keyprovideruri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FsServerDefaultsProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FsServerDefaultsProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FsServerDefaultsProto_descriptor_;
}

const FsServerDefaultsProto& FsServerDefaultsProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

FsServerDefaultsProto* FsServerDefaultsProto::default_instance_ = NULL;

FsServerDefaultsProto* FsServerDefaultsProto::New(::google::protobuf::Arena* arena) const {
  FsServerDefaultsProto* n = new FsServerDefaultsProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FsServerDefaultsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:FsServerDefaultsProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FsServerDefaultsProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FsServerDefaultsProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(blocksize_, encryptdatatransfer_);
    checksumtype_ = 1;
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_keyprovideruri()) {
      keyprovideruri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    policyid_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FsServerDefaultsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FsServerDefaultsProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 blockSize = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &blocksize_)));
          set_has_blocksize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bytesPerChecksum;
        break;
      }

      // required uint32 bytesPerChecksum = 2;
      case 2: {
        if (tag == 16) {
         parse_bytesPerChecksum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bytesperchecksum_)));
          set_has_bytesperchecksum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_writePacketSize;
        break;
      }

      // required uint32 writePacketSize = 3;
      case 3: {
        if (tag == 24) {
         parse_writePacketSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &writepacketsize_)));
          set_has_writepacketsize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_replication;
        break;
      }

      // required uint32 replication = 4;
      case 4: {
        if (tag == 32) {
         parse_replication:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replication_)));
          set_has_replication();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_fileBufferSize;
        break;
      }

      // required uint32 fileBufferSize = 5;
      case 5: {
        if (tag == 40) {
         parse_fileBufferSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filebuffersize_)));
          set_has_filebuffersize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_encryptDataTransfer;
        break;
      }

      // optional bool encryptDataTransfer = 6 [default = false];
      case 6: {
        if (tag == 48) {
         parse_encryptDataTransfer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &encryptdatatransfer_)));
          set_has_encryptdatatransfer();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_trashInterval;
        break;
      }

      // optional uint64 trashInterval = 7 [default = 0];
      case 7: {
        if (tag == 56) {
         parse_trashInterval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &trashinterval_)));
          set_has_trashinterval();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_checksumType;
        break;
      }

      // optional .ChecksumTypeProto checksumType = 8 [default = CHECKSUM_CRC32];
      case 8: {
        if (tag == 64) {
         parse_checksumType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ChecksumTypeProto_IsValid(value)) {
            set_checksumtype(static_cast< ::ChecksumTypeProto >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_keyProviderUri;
        break;
      }

      // optional string keyProviderUri = 9;
      case 9: {
        if (tag == 74) {
         parse_keyProviderUri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyprovideruri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keyprovideruri().data(), this->keyprovideruri().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "FsServerDefaultsProto.keyProviderUri");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_policyId;
        break;
      }

      // optional uint32 policyId = 10 [default = 0];
      case 10: {
        if (tag == 80) {
         parse_policyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &policyid_)));
          set_has_policyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FsServerDefaultsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FsServerDefaultsProto)
  return false;
#undef DO_
}

void FsServerDefaultsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FsServerDefaultsProto)
  // required uint64 blockSize = 1;
  if (has_blocksize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->blocksize(), output);
  }

  // required uint32 bytesPerChecksum = 2;
  if (has_bytesperchecksum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->bytesperchecksum(), output);
  }

  // required uint32 writePacketSize = 3;
  if (has_writepacketsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->writepacketsize(), output);
  }

  // required uint32 replication = 4;
  if (has_replication()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->replication(), output);
  }

  // required uint32 fileBufferSize = 5;
  if (has_filebuffersize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->filebuffersize(), output);
  }

  // optional bool encryptDataTransfer = 6 [default = false];
  if (has_encryptdatatransfer()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->encryptdatatransfer(), output);
  }

  // optional uint64 trashInterval = 7 [default = 0];
  if (has_trashinterval()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->trashinterval(), output);
  }

  // optional .ChecksumTypeProto checksumType = 8 [default = CHECKSUM_CRC32];
  if (has_checksumtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->checksumtype(), output);
  }

  // optional string keyProviderUri = 9;
  if (has_keyprovideruri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyprovideruri().data(), this->keyprovideruri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FsServerDefaultsProto.keyProviderUri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->keyprovideruri(), output);
  }

  // optional uint32 policyId = 10 [default = 0];
  if (has_policyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->policyid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FsServerDefaultsProto)
}

::google::protobuf::uint8* FsServerDefaultsProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FsServerDefaultsProto)
  // required uint64 blockSize = 1;
  if (has_blocksize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->blocksize(), target);
  }

  // required uint32 bytesPerChecksum = 2;
  if (has_bytesperchecksum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->bytesperchecksum(), target);
  }

  // required uint32 writePacketSize = 3;
  if (has_writepacketsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->writepacketsize(), target);
  }

  // required uint32 replication = 4;
  if (has_replication()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->replication(), target);
  }

  // required uint32 fileBufferSize = 5;
  if (has_filebuffersize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->filebuffersize(), target);
  }

  // optional bool encryptDataTransfer = 6 [default = false];
  if (has_encryptdatatransfer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->encryptdatatransfer(), target);
  }

  // optional uint64 trashInterval = 7 [default = 0];
  if (has_trashinterval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->trashinterval(), target);
  }

  // optional .ChecksumTypeProto checksumType = 8 [default = CHECKSUM_CRC32];
  if (has_checksumtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->checksumtype(), target);
  }

  // optional string keyProviderUri = 9;
  if (has_keyprovideruri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyprovideruri().data(), this->keyprovideruri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FsServerDefaultsProto.keyProviderUri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->keyprovideruri(), target);
  }

  // optional uint32 policyId = 10 [default = 0];
  if (has_policyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->policyid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FsServerDefaultsProto)
  return target;
}

int FsServerDefaultsProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:FsServerDefaultsProto)
  int total_size = 0;

  if (has_blocksize()) {
    // required uint64 blockSize = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->blocksize());
  }

  if (has_bytesperchecksum()) {
    // required uint32 bytesPerChecksum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bytesperchecksum());
  }

  if (has_writepacketsize()) {
    // required uint32 writePacketSize = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->writepacketsize());
  }

  if (has_replication()) {
    // required uint32 replication = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replication());
  }

  if (has_filebuffersize()) {
    // required uint32 fileBufferSize = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filebuffersize());
  }

  return total_size;
}
int FsServerDefaultsProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:FsServerDefaultsProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required uint64 blockSize = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->blocksize());

    // required uint32 bytesPerChecksum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bytesperchecksum());

    // required uint32 writePacketSize = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->writepacketsize());

    // required uint32 replication = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replication());

    // required uint32 fileBufferSize = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filebuffersize());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[5 / 32] & 224u) {
    // optional bool encryptDataTransfer = 6 [default = false];
    if (has_encryptdatatransfer()) {
      total_size += 1 + 1;
    }

    // optional uint64 trashInterval = 7 [default = 0];
    if (has_trashinterval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->trashinterval());
    }

    // optional .ChecksumTypeProto checksumType = 8 [default = CHECKSUM_CRC32];
    if (has_checksumtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->checksumtype());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional string keyProviderUri = 9;
    if (has_keyprovideruri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keyprovideruri());
    }

    // optional uint32 policyId = 10 [default = 0];
    if (has_policyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->policyid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FsServerDefaultsProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FsServerDefaultsProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FsServerDefaultsProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FsServerDefaultsProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FsServerDefaultsProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FsServerDefaultsProto)
    MergeFrom(*source);
  }
}

void FsServerDefaultsProto::MergeFrom(const FsServerDefaultsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FsServerDefaultsProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_blocksize()) {
      set_blocksize(from.blocksize());
    }
    if (from.has_bytesperchecksum()) {
      set_bytesperchecksum(from.bytesperchecksum());
    }
    if (from.has_writepacketsize()) {
      set_writepacketsize(from.writepacketsize());
    }
    if (from.has_replication()) {
      set_replication(from.replication());
    }
    if (from.has_filebuffersize()) {
      set_filebuffersize(from.filebuffersize());
    }
    if (from.has_encryptdatatransfer()) {
      set_encryptdatatransfer(from.encryptdatatransfer());
    }
    if (from.has_trashinterval()) {
      set_trashinterval(from.trashinterval());
    }
    if (from.has_checksumtype()) {
      set_checksumtype(from.checksumtype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_keyprovideruri()) {
      set_has_keyprovideruri();
      keyprovideruri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyprovideruri_);
    }
    if (from.has_policyid()) {
      set_policyid(from.policyid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void FsServerDefaultsProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FsServerDefaultsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FsServerDefaultsProto::CopyFrom(const FsServerDefaultsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FsServerDefaultsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FsServerDefaultsProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void FsServerDefaultsProto::Swap(FsServerDefaultsProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FsServerDefaultsProto::InternalSwap(FsServerDefaultsProto* other) {
  std::swap(blocksize_, other->blocksize_);
  std::swap(bytesperchecksum_, other->bytesperchecksum_);
  std::swap(writepacketsize_, other->writepacketsize_);
  std::swap(replication_, other->replication_);
  std::swap(filebuffersize_, other->filebuffersize_);
  std::swap(encryptdatatransfer_, other->encryptdatatransfer_);
  std::swap(trashinterval_, other->trashinterval_);
  std::swap(checksumtype_, other->checksumtype_);
  keyprovideruri_.Swap(&other->keyprovideruri_);
  std::swap(policyid_, other->policyid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FsServerDefaultsProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FsServerDefaultsProto_descriptor_;
  metadata.reflection = FsServerDefaultsProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FsServerDefaultsProto

// required uint64 blockSize = 1;
bool FsServerDefaultsProto::has_blocksize() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FsServerDefaultsProto::set_has_blocksize() {
  _has_bits_[0] |= 0x00000001u;
}
void FsServerDefaultsProto::clear_has_blocksize() {
  _has_bits_[0] &= ~0x00000001u;
}
void FsServerDefaultsProto::clear_blocksize() {
  blocksize_ = GOOGLE_ULONGLONG(0);
  clear_has_blocksize();
}
 ::google::protobuf::uint64 FsServerDefaultsProto::blocksize() const {
  // @@protoc_insertion_point(field_get:FsServerDefaultsProto.blockSize)
  return blocksize_;
}
 void FsServerDefaultsProto::set_blocksize(::google::protobuf::uint64 value) {
  set_has_blocksize();
  blocksize_ = value;
  // @@protoc_insertion_point(field_set:FsServerDefaultsProto.blockSize)
}

// required uint32 bytesPerChecksum = 2;
bool FsServerDefaultsProto::has_bytesperchecksum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FsServerDefaultsProto::set_has_bytesperchecksum() {
  _has_bits_[0] |= 0x00000002u;
}
void FsServerDefaultsProto::clear_has_bytesperchecksum() {
  _has_bits_[0] &= ~0x00000002u;
}
void FsServerDefaultsProto::clear_bytesperchecksum() {
  bytesperchecksum_ = 0u;
  clear_has_bytesperchecksum();
}
 ::google::protobuf::uint32 FsServerDefaultsProto::bytesperchecksum() const {
  // @@protoc_insertion_point(field_get:FsServerDefaultsProto.bytesPerChecksum)
  return bytesperchecksum_;
}
 void FsServerDefaultsProto::set_bytesperchecksum(::google::protobuf::uint32 value) {
  set_has_bytesperchecksum();
  bytesperchecksum_ = value;
  // @@protoc_insertion_point(field_set:FsServerDefaultsProto.bytesPerChecksum)
}

// required uint32 writePacketSize = 3;
bool FsServerDefaultsProto::has_writepacketsize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FsServerDefaultsProto::set_has_writepacketsize() {
  _has_bits_[0] |= 0x00000004u;
}
void FsServerDefaultsProto::clear_has_writepacketsize() {
  _has_bits_[0] &= ~0x00000004u;
}
void FsServerDefaultsProto::clear_writepacketsize() {
  writepacketsize_ = 0u;
  clear_has_writepacketsize();
}
 ::google::protobuf::uint32 FsServerDefaultsProto::writepacketsize() const {
  // @@protoc_insertion_point(field_get:FsServerDefaultsProto.writePacketSize)
  return writepacketsize_;
}
 void FsServerDefaultsProto::set_writepacketsize(::google::protobuf::uint32 value) {
  set_has_writepacketsize();
  writepacketsize_ = value;
  // @@protoc_insertion_point(field_set:FsServerDefaultsProto.writePacketSize)
}

// required uint32 replication = 4;
bool FsServerDefaultsProto::has_replication() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FsServerDefaultsProto::set_has_replication() {
  _has_bits_[0] |= 0x00000008u;
}
void FsServerDefaultsProto::clear_has_replication() {
  _has_bits_[0] &= ~0x00000008u;
}
void FsServerDefaultsProto::clear_replication() {
  replication_ = 0u;
  clear_has_replication();
}
 ::google::protobuf::uint32 FsServerDefaultsProto::replication() const {
  // @@protoc_insertion_point(field_get:FsServerDefaultsProto.replication)
  return replication_;
}
 void FsServerDefaultsProto::set_replication(::google::protobuf::uint32 value) {
  set_has_replication();
  replication_ = value;
  // @@protoc_insertion_point(field_set:FsServerDefaultsProto.replication)
}

// required uint32 fileBufferSize = 5;
bool FsServerDefaultsProto::has_filebuffersize() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void FsServerDefaultsProto::set_has_filebuffersize() {
  _has_bits_[0] |= 0x00000010u;
}
void FsServerDefaultsProto::clear_has_filebuffersize() {
  _has_bits_[0] &= ~0x00000010u;
}
void FsServerDefaultsProto::clear_filebuffersize() {
  filebuffersize_ = 0u;
  clear_has_filebuffersize();
}
 ::google::protobuf::uint32 FsServerDefaultsProto::filebuffersize() const {
  // @@protoc_insertion_point(field_get:FsServerDefaultsProto.fileBufferSize)
  return filebuffersize_;
}
 void FsServerDefaultsProto::set_filebuffersize(::google::protobuf::uint32 value) {
  set_has_filebuffersize();
  filebuffersize_ = value;
  // @@protoc_insertion_point(field_set:FsServerDefaultsProto.fileBufferSize)
}

// optional bool encryptDataTransfer = 6 [default = false];
bool FsServerDefaultsProto::has_encryptdatatransfer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void FsServerDefaultsProto::set_has_encryptdatatransfer() {
  _has_bits_[0] |= 0x00000020u;
}
void FsServerDefaultsProto::clear_has_encryptdatatransfer() {
  _has_bits_[0] &= ~0x00000020u;
}
void FsServerDefaultsProto::clear_encryptdatatransfer() {
  encryptdatatransfer_ = false;
  clear_has_encryptdatatransfer();
}
 bool FsServerDefaultsProto::encryptdatatransfer() const {
  // @@protoc_insertion_point(field_get:FsServerDefaultsProto.encryptDataTransfer)
  return encryptdatatransfer_;
}
 void FsServerDefaultsProto::set_encryptdatatransfer(bool value) {
  set_has_encryptdatatransfer();
  encryptdatatransfer_ = value;
  // @@protoc_insertion_point(field_set:FsServerDefaultsProto.encryptDataTransfer)
}

// optional uint64 trashInterval = 7 [default = 0];
bool FsServerDefaultsProto::has_trashinterval() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void FsServerDefaultsProto::set_has_trashinterval() {
  _has_bits_[0] |= 0x00000040u;
}
void FsServerDefaultsProto::clear_has_trashinterval() {
  _has_bits_[0] &= ~0x00000040u;
}
void FsServerDefaultsProto::clear_trashinterval() {
  trashinterval_ = GOOGLE_ULONGLONG(0);
  clear_has_trashinterval();
}
 ::google::protobuf::uint64 FsServerDefaultsProto::trashinterval() const {
  // @@protoc_insertion_point(field_get:FsServerDefaultsProto.trashInterval)
  return trashinterval_;
}
 void FsServerDefaultsProto::set_trashinterval(::google::protobuf::uint64 value) {
  set_has_trashinterval();
  trashinterval_ = value;
  // @@protoc_insertion_point(field_set:FsServerDefaultsProto.trashInterval)
}

// optional .ChecksumTypeProto checksumType = 8 [default = CHECKSUM_CRC32];
bool FsServerDefaultsProto::has_checksumtype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void FsServerDefaultsProto::set_has_checksumtype() {
  _has_bits_[0] |= 0x00000080u;
}
void FsServerDefaultsProto::clear_has_checksumtype() {
  _has_bits_[0] &= ~0x00000080u;
}
void FsServerDefaultsProto::clear_checksumtype() {
  checksumtype_ = 1;
  clear_has_checksumtype();
}
 ::ChecksumTypeProto FsServerDefaultsProto::checksumtype() const {
  // @@protoc_insertion_point(field_get:FsServerDefaultsProto.checksumType)
  return static_cast< ::ChecksumTypeProto >(checksumtype_);
}
 void FsServerDefaultsProto::set_checksumtype(::ChecksumTypeProto value) {
  assert(::ChecksumTypeProto_IsValid(value));
  set_has_checksumtype();
  checksumtype_ = value;
  // @@protoc_insertion_point(field_set:FsServerDefaultsProto.checksumType)
}

// optional string keyProviderUri = 9;
bool FsServerDefaultsProto::has_keyprovideruri() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void FsServerDefaultsProto::set_has_keyprovideruri() {
  _has_bits_[0] |= 0x00000100u;
}
void FsServerDefaultsProto::clear_has_keyprovideruri() {
  _has_bits_[0] &= ~0x00000100u;
}
void FsServerDefaultsProto::clear_keyprovideruri() {
  keyprovideruri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyprovideruri();
}
 const ::std::string& FsServerDefaultsProto::keyprovideruri() const {
  // @@protoc_insertion_point(field_get:FsServerDefaultsProto.keyProviderUri)
  return keyprovideruri_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FsServerDefaultsProto::set_keyprovideruri(const ::std::string& value) {
  set_has_keyprovideruri();
  keyprovideruri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FsServerDefaultsProto.keyProviderUri)
}
 void FsServerDefaultsProto::set_keyprovideruri(const char* value) {
  set_has_keyprovideruri();
  keyprovideruri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FsServerDefaultsProto.keyProviderUri)
}
 void FsServerDefaultsProto::set_keyprovideruri(const char* value, size_t size) {
  set_has_keyprovideruri();
  keyprovideruri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FsServerDefaultsProto.keyProviderUri)
}
 ::std::string* FsServerDefaultsProto::mutable_keyprovideruri() {
  set_has_keyprovideruri();
  // @@protoc_insertion_point(field_mutable:FsServerDefaultsProto.keyProviderUri)
  return keyprovideruri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FsServerDefaultsProto::release_keyprovideruri() {
  // @@protoc_insertion_point(field_release:FsServerDefaultsProto.keyProviderUri)
  clear_has_keyprovideruri();
  return keyprovideruri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FsServerDefaultsProto::set_allocated_keyprovideruri(::std::string* keyprovideruri) {
  if (keyprovideruri != NULL) {
    set_has_keyprovideruri();
  } else {
    clear_has_keyprovideruri();
  }
  keyprovideruri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyprovideruri);
  // @@protoc_insertion_point(field_set_allocated:FsServerDefaultsProto.keyProviderUri)
}

// optional uint32 policyId = 10 [default = 0];
bool FsServerDefaultsProto::has_policyid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void FsServerDefaultsProto::set_has_policyid() {
  _has_bits_[0] |= 0x00000200u;
}
void FsServerDefaultsProto::clear_has_policyid() {
  _has_bits_[0] &= ~0x00000200u;
}
void FsServerDefaultsProto::clear_policyid() {
  policyid_ = 0u;
  clear_has_policyid();
}
 ::google::protobuf::uint32 FsServerDefaultsProto::policyid() const {
  // @@protoc_insertion_point(field_get:FsServerDefaultsProto.policyId)
  return policyid_;
}
 void FsServerDefaultsProto::set_policyid(::google::protobuf::uint32 value) {
  set_has_policyid();
  policyid_ = value;
  // @@protoc_insertion_point(field_set:FsServerDefaultsProto.policyId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServerDefaultsRequestProto::GetServerDefaultsRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetServerDefaultsRequestProto)
}

void GetServerDefaultsRequestProto::InitAsDefaultInstance() {
}

GetServerDefaultsRequestProto::GetServerDefaultsRequestProto(const GetServerDefaultsRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetServerDefaultsRequestProto)
}

void GetServerDefaultsRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetServerDefaultsRequestProto::~GetServerDefaultsRequestProto() {
  // @@protoc_insertion_point(destructor:GetServerDefaultsRequestProto)
  SharedDtor();
}

void GetServerDefaultsRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetServerDefaultsRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServerDefaultsRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetServerDefaultsRequestProto_descriptor_;
}

const GetServerDefaultsRequestProto& GetServerDefaultsRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetServerDefaultsRequestProto* GetServerDefaultsRequestProto::default_instance_ = NULL;

GetServerDefaultsRequestProto* GetServerDefaultsRequestProto::New(::google::protobuf::Arena* arena) const {
  GetServerDefaultsRequestProto* n = new GetServerDefaultsRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServerDefaultsRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetServerDefaultsRequestProto)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetServerDefaultsRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetServerDefaultsRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GetServerDefaultsRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetServerDefaultsRequestProto)
  return false;
#undef DO_
}

void GetServerDefaultsRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetServerDefaultsRequestProto)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetServerDefaultsRequestProto)
}

::google::protobuf::uint8* GetServerDefaultsRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetServerDefaultsRequestProto)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetServerDefaultsRequestProto)
  return target;
}

int GetServerDefaultsRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetServerDefaultsRequestProto)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServerDefaultsRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetServerDefaultsRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetServerDefaultsRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServerDefaultsRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetServerDefaultsRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetServerDefaultsRequestProto)
    MergeFrom(*source);
  }
}

void GetServerDefaultsRequestProto::MergeFrom(const GetServerDefaultsRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetServerDefaultsRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetServerDefaultsRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetServerDefaultsRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServerDefaultsRequestProto::CopyFrom(const GetServerDefaultsRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetServerDefaultsRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServerDefaultsRequestProto::IsInitialized() const {

  return true;
}

void GetServerDefaultsRequestProto::Swap(GetServerDefaultsRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServerDefaultsRequestProto::InternalSwap(GetServerDefaultsRequestProto* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServerDefaultsRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetServerDefaultsRequestProto_descriptor_;
  metadata.reflection = GetServerDefaultsRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetServerDefaultsRequestProto

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServerDefaultsResponseProto::kServerDefaultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServerDefaultsResponseProto::GetServerDefaultsResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetServerDefaultsResponseProto)
}

void GetServerDefaultsResponseProto::InitAsDefaultInstance() {
  serverdefaults_ = const_cast< ::FsServerDefaultsProto*>(&::FsServerDefaultsProto::default_instance());
}

GetServerDefaultsResponseProto::GetServerDefaultsResponseProto(const GetServerDefaultsResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetServerDefaultsResponseProto)
}

void GetServerDefaultsResponseProto::SharedCtor() {
  _cached_size_ = 0;
  serverdefaults_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetServerDefaultsResponseProto::~GetServerDefaultsResponseProto() {
  // @@protoc_insertion_point(destructor:GetServerDefaultsResponseProto)
  SharedDtor();
}

void GetServerDefaultsResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete serverdefaults_;
  }
}

void GetServerDefaultsResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServerDefaultsResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetServerDefaultsResponseProto_descriptor_;
}

const GetServerDefaultsResponseProto& GetServerDefaultsResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetServerDefaultsResponseProto* GetServerDefaultsResponseProto::default_instance_ = NULL;

GetServerDefaultsResponseProto* GetServerDefaultsResponseProto::New(::google::protobuf::Arena* arena) const {
  GetServerDefaultsResponseProto* n = new GetServerDefaultsResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServerDefaultsResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetServerDefaultsResponseProto)
  if (has_serverdefaults()) {
    if (serverdefaults_ != NULL) serverdefaults_->::FsServerDefaultsProto::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetServerDefaultsResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetServerDefaultsResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .FsServerDefaultsProto serverDefaults = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serverdefaults()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetServerDefaultsResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetServerDefaultsResponseProto)
  return false;
#undef DO_
}

void GetServerDefaultsResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetServerDefaultsResponseProto)
  // required .FsServerDefaultsProto serverDefaults = 1;
  if (has_serverdefaults()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->serverdefaults_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetServerDefaultsResponseProto)
}

::google::protobuf::uint8* GetServerDefaultsResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetServerDefaultsResponseProto)
  // required .FsServerDefaultsProto serverDefaults = 1;
  if (has_serverdefaults()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->serverdefaults_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetServerDefaultsResponseProto)
  return target;
}

int GetServerDefaultsResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetServerDefaultsResponseProto)
  int total_size = 0;

  // required .FsServerDefaultsProto serverDefaults = 1;
  if (has_serverdefaults()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->serverdefaults_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServerDefaultsResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetServerDefaultsResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetServerDefaultsResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServerDefaultsResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetServerDefaultsResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetServerDefaultsResponseProto)
    MergeFrom(*source);
  }
}

void GetServerDefaultsResponseProto::MergeFrom(const GetServerDefaultsResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetServerDefaultsResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serverdefaults()) {
      mutable_serverdefaults()->::FsServerDefaultsProto::MergeFrom(from.serverdefaults());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetServerDefaultsResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetServerDefaultsResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServerDefaultsResponseProto::CopyFrom(const GetServerDefaultsResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetServerDefaultsResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServerDefaultsResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_serverdefaults()) {
    if (!this->serverdefaults_->IsInitialized()) return false;
  }
  return true;
}

void GetServerDefaultsResponseProto::Swap(GetServerDefaultsResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServerDefaultsResponseProto::InternalSwap(GetServerDefaultsResponseProto* other) {
  std::swap(serverdefaults_, other->serverdefaults_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServerDefaultsResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetServerDefaultsResponseProto_descriptor_;
  metadata.reflection = GetServerDefaultsResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetServerDefaultsResponseProto

// required .FsServerDefaultsProto serverDefaults = 1;
bool GetServerDefaultsResponseProto::has_serverdefaults() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetServerDefaultsResponseProto::set_has_serverdefaults() {
  _has_bits_[0] |= 0x00000001u;
}
void GetServerDefaultsResponseProto::clear_has_serverdefaults() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetServerDefaultsResponseProto::clear_serverdefaults() {
  if (serverdefaults_ != NULL) serverdefaults_->::FsServerDefaultsProto::Clear();
  clear_has_serverdefaults();
}
const ::FsServerDefaultsProto& GetServerDefaultsResponseProto::serverdefaults() const {
  // @@protoc_insertion_point(field_get:GetServerDefaultsResponseProto.serverDefaults)
  return serverdefaults_ != NULL ? *serverdefaults_ : *default_instance_->serverdefaults_;
}
::FsServerDefaultsProto* GetServerDefaultsResponseProto::mutable_serverdefaults() {
  set_has_serverdefaults();
  if (serverdefaults_ == NULL) {
    serverdefaults_ = new ::FsServerDefaultsProto;
  }
  // @@protoc_insertion_point(field_mutable:GetServerDefaultsResponseProto.serverDefaults)
  return serverdefaults_;
}
::FsServerDefaultsProto* GetServerDefaultsResponseProto::release_serverdefaults() {
  // @@protoc_insertion_point(field_release:GetServerDefaultsResponseProto.serverDefaults)
  clear_has_serverdefaults();
  ::FsServerDefaultsProto* temp = serverdefaults_;
  serverdefaults_ = NULL;
  return temp;
}
void GetServerDefaultsResponseProto::set_allocated_serverdefaults(::FsServerDefaultsProto* serverdefaults) {
  delete serverdefaults_;
  serverdefaults_ = serverdefaults;
  if (serverdefaults) {
    set_has_serverdefaults();
  } else {
    clear_has_serverdefaults();
  }
  // @@protoc_insertion_point(field_set_allocated:GetServerDefaultsResponseProto.serverDefaults)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRequestProto::kSrcFieldNumber;
const int CreateRequestProto::kMaskedFieldNumber;
const int CreateRequestProto::kClientNameFieldNumber;
const int CreateRequestProto::kCreateFlagFieldNumber;
const int CreateRequestProto::kCreateParentFieldNumber;
const int CreateRequestProto::kReplicationFieldNumber;
const int CreateRequestProto::kBlockSizeFieldNumber;
const int CreateRequestProto::kCryptoProtocolVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRequestProto::CreateRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateRequestProto)
}

void CreateRequestProto::InitAsDefaultInstance() {
  masked_ = const_cast< ::FsPermissionProto*>(&::FsPermissionProto::default_instance());
}

CreateRequestProto::CreateRequestProto(const CreateRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CreateRequestProto)
}

void CreateRequestProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  masked_ = NULL;
  clientname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createflag_ = 0u;
  createparent_ = false;
  replication_ = 0u;
  blocksize_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateRequestProto::~CreateRequestProto() {
  // @@protoc_insertion_point(destructor:CreateRequestProto)
  SharedDtor();
}

void CreateRequestProto::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete masked_;
  }
}

void CreateRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateRequestProto_descriptor_;
}

const CreateRequestProto& CreateRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

CreateRequestProto* CreateRequestProto::default_instance_ = NULL;

CreateRequestProto* CreateRequestProto::New(::google::protobuf::Arena* arena) const {
  CreateRequestProto* n = new CreateRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateRequestProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateRequestProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateRequestProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(createflag_, blocksize_);
    if (has_src()) {
      src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_masked()) {
      if (masked_ != NULL) masked_->::FsPermissionProto::Clear();
    }
    if (has_clientname()) {
      clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    replication_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  cryptoprotocolversion_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CreateRequestProto.src");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_masked;
        break;
      }

      // required .FsPermissionProto masked = 2;
      case 2: {
        if (tag == 18) {
         parse_masked:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_masked()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_clientName;
        break;
      }

      // required string clientName = 3;
      case 3: {
        if (tag == 26) {
         parse_clientName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientname().data(), this->clientname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CreateRequestProto.clientName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_createFlag;
        break;
      }

      // required uint32 createFlag = 4;
      case 4: {
        if (tag == 32) {
         parse_createFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &createflag_)));
          set_has_createflag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_createParent;
        break;
      }

      // required bool createParent = 5;
      case 5: {
        if (tag == 40) {
         parse_createParent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &createparent_)));
          set_has_createparent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_replication;
        break;
      }

      // required uint32 replication = 6;
      case 6: {
        if (tag == 48) {
         parse_replication:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replication_)));
          set_has_replication();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_blockSize;
        break;
      }

      // required uint64 blockSize = 7;
      case 7: {
        if (tag == 56) {
         parse_blockSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &blocksize_)));
          set_has_blocksize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_cryptoProtocolVersion;
        break;
      }

      // repeated .CryptoProtocolVersionProto cryptoProtocolVersion = 8;
      case 8: {
        if (tag == 64) {
         parse_cryptoProtocolVersion:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CryptoProtocolVersionProto_IsValid(value)) {
            add_cryptoprotocolversion(static_cast< ::CryptoProtocolVersionProto >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 8,
                 ::CryptoProtocolVersionProto_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_cryptoprotocolversion())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_cryptoProtocolVersion;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateRequestProto)
  return false;
#undef DO_
}

void CreateRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateRequestProto.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src(), output);
  }

  // required .FsPermissionProto masked = 2;
  if (has_masked()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->masked_, output);
  }

  // required string clientName = 3;
  if (has_clientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateRequestProto.clientName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clientname(), output);
  }

  // required uint32 createFlag = 4;
  if (has_createflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->createflag(), output);
  }

  // required bool createParent = 5;
  if (has_createparent()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->createparent(), output);
  }

  // required uint32 replication = 6;
  if (has_replication()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->replication(), output);
  }

  // required uint64 blockSize = 7;
  if (has_blocksize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->blocksize(), output);
  }

  // repeated .CryptoProtocolVersionProto cryptoProtocolVersion = 8;
  for (int i = 0; i < this->cryptoprotocolversion_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->cryptoprotocolversion(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateRequestProto)
}

::google::protobuf::uint8* CreateRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateRequestProto.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  // required .FsPermissionProto masked = 2;
  if (has_masked()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->masked_, false, target);
  }

  // required string clientName = 3;
  if (has_clientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateRequestProto.clientName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clientname(), target);
  }

  // required uint32 createFlag = 4;
  if (has_createflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->createflag(), target);
  }

  // required bool createParent = 5;
  if (has_createparent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->createparent(), target);
  }

  // required uint32 replication = 6;
  if (has_replication()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->replication(), target);
  }

  // required uint64 blockSize = 7;
  if (has_blocksize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->blocksize(), target);
  }

  // repeated .CryptoProtocolVersionProto cryptoProtocolVersion = 8;
  for (int i = 0; i < this->cryptoprotocolversion_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->cryptoprotocolversion(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateRequestProto)
  return target;
}

int CreateRequestProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CreateRequestProto)
  int total_size = 0;

  if (has_src()) {
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }

  if (has_masked()) {
    // required .FsPermissionProto masked = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->masked_);
  }

  if (has_clientname()) {
    // required string clientName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientname());
  }

  if (has_createflag()) {
    // required uint32 createFlag = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->createflag());
  }

  if (has_createparent()) {
    // required bool createParent = 5;
    total_size += 1 + 1;
  }

  if (has_replication()) {
    // required uint32 replication = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replication());
  }

  if (has_blocksize()) {
    // required uint64 blockSize = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->blocksize());
  }

  return total_size;
}
int CreateRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CreateRequestProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());

    // required .FsPermissionProto masked = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->masked_);

    // required string clientName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientname());

    // required uint32 createFlag = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->createflag());

    // required bool createParent = 5;
    total_size += 1 + 1;

    // required uint32 replication = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replication());

    // required uint64 blockSize = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->blocksize());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .CryptoProtocolVersionProto cryptoProtocolVersion = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->cryptoprotocolversion_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->cryptoprotocolversion(i));
    }
    total_size += 1 * this->cryptoprotocolversion_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateRequestProto)
    MergeFrom(*source);
  }
}

void CreateRequestProto::MergeFrom(const CreateRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  cryptoprotocolversion_.MergeFrom(from.cryptoprotocolversion_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_has_src();
      src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
    }
    if (from.has_masked()) {
      mutable_masked()->::FsPermissionProto::MergeFrom(from.masked());
    }
    if (from.has_clientname()) {
      set_has_clientname();
      clientname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientname_);
    }
    if (from.has_createflag()) {
      set_createflag(from.createflag());
    }
    if (from.has_createparent()) {
      set_createparent(from.createparent());
    }
    if (from.has_replication()) {
      set_replication(from.replication());
    }
    if (from.has_blocksize()) {
      set_blocksize(from.blocksize());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CreateRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRequestProto::CopyFrom(const CreateRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  if (has_masked()) {
    if (!this->masked_->IsInitialized()) return false;
  }
  return true;
}

void CreateRequestProto::Swap(CreateRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRequestProto::InternalSwap(CreateRequestProto* other) {
  src_.Swap(&other->src_);
  std::swap(masked_, other->masked_);
  clientname_.Swap(&other->clientname_);
  std::swap(createflag_, other->createflag_);
  std::swap(createparent_, other->createparent_);
  std::swap(replication_, other->replication_);
  std::swap(blocksize_, other->blocksize_);
  cryptoprotocolversion_.UnsafeArenaSwap(&other->cryptoprotocolversion_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateRequestProto_descriptor_;
  metadata.reflection = CreateRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRequestProto

// required string src = 1;
bool CreateRequestProto::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateRequestProto::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateRequestProto::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateRequestProto::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_src();
}
 const ::std::string& CreateRequestProto::src() const {
  // @@protoc_insertion_point(field_get:CreateRequestProto.src)
  return src_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateRequestProto::set_src(const ::std::string& value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateRequestProto.src)
}
 void CreateRequestProto::set_src(const char* value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateRequestProto.src)
}
 void CreateRequestProto::set_src(const char* value, size_t size) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateRequestProto.src)
}
 ::std::string* CreateRequestProto::mutable_src() {
  set_has_src();
  // @@protoc_insertion_point(field_mutable:CreateRequestProto.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateRequestProto::release_src() {
  // @@protoc_insertion_point(field_release:CreateRequestProto.src)
  clear_has_src();
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateRequestProto::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    set_has_src();
  } else {
    clear_has_src();
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:CreateRequestProto.src)
}

// required .FsPermissionProto masked = 2;
bool CreateRequestProto::has_masked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateRequestProto::set_has_masked() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateRequestProto::clear_has_masked() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateRequestProto::clear_masked() {
  if (masked_ != NULL) masked_->::FsPermissionProto::Clear();
  clear_has_masked();
}
const ::FsPermissionProto& CreateRequestProto::masked() const {
  // @@protoc_insertion_point(field_get:CreateRequestProto.masked)
  return masked_ != NULL ? *masked_ : *default_instance_->masked_;
}
::FsPermissionProto* CreateRequestProto::mutable_masked() {
  set_has_masked();
  if (masked_ == NULL) {
    masked_ = new ::FsPermissionProto;
  }
  // @@protoc_insertion_point(field_mutable:CreateRequestProto.masked)
  return masked_;
}
::FsPermissionProto* CreateRequestProto::release_masked() {
  // @@protoc_insertion_point(field_release:CreateRequestProto.masked)
  clear_has_masked();
  ::FsPermissionProto* temp = masked_;
  masked_ = NULL;
  return temp;
}
void CreateRequestProto::set_allocated_masked(::FsPermissionProto* masked) {
  delete masked_;
  masked_ = masked;
  if (masked) {
    set_has_masked();
  } else {
    clear_has_masked();
  }
  // @@protoc_insertion_point(field_set_allocated:CreateRequestProto.masked)
}

// required string clientName = 3;
bool CreateRequestProto::has_clientname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreateRequestProto::set_has_clientname() {
  _has_bits_[0] |= 0x00000004u;
}
void CreateRequestProto::clear_has_clientname() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreateRequestProto::clear_clientname() {
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientname();
}
 const ::std::string& CreateRequestProto::clientname() const {
  // @@protoc_insertion_point(field_get:CreateRequestProto.clientName)
  return clientname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateRequestProto::set_clientname(const ::std::string& value) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateRequestProto.clientName)
}
 void CreateRequestProto::set_clientname(const char* value) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateRequestProto.clientName)
}
 void CreateRequestProto::set_clientname(const char* value, size_t size) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateRequestProto.clientName)
}
 ::std::string* CreateRequestProto::mutable_clientname() {
  set_has_clientname();
  // @@protoc_insertion_point(field_mutable:CreateRequestProto.clientName)
  return clientname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateRequestProto::release_clientname() {
  // @@protoc_insertion_point(field_release:CreateRequestProto.clientName)
  clear_has_clientname();
  return clientname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateRequestProto::set_allocated_clientname(::std::string* clientname) {
  if (clientname != NULL) {
    set_has_clientname();
  } else {
    clear_has_clientname();
  }
  clientname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientname);
  // @@protoc_insertion_point(field_set_allocated:CreateRequestProto.clientName)
}

// required uint32 createFlag = 4;
bool CreateRequestProto::has_createflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CreateRequestProto::set_has_createflag() {
  _has_bits_[0] |= 0x00000008u;
}
void CreateRequestProto::clear_has_createflag() {
  _has_bits_[0] &= ~0x00000008u;
}
void CreateRequestProto::clear_createflag() {
  createflag_ = 0u;
  clear_has_createflag();
}
 ::google::protobuf::uint32 CreateRequestProto::createflag() const {
  // @@protoc_insertion_point(field_get:CreateRequestProto.createFlag)
  return createflag_;
}
 void CreateRequestProto::set_createflag(::google::protobuf::uint32 value) {
  set_has_createflag();
  createflag_ = value;
  // @@protoc_insertion_point(field_set:CreateRequestProto.createFlag)
}

// required bool createParent = 5;
bool CreateRequestProto::has_createparent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CreateRequestProto::set_has_createparent() {
  _has_bits_[0] |= 0x00000010u;
}
void CreateRequestProto::clear_has_createparent() {
  _has_bits_[0] &= ~0x00000010u;
}
void CreateRequestProto::clear_createparent() {
  createparent_ = false;
  clear_has_createparent();
}
 bool CreateRequestProto::createparent() const {
  // @@protoc_insertion_point(field_get:CreateRequestProto.createParent)
  return createparent_;
}
 void CreateRequestProto::set_createparent(bool value) {
  set_has_createparent();
  createparent_ = value;
  // @@protoc_insertion_point(field_set:CreateRequestProto.createParent)
}

// required uint32 replication = 6;
bool CreateRequestProto::has_replication() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CreateRequestProto::set_has_replication() {
  _has_bits_[0] |= 0x00000020u;
}
void CreateRequestProto::clear_has_replication() {
  _has_bits_[0] &= ~0x00000020u;
}
void CreateRequestProto::clear_replication() {
  replication_ = 0u;
  clear_has_replication();
}
 ::google::protobuf::uint32 CreateRequestProto::replication() const {
  // @@protoc_insertion_point(field_get:CreateRequestProto.replication)
  return replication_;
}
 void CreateRequestProto::set_replication(::google::protobuf::uint32 value) {
  set_has_replication();
  replication_ = value;
  // @@protoc_insertion_point(field_set:CreateRequestProto.replication)
}

// required uint64 blockSize = 7;
bool CreateRequestProto::has_blocksize() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CreateRequestProto::set_has_blocksize() {
  _has_bits_[0] |= 0x00000040u;
}
void CreateRequestProto::clear_has_blocksize() {
  _has_bits_[0] &= ~0x00000040u;
}
void CreateRequestProto::clear_blocksize() {
  blocksize_ = GOOGLE_ULONGLONG(0);
  clear_has_blocksize();
}
 ::google::protobuf::uint64 CreateRequestProto::blocksize() const {
  // @@protoc_insertion_point(field_get:CreateRequestProto.blockSize)
  return blocksize_;
}
 void CreateRequestProto::set_blocksize(::google::protobuf::uint64 value) {
  set_has_blocksize();
  blocksize_ = value;
  // @@protoc_insertion_point(field_set:CreateRequestProto.blockSize)
}

// repeated .CryptoProtocolVersionProto cryptoProtocolVersion = 8;
int CreateRequestProto::cryptoprotocolversion_size() const {
  return cryptoprotocolversion_.size();
}
void CreateRequestProto::clear_cryptoprotocolversion() {
  cryptoprotocolversion_.Clear();
}
 ::CryptoProtocolVersionProto CreateRequestProto::cryptoprotocolversion(int index) const {
  // @@protoc_insertion_point(field_get:CreateRequestProto.cryptoProtocolVersion)
  return static_cast< ::CryptoProtocolVersionProto >(cryptoprotocolversion_.Get(index));
}
 void CreateRequestProto::set_cryptoprotocolversion(int index, ::CryptoProtocolVersionProto value) {
  assert(::CryptoProtocolVersionProto_IsValid(value));
  cryptoprotocolversion_.Set(index, value);
  // @@protoc_insertion_point(field_set:CreateRequestProto.cryptoProtocolVersion)
}
 void CreateRequestProto::add_cryptoprotocolversion(::CryptoProtocolVersionProto value) {
  assert(::CryptoProtocolVersionProto_IsValid(value));
  cryptoprotocolversion_.Add(value);
  // @@protoc_insertion_point(field_add:CreateRequestProto.cryptoProtocolVersion)
}
 const ::google::protobuf::RepeatedField<int>&
CreateRequestProto::cryptoprotocolversion() const {
  // @@protoc_insertion_point(field_list:CreateRequestProto.cryptoProtocolVersion)
  return cryptoprotocolversion_;
}
 ::google::protobuf::RepeatedField<int>*
CreateRequestProto::mutable_cryptoprotocolversion() {
  // @@protoc_insertion_point(field_mutable_list:CreateRequestProto.cryptoProtocolVersion)
  return &cryptoprotocolversion_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateResponseProto::kFsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateResponseProto::CreateResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateResponseProto)
}

void CreateResponseProto::InitAsDefaultInstance() {
  fs_ = const_cast< ::HdfsFileStatusProto*>(&::HdfsFileStatusProto::default_instance());
}

CreateResponseProto::CreateResponseProto(const CreateResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CreateResponseProto)
}

void CreateResponseProto::SharedCtor() {
  _cached_size_ = 0;
  fs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateResponseProto::~CreateResponseProto() {
  // @@protoc_insertion_point(destructor:CreateResponseProto)
  SharedDtor();
}

void CreateResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete fs_;
  }
}

void CreateResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateResponseProto_descriptor_;
}

const CreateResponseProto& CreateResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

CreateResponseProto* CreateResponseProto::default_instance_ = NULL;

CreateResponseProto* CreateResponseProto::New(::google::protobuf::Arena* arena) const {
  CreateResponseProto* n = new CreateResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateResponseProto)
  if (has_fs()) {
    if (fs_ != NULL) fs_->::HdfsFileStatusProto::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .HdfsFileStatusProto fs = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateResponseProto)
  return false;
#undef DO_
}

void CreateResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateResponseProto)
  // optional .HdfsFileStatusProto fs = 1;
  if (has_fs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->fs_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateResponseProto)
}

::google::protobuf::uint8* CreateResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateResponseProto)
  // optional .HdfsFileStatusProto fs = 1;
  if (has_fs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->fs_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateResponseProto)
  return target;
}

int CreateResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CreateResponseProto)
  int total_size = 0;

  // optional .HdfsFileStatusProto fs = 1;
  if (has_fs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fs_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateResponseProto)
    MergeFrom(*source);
  }
}

void CreateResponseProto::MergeFrom(const CreateResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fs()) {
      mutable_fs()->::HdfsFileStatusProto::MergeFrom(from.fs());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CreateResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateResponseProto::CopyFrom(const CreateResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateResponseProto::IsInitialized() const {

  if (has_fs()) {
    if (!this->fs_->IsInitialized()) return false;
  }
  return true;
}

void CreateResponseProto::Swap(CreateResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateResponseProto::InternalSwap(CreateResponseProto* other) {
  std::swap(fs_, other->fs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateResponseProto_descriptor_;
  metadata.reflection = CreateResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateResponseProto

// optional .HdfsFileStatusProto fs = 1;
bool CreateResponseProto::has_fs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateResponseProto::set_has_fs() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateResponseProto::clear_has_fs() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateResponseProto::clear_fs() {
  if (fs_ != NULL) fs_->::HdfsFileStatusProto::Clear();
  clear_has_fs();
}
const ::HdfsFileStatusProto& CreateResponseProto::fs() const {
  // @@protoc_insertion_point(field_get:CreateResponseProto.fs)
  return fs_ != NULL ? *fs_ : *default_instance_->fs_;
}
::HdfsFileStatusProto* CreateResponseProto::mutable_fs() {
  set_has_fs();
  if (fs_ == NULL) {
    fs_ = new ::HdfsFileStatusProto;
  }
  // @@protoc_insertion_point(field_mutable:CreateResponseProto.fs)
  return fs_;
}
::HdfsFileStatusProto* CreateResponseProto::release_fs() {
  // @@protoc_insertion_point(field_release:CreateResponseProto.fs)
  clear_has_fs();
  ::HdfsFileStatusProto* temp = fs_;
  fs_ = NULL;
  return temp;
}
void CreateResponseProto::set_allocated_fs(::HdfsFileStatusProto* fs) {
  delete fs_;
  fs_ = fs;
  if (fs) {
    set_has_fs();
  } else {
    clear_has_fs();
  }
  // @@protoc_insertion_point(field_set_allocated:CreateResponseProto.fs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompleteRequestProto::kSrcFieldNumber;
const int CompleteRequestProto::kClientNameFieldNumber;
const int CompleteRequestProto::kLastFieldNumber;
const int CompleteRequestProto::kFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompleteRequestProto::CompleteRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CompleteRequestProto)
}

void CompleteRequestProto::InitAsDefaultInstance() {
  last_ = const_cast< ::ExtendedBlockProto*>(&::ExtendedBlockProto::default_instance());
}

CompleteRequestProto::CompleteRequestProto(const CompleteRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CompleteRequestProto)
}

void CompleteRequestProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_ = NULL;
  fileid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CompleteRequestProto::~CompleteRequestProto() {
  // @@protoc_insertion_point(destructor:CompleteRequestProto)
  SharedDtor();
}

void CompleteRequestProto::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete last_;
  }
}

void CompleteRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompleteRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompleteRequestProto_descriptor_;
}

const CompleteRequestProto& CompleteRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

CompleteRequestProto* CompleteRequestProto::default_instance_ = NULL;

CompleteRequestProto* CompleteRequestProto::New(::google::protobuf::Arena* arena) const {
  CompleteRequestProto* n = new CompleteRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompleteRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:CompleteRequestProto)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_src()) {
      src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_clientname()) {
      clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_last()) {
      if (last_ != NULL) last_->::ExtendedBlockProto::Clear();
    }
    fileid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CompleteRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CompleteRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CompleteRequestProto.src");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_clientName;
        break;
      }

      // required string clientName = 2;
      case 2: {
        if (tag == 18) {
         parse_clientName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientname().data(), this->clientname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CompleteRequestProto.clientName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_last;
        break;
      }

      // optional .ExtendedBlockProto last = 3;
      case 3: {
        if (tag == 26) {
         parse_last:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_last()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_fileId;
        break;
      }

      // optional uint64 fileId = 4 [default = 0];
      case 4: {
        if (tag == 32) {
         parse_fileId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fileid_)));
          set_has_fileid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CompleteRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CompleteRequestProto)
  return false;
#undef DO_
}

void CompleteRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CompleteRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CompleteRequestProto.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src(), output);
  }

  // required string clientName = 2;
  if (has_clientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CompleteRequestProto.clientName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->clientname(), output);
  }

  // optional .ExtendedBlockProto last = 3;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->last_, output);
  }

  // optional uint64 fileId = 4 [default = 0];
  if (has_fileid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->fileid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CompleteRequestProto)
}

::google::protobuf::uint8* CompleteRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CompleteRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CompleteRequestProto.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  // required string clientName = 2;
  if (has_clientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CompleteRequestProto.clientName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->clientname(), target);
  }

  // optional .ExtendedBlockProto last = 3;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->last_, false, target);
  }

  // optional uint64 fileId = 4 [default = 0];
  if (has_fileid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->fileid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CompleteRequestProto)
  return target;
}

int CompleteRequestProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CompleteRequestProto)
  int total_size = 0;

  if (has_src()) {
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }

  if (has_clientname()) {
    // required string clientName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientname());
  }

  return total_size;
}
int CompleteRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CompleteRequestProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());

    // required string clientName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientname());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional .ExtendedBlockProto last = 3;
    if (has_last()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->last_);
    }

    // optional uint64 fileId = 4 [default = 0];
    if (has_fileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fileid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompleteRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CompleteRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CompleteRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CompleteRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CompleteRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CompleteRequestProto)
    MergeFrom(*source);
  }
}

void CompleteRequestProto::MergeFrom(const CompleteRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CompleteRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_has_src();
      src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
    }
    if (from.has_clientname()) {
      set_has_clientname();
      clientname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientname_);
    }
    if (from.has_last()) {
      mutable_last()->::ExtendedBlockProto::MergeFrom(from.last());
    }
    if (from.has_fileid()) {
      set_fileid(from.fileid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CompleteRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CompleteRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteRequestProto::CopyFrom(const CompleteRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CompleteRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_last()) {
    if (!this->last_->IsInitialized()) return false;
  }
  return true;
}

void CompleteRequestProto::Swap(CompleteRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompleteRequestProto::InternalSwap(CompleteRequestProto* other) {
  src_.Swap(&other->src_);
  clientname_.Swap(&other->clientname_);
  std::swap(last_, other->last_);
  std::swap(fileid_, other->fileid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompleteRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompleteRequestProto_descriptor_;
  metadata.reflection = CompleteRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompleteRequestProto

// required string src = 1;
bool CompleteRequestProto::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CompleteRequestProto::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
void CompleteRequestProto::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
void CompleteRequestProto::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_src();
}
 const ::std::string& CompleteRequestProto::src() const {
  // @@protoc_insertion_point(field_get:CompleteRequestProto.src)
  return src_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompleteRequestProto::set_src(const ::std::string& value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CompleteRequestProto.src)
}
 void CompleteRequestProto::set_src(const char* value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CompleteRequestProto.src)
}
 void CompleteRequestProto::set_src(const char* value, size_t size) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CompleteRequestProto.src)
}
 ::std::string* CompleteRequestProto::mutable_src() {
  set_has_src();
  // @@protoc_insertion_point(field_mutable:CompleteRequestProto.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CompleteRequestProto::release_src() {
  // @@protoc_insertion_point(field_release:CompleteRequestProto.src)
  clear_has_src();
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompleteRequestProto::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    set_has_src();
  } else {
    clear_has_src();
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:CompleteRequestProto.src)
}

// required string clientName = 2;
bool CompleteRequestProto::has_clientname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CompleteRequestProto::set_has_clientname() {
  _has_bits_[0] |= 0x00000002u;
}
void CompleteRequestProto::clear_has_clientname() {
  _has_bits_[0] &= ~0x00000002u;
}
void CompleteRequestProto::clear_clientname() {
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientname();
}
 const ::std::string& CompleteRequestProto::clientname() const {
  // @@protoc_insertion_point(field_get:CompleteRequestProto.clientName)
  return clientname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompleteRequestProto::set_clientname(const ::std::string& value) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CompleteRequestProto.clientName)
}
 void CompleteRequestProto::set_clientname(const char* value) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CompleteRequestProto.clientName)
}
 void CompleteRequestProto::set_clientname(const char* value, size_t size) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CompleteRequestProto.clientName)
}
 ::std::string* CompleteRequestProto::mutable_clientname() {
  set_has_clientname();
  // @@protoc_insertion_point(field_mutable:CompleteRequestProto.clientName)
  return clientname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CompleteRequestProto::release_clientname() {
  // @@protoc_insertion_point(field_release:CompleteRequestProto.clientName)
  clear_has_clientname();
  return clientname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompleteRequestProto::set_allocated_clientname(::std::string* clientname) {
  if (clientname != NULL) {
    set_has_clientname();
  } else {
    clear_has_clientname();
  }
  clientname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientname);
  // @@protoc_insertion_point(field_set_allocated:CompleteRequestProto.clientName)
}

// optional .ExtendedBlockProto last = 3;
bool CompleteRequestProto::has_last() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CompleteRequestProto::set_has_last() {
  _has_bits_[0] |= 0x00000004u;
}
void CompleteRequestProto::clear_has_last() {
  _has_bits_[0] &= ~0x00000004u;
}
void CompleteRequestProto::clear_last() {
  if (last_ != NULL) last_->::ExtendedBlockProto::Clear();
  clear_has_last();
}
const ::ExtendedBlockProto& CompleteRequestProto::last() const {
  // @@protoc_insertion_point(field_get:CompleteRequestProto.last)
  return last_ != NULL ? *last_ : *default_instance_->last_;
}
::ExtendedBlockProto* CompleteRequestProto::mutable_last() {
  set_has_last();
  if (last_ == NULL) {
    last_ = new ::ExtendedBlockProto;
  }
  // @@protoc_insertion_point(field_mutable:CompleteRequestProto.last)
  return last_;
}
::ExtendedBlockProto* CompleteRequestProto::release_last() {
  // @@protoc_insertion_point(field_release:CompleteRequestProto.last)
  clear_has_last();
  ::ExtendedBlockProto* temp = last_;
  last_ = NULL;
  return temp;
}
void CompleteRequestProto::set_allocated_last(::ExtendedBlockProto* last) {
  delete last_;
  last_ = last;
  if (last) {
    set_has_last();
  } else {
    clear_has_last();
  }
  // @@protoc_insertion_point(field_set_allocated:CompleteRequestProto.last)
}

// optional uint64 fileId = 4 [default = 0];
bool CompleteRequestProto::has_fileid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CompleteRequestProto::set_has_fileid() {
  _has_bits_[0] |= 0x00000008u;
}
void CompleteRequestProto::clear_has_fileid() {
  _has_bits_[0] &= ~0x00000008u;
}
void CompleteRequestProto::clear_fileid() {
  fileid_ = GOOGLE_ULONGLONG(0);
  clear_has_fileid();
}
 ::google::protobuf::uint64 CompleteRequestProto::fileid() const {
  // @@protoc_insertion_point(field_get:CompleteRequestProto.fileId)
  return fileid_;
}
 void CompleteRequestProto::set_fileid(::google::protobuf::uint64 value) {
  set_has_fileid();
  fileid_ = value;
  // @@protoc_insertion_point(field_set:CompleteRequestProto.fileId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompleteResponseProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompleteResponseProto::CompleteResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CompleteResponseProto)
}

void CompleteResponseProto::InitAsDefaultInstance() {
}

CompleteResponseProto::CompleteResponseProto(const CompleteResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CompleteResponseProto)
}

void CompleteResponseProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CompleteResponseProto::~CompleteResponseProto() {
  // @@protoc_insertion_point(destructor:CompleteResponseProto)
  SharedDtor();
}

void CompleteResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CompleteResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompleteResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompleteResponseProto_descriptor_;
}

const CompleteResponseProto& CompleteResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

CompleteResponseProto* CompleteResponseProto::default_instance_ = NULL;

CompleteResponseProto* CompleteResponseProto::New(::google::protobuf::Arena* arena) const {
  CompleteResponseProto* n = new CompleteResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompleteResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:CompleteResponseProto)
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CompleteResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CompleteResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CompleteResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CompleteResponseProto)
  return false;
#undef DO_
}

void CompleteResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CompleteResponseProto)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CompleteResponseProto)
}

::google::protobuf::uint8* CompleteResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CompleteResponseProto)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CompleteResponseProto)
  return target;
}

int CompleteResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CompleteResponseProto)
  int total_size = 0;

  // required bool result = 1;
  if (has_result()) {
    total_size += 1 + 1;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompleteResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CompleteResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CompleteResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CompleteResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CompleteResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CompleteResponseProto)
    MergeFrom(*source);
  }
}

void CompleteResponseProto::MergeFrom(const CompleteResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CompleteResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CompleteResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CompleteResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteResponseProto::CopyFrom(const CompleteResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CompleteResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CompleteResponseProto::Swap(CompleteResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompleteResponseProto::InternalSwap(CompleteResponseProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompleteResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompleteResponseProto_descriptor_;
  metadata.reflection = CompleteResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompleteResponseProto

// required bool result = 1;
bool CompleteResponseProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CompleteResponseProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void CompleteResponseProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void CompleteResponseProto::clear_result() {
  result_ = false;
  clear_has_result();
}
 bool CompleteResponseProto::result() const {
  // @@protoc_insertion_point(field_get:CompleteResponseProto.result)
  return result_;
}
 void CompleteResponseProto::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CompleteResponseProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddBlockRequestProto::kSrcFieldNumber;
const int AddBlockRequestProto::kClientNameFieldNumber;
const int AddBlockRequestProto::kPreviousFieldNumber;
const int AddBlockRequestProto::kExcludeNodesFieldNumber;
const int AddBlockRequestProto::kFileIdFieldNumber;
const int AddBlockRequestProto::kFavoredNodesFieldNumber;
const int AddBlockRequestProto::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddBlockRequestProto::AddBlockRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AddBlockRequestProto)
}

void AddBlockRequestProto::InitAsDefaultInstance() {
  previous_ = const_cast< ::ExtendedBlockProto*>(&::ExtendedBlockProto::default_instance());
}

AddBlockRequestProto::AddBlockRequestProto(const AddBlockRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AddBlockRequestProto)
}

void AddBlockRequestProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previous_ = NULL;
  fileid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddBlockRequestProto::~AddBlockRequestProto() {
  // @@protoc_insertion_point(destructor:AddBlockRequestProto)
  SharedDtor();
}

void AddBlockRequestProto::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete previous_;
  }
}

void AddBlockRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddBlockRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddBlockRequestProto_descriptor_;
}

const AddBlockRequestProto& AddBlockRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

AddBlockRequestProto* AddBlockRequestProto::default_instance_ = NULL;

AddBlockRequestProto* AddBlockRequestProto::New(::google::protobuf::Arena* arena) const {
  AddBlockRequestProto* n = new AddBlockRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddBlockRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:AddBlockRequestProto)
  if (_has_bits_[0 / 32] & 23u) {
    if (has_src()) {
      src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_clientname()) {
      clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_previous()) {
      if (previous_ != NULL) previous_->::ExtendedBlockProto::Clear();
    }
    fileid_ = GOOGLE_ULONGLONG(0);
  }
  excludenodes_.Clear();
  favorednodes_.Clear();
  flags_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AddBlockRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AddBlockRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AddBlockRequestProto.src");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_clientName;
        break;
      }

      // required string clientName = 2;
      case 2: {
        if (tag == 18) {
         parse_clientName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientname().data(), this->clientname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AddBlockRequestProto.clientName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_previous;
        break;
      }

      // optional .ExtendedBlockProto previous = 3;
      case 3: {
        if (tag == 26) {
         parse_previous:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_previous()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_excludeNodes;
        break;
      }

      // repeated .DatanodeInfoProto excludeNodes = 4;
      case 4: {
        if (tag == 34) {
         parse_excludeNodes:
          DO_(input->IncrementRecursionDepth());
         parse_loop_excludeNodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_excludenodes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_excludeNodes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_fileId;
        break;
      }

      // optional uint64 fileId = 5 [default = 0];
      case 5: {
        if (tag == 40) {
         parse_fileId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fileid_)));
          set_has_fileid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_favoredNodes;
        break;
      }

      // repeated string favoredNodes = 6;
      case 6: {
        if (tag == 50) {
         parse_favoredNodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_favorednodes()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->favorednodes(this->favorednodes_size() - 1).data(),
            this->favorednodes(this->favorednodes_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AddBlockRequestProto.favoredNodes");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_favoredNodes;
        if (input->ExpectTag(56)) goto parse_flags;
        break;
      }

      // repeated .AddBlockFlagProto flags = 7;
      case 7: {
        if (tag == 56) {
         parse_flags:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AddBlockFlagProto_IsValid(value)) {
            add_flags(static_cast< ::AddBlockFlagProto >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 7,
                 ::AddBlockFlagProto_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_flags())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_flags;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AddBlockRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AddBlockRequestProto)
  return false;
#undef DO_
}

void AddBlockRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AddBlockRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AddBlockRequestProto.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src(), output);
  }

  // required string clientName = 2;
  if (has_clientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AddBlockRequestProto.clientName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->clientname(), output);
  }

  // optional .ExtendedBlockProto previous = 3;
  if (has_previous()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->previous_, output);
  }

  // repeated .DatanodeInfoProto excludeNodes = 4;
  for (unsigned int i = 0, n = this->excludenodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->excludenodes(i), output);
  }

  // optional uint64 fileId = 5 [default = 0];
  if (has_fileid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->fileid(), output);
  }

  // repeated string favoredNodes = 6;
  for (int i = 0; i < this->favorednodes_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->favorednodes(i).data(), this->favorednodes(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AddBlockRequestProto.favoredNodes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->favorednodes(i), output);
  }

  // repeated .AddBlockFlagProto flags = 7;
  for (int i = 0; i < this->flags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->flags(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AddBlockRequestProto)
}

::google::protobuf::uint8* AddBlockRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AddBlockRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AddBlockRequestProto.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  // required string clientName = 2;
  if (has_clientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AddBlockRequestProto.clientName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->clientname(), target);
  }

  // optional .ExtendedBlockProto previous = 3;
  if (has_previous()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->previous_, false, target);
  }

  // repeated .DatanodeInfoProto excludeNodes = 4;
  for (unsigned int i = 0, n = this->excludenodes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->excludenodes(i), false, target);
  }

  // optional uint64 fileId = 5 [default = 0];
  if (has_fileid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->fileid(), target);
  }

  // repeated string favoredNodes = 6;
  for (int i = 0; i < this->favorednodes_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->favorednodes(i).data(), this->favorednodes(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AddBlockRequestProto.favoredNodes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->favorednodes(i), target);
  }

  // repeated .AddBlockFlagProto flags = 7;
  for (int i = 0; i < this->flags_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->flags(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AddBlockRequestProto)
  return target;
}

int AddBlockRequestProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AddBlockRequestProto)
  int total_size = 0;

  if (has_src()) {
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }

  if (has_clientname()) {
    // required string clientName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientname());
  }

  return total_size;
}
int AddBlockRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AddBlockRequestProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());

    // required string clientName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientname());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 20u) {
    // optional .ExtendedBlockProto previous = 3;
    if (has_previous()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->previous_);
    }

    // optional uint64 fileId = 5 [default = 0];
    if (has_fileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fileid());
    }

  }
  // repeated .DatanodeInfoProto excludeNodes = 4;
  total_size += 1 * this->excludenodes_size();
  for (int i = 0; i < this->excludenodes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->excludenodes(i));
  }

  // repeated string favoredNodes = 6;
  total_size += 1 * this->favorednodes_size();
  for (int i = 0; i < this->favorednodes_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->favorednodes(i));
  }

  // repeated .AddBlockFlagProto flags = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->flags_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->flags(i));
    }
    total_size += 1 * this->flags_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddBlockRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AddBlockRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddBlockRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddBlockRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AddBlockRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AddBlockRequestProto)
    MergeFrom(*source);
  }
}

void AddBlockRequestProto::MergeFrom(const AddBlockRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AddBlockRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  excludenodes_.MergeFrom(from.excludenodes_);
  favorednodes_.MergeFrom(from.favorednodes_);
  flags_.MergeFrom(from.flags_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_has_src();
      src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
    }
    if (from.has_clientname()) {
      set_has_clientname();
      clientname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientname_);
    }
    if (from.has_previous()) {
      mutable_previous()->::ExtendedBlockProto::MergeFrom(from.previous());
    }
    if (from.has_fileid()) {
      set_fileid(from.fileid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AddBlockRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AddBlockRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddBlockRequestProto::CopyFrom(const AddBlockRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AddBlockRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBlockRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_previous()) {
    if (!this->previous_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->excludenodes())) return false;
  return true;
}

void AddBlockRequestProto::Swap(AddBlockRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddBlockRequestProto::InternalSwap(AddBlockRequestProto* other) {
  src_.Swap(&other->src_);
  clientname_.Swap(&other->clientname_);
  std::swap(previous_, other->previous_);
  excludenodes_.UnsafeArenaSwap(&other->excludenodes_);
  std::swap(fileid_, other->fileid_);
  favorednodes_.UnsafeArenaSwap(&other->favorednodes_);
  flags_.UnsafeArenaSwap(&other->flags_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddBlockRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddBlockRequestProto_descriptor_;
  metadata.reflection = AddBlockRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddBlockRequestProto

// required string src = 1;
bool AddBlockRequestProto::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddBlockRequestProto::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
void AddBlockRequestProto::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddBlockRequestProto::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_src();
}
 const ::std::string& AddBlockRequestProto::src() const {
  // @@protoc_insertion_point(field_get:AddBlockRequestProto.src)
  return src_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddBlockRequestProto::set_src(const ::std::string& value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AddBlockRequestProto.src)
}
 void AddBlockRequestProto::set_src(const char* value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AddBlockRequestProto.src)
}
 void AddBlockRequestProto::set_src(const char* value, size_t size) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AddBlockRequestProto.src)
}
 ::std::string* AddBlockRequestProto::mutable_src() {
  set_has_src();
  // @@protoc_insertion_point(field_mutable:AddBlockRequestProto.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AddBlockRequestProto::release_src() {
  // @@protoc_insertion_point(field_release:AddBlockRequestProto.src)
  clear_has_src();
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddBlockRequestProto::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    set_has_src();
  } else {
    clear_has_src();
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:AddBlockRequestProto.src)
}

// required string clientName = 2;
bool AddBlockRequestProto::has_clientname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AddBlockRequestProto::set_has_clientname() {
  _has_bits_[0] |= 0x00000002u;
}
void AddBlockRequestProto::clear_has_clientname() {
  _has_bits_[0] &= ~0x00000002u;
}
void AddBlockRequestProto::clear_clientname() {
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientname();
}
 const ::std::string& AddBlockRequestProto::clientname() const {
  // @@protoc_insertion_point(field_get:AddBlockRequestProto.clientName)
  return clientname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddBlockRequestProto::set_clientname(const ::std::string& value) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AddBlockRequestProto.clientName)
}
 void AddBlockRequestProto::set_clientname(const char* value) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AddBlockRequestProto.clientName)
}
 void AddBlockRequestProto::set_clientname(const char* value, size_t size) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AddBlockRequestProto.clientName)
}
 ::std::string* AddBlockRequestProto::mutable_clientname() {
  set_has_clientname();
  // @@protoc_insertion_point(field_mutable:AddBlockRequestProto.clientName)
  return clientname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AddBlockRequestProto::release_clientname() {
  // @@protoc_insertion_point(field_release:AddBlockRequestProto.clientName)
  clear_has_clientname();
  return clientname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddBlockRequestProto::set_allocated_clientname(::std::string* clientname) {
  if (clientname != NULL) {
    set_has_clientname();
  } else {
    clear_has_clientname();
  }
  clientname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientname);
  // @@protoc_insertion_point(field_set_allocated:AddBlockRequestProto.clientName)
}

// optional .ExtendedBlockProto previous = 3;
bool AddBlockRequestProto::has_previous() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AddBlockRequestProto::set_has_previous() {
  _has_bits_[0] |= 0x00000004u;
}
void AddBlockRequestProto::clear_has_previous() {
  _has_bits_[0] &= ~0x00000004u;
}
void AddBlockRequestProto::clear_previous() {
  if (previous_ != NULL) previous_->::ExtendedBlockProto::Clear();
  clear_has_previous();
}
const ::ExtendedBlockProto& AddBlockRequestProto::previous() const {
  // @@protoc_insertion_point(field_get:AddBlockRequestProto.previous)
  return previous_ != NULL ? *previous_ : *default_instance_->previous_;
}
::ExtendedBlockProto* AddBlockRequestProto::mutable_previous() {
  set_has_previous();
  if (previous_ == NULL) {
    previous_ = new ::ExtendedBlockProto;
  }
  // @@protoc_insertion_point(field_mutable:AddBlockRequestProto.previous)
  return previous_;
}
::ExtendedBlockProto* AddBlockRequestProto::release_previous() {
  // @@protoc_insertion_point(field_release:AddBlockRequestProto.previous)
  clear_has_previous();
  ::ExtendedBlockProto* temp = previous_;
  previous_ = NULL;
  return temp;
}
void AddBlockRequestProto::set_allocated_previous(::ExtendedBlockProto* previous) {
  delete previous_;
  previous_ = previous;
  if (previous) {
    set_has_previous();
  } else {
    clear_has_previous();
  }
  // @@protoc_insertion_point(field_set_allocated:AddBlockRequestProto.previous)
}

// repeated .DatanodeInfoProto excludeNodes = 4;
int AddBlockRequestProto::excludenodes_size() const {
  return excludenodes_.size();
}
void AddBlockRequestProto::clear_excludenodes() {
  excludenodes_.Clear();
}
const ::DatanodeInfoProto& AddBlockRequestProto::excludenodes(int index) const {
  // @@protoc_insertion_point(field_get:AddBlockRequestProto.excludeNodes)
  return excludenodes_.Get(index);
}
::DatanodeInfoProto* AddBlockRequestProto::mutable_excludenodes(int index) {
  // @@protoc_insertion_point(field_mutable:AddBlockRequestProto.excludeNodes)
  return excludenodes_.Mutable(index);
}
::DatanodeInfoProto* AddBlockRequestProto::add_excludenodes() {
  // @@protoc_insertion_point(field_add:AddBlockRequestProto.excludeNodes)
  return excludenodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::DatanodeInfoProto >*
AddBlockRequestProto::mutable_excludenodes() {
  // @@protoc_insertion_point(field_mutable_list:AddBlockRequestProto.excludeNodes)
  return &excludenodes_;
}
const ::google::protobuf::RepeatedPtrField< ::DatanodeInfoProto >&
AddBlockRequestProto::excludenodes() const {
  // @@protoc_insertion_point(field_list:AddBlockRequestProto.excludeNodes)
  return excludenodes_;
}

// optional uint64 fileId = 5 [default = 0];
bool AddBlockRequestProto::has_fileid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AddBlockRequestProto::set_has_fileid() {
  _has_bits_[0] |= 0x00000010u;
}
void AddBlockRequestProto::clear_has_fileid() {
  _has_bits_[0] &= ~0x00000010u;
}
void AddBlockRequestProto::clear_fileid() {
  fileid_ = GOOGLE_ULONGLONG(0);
  clear_has_fileid();
}
 ::google::protobuf::uint64 AddBlockRequestProto::fileid() const {
  // @@protoc_insertion_point(field_get:AddBlockRequestProto.fileId)
  return fileid_;
}
 void AddBlockRequestProto::set_fileid(::google::protobuf::uint64 value) {
  set_has_fileid();
  fileid_ = value;
  // @@protoc_insertion_point(field_set:AddBlockRequestProto.fileId)
}

// repeated string favoredNodes = 6;
int AddBlockRequestProto::favorednodes_size() const {
  return favorednodes_.size();
}
void AddBlockRequestProto::clear_favorednodes() {
  favorednodes_.Clear();
}
 const ::std::string& AddBlockRequestProto::favorednodes(int index) const {
  // @@protoc_insertion_point(field_get:AddBlockRequestProto.favoredNodes)
  return favorednodes_.Get(index);
}
 ::std::string* AddBlockRequestProto::mutable_favorednodes(int index) {
  // @@protoc_insertion_point(field_mutable:AddBlockRequestProto.favoredNodes)
  return favorednodes_.Mutable(index);
}
 void AddBlockRequestProto::set_favorednodes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:AddBlockRequestProto.favoredNodes)
  favorednodes_.Mutable(index)->assign(value);
}
 void AddBlockRequestProto::set_favorednodes(int index, const char* value) {
  favorednodes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:AddBlockRequestProto.favoredNodes)
}
 void AddBlockRequestProto::set_favorednodes(int index, const char* value, size_t size) {
  favorednodes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AddBlockRequestProto.favoredNodes)
}
 ::std::string* AddBlockRequestProto::add_favorednodes() {
  // @@protoc_insertion_point(field_add_mutable:AddBlockRequestProto.favoredNodes)
  return favorednodes_.Add();
}
 void AddBlockRequestProto::add_favorednodes(const ::std::string& value) {
  favorednodes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:AddBlockRequestProto.favoredNodes)
}
 void AddBlockRequestProto::add_favorednodes(const char* value) {
  favorednodes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:AddBlockRequestProto.favoredNodes)
}
 void AddBlockRequestProto::add_favorednodes(const char* value, size_t size) {
  favorednodes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:AddBlockRequestProto.favoredNodes)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
AddBlockRequestProto::favorednodes() const {
  // @@protoc_insertion_point(field_list:AddBlockRequestProto.favoredNodes)
  return favorednodes_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
AddBlockRequestProto::mutable_favorednodes() {
  // @@protoc_insertion_point(field_mutable_list:AddBlockRequestProto.favoredNodes)
  return &favorednodes_;
}

// repeated .AddBlockFlagProto flags = 7;
int AddBlockRequestProto::flags_size() const {
  return flags_.size();
}
void AddBlockRequestProto::clear_flags() {
  flags_.Clear();
}
 ::AddBlockFlagProto AddBlockRequestProto::flags(int index) const {
  // @@protoc_insertion_point(field_get:AddBlockRequestProto.flags)
  return static_cast< ::AddBlockFlagProto >(flags_.Get(index));
}
 void AddBlockRequestProto::set_flags(int index, ::AddBlockFlagProto value) {
  assert(::AddBlockFlagProto_IsValid(value));
  flags_.Set(index, value);
  // @@protoc_insertion_point(field_set:AddBlockRequestProto.flags)
}
 void AddBlockRequestProto::add_flags(::AddBlockFlagProto value) {
  assert(::AddBlockFlagProto_IsValid(value));
  flags_.Add(value);
  // @@protoc_insertion_point(field_add:AddBlockRequestProto.flags)
}
 const ::google::protobuf::RepeatedField<int>&
AddBlockRequestProto::flags() const {
  // @@protoc_insertion_point(field_list:AddBlockRequestProto.flags)
  return flags_;
}
 ::google::protobuf::RepeatedField<int>*
AddBlockRequestProto::mutable_flags() {
  // @@protoc_insertion_point(field_mutable_list:AddBlockRequestProto.flags)
  return &flags_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddBlockResponseProto::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddBlockResponseProto::AddBlockResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AddBlockResponseProto)
}

void AddBlockResponseProto::InitAsDefaultInstance() {
  block_ = const_cast< ::LocatedBlockProto*>(&::LocatedBlockProto::default_instance());
}

AddBlockResponseProto::AddBlockResponseProto(const AddBlockResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AddBlockResponseProto)
}

void AddBlockResponseProto::SharedCtor() {
  _cached_size_ = 0;
  block_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddBlockResponseProto::~AddBlockResponseProto() {
  // @@protoc_insertion_point(destructor:AddBlockResponseProto)
  SharedDtor();
}

void AddBlockResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete block_;
  }
}

void AddBlockResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddBlockResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddBlockResponseProto_descriptor_;
}

const AddBlockResponseProto& AddBlockResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

AddBlockResponseProto* AddBlockResponseProto::default_instance_ = NULL;

AddBlockResponseProto* AddBlockResponseProto::New(::google::protobuf::Arena* arena) const {
  AddBlockResponseProto* n = new AddBlockResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddBlockResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:AddBlockResponseProto)
  if (has_block()) {
    if (block_ != NULL) block_->::LocatedBlockProto::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AddBlockResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AddBlockResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .LocatedBlockProto block = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AddBlockResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AddBlockResponseProto)
  return false;
#undef DO_
}

void AddBlockResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AddBlockResponseProto)
  // required .LocatedBlockProto block = 1;
  if (has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->block_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AddBlockResponseProto)
}

::google::protobuf::uint8* AddBlockResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AddBlockResponseProto)
  // required .LocatedBlockProto block = 1;
  if (has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->block_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AddBlockResponseProto)
  return target;
}

int AddBlockResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AddBlockResponseProto)
  int total_size = 0;

  // required .LocatedBlockProto block = 1;
  if (has_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->block_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddBlockResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AddBlockResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddBlockResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddBlockResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AddBlockResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AddBlockResponseProto)
    MergeFrom(*source);
  }
}

void AddBlockResponseProto::MergeFrom(const AddBlockResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AddBlockResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_block()) {
      mutable_block()->::LocatedBlockProto::MergeFrom(from.block());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AddBlockResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AddBlockResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddBlockResponseProto::CopyFrom(const AddBlockResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AddBlockResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBlockResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_block()) {
    if (!this->block_->IsInitialized()) return false;
  }
  return true;
}

void AddBlockResponseProto::Swap(AddBlockResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddBlockResponseProto::InternalSwap(AddBlockResponseProto* other) {
  std::swap(block_, other->block_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddBlockResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddBlockResponseProto_descriptor_;
  metadata.reflection = AddBlockResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddBlockResponseProto

// required .LocatedBlockProto block = 1;
bool AddBlockResponseProto::has_block() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddBlockResponseProto::set_has_block() {
  _has_bits_[0] |= 0x00000001u;
}
void AddBlockResponseProto::clear_has_block() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddBlockResponseProto::clear_block() {
  if (block_ != NULL) block_->::LocatedBlockProto::Clear();
  clear_has_block();
}
const ::LocatedBlockProto& AddBlockResponseProto::block() const {
  // @@protoc_insertion_point(field_get:AddBlockResponseProto.block)
  return block_ != NULL ? *block_ : *default_instance_->block_;
}
::LocatedBlockProto* AddBlockResponseProto::mutable_block() {
  set_has_block();
  if (block_ == NULL) {
    block_ = new ::LocatedBlockProto;
  }
  // @@protoc_insertion_point(field_mutable:AddBlockResponseProto.block)
  return block_;
}
::LocatedBlockProto* AddBlockResponseProto::release_block() {
  // @@protoc_insertion_point(field_release:AddBlockResponseProto.block)
  clear_has_block();
  ::LocatedBlockProto* temp = block_;
  block_ = NULL;
  return temp;
}
void AddBlockResponseProto::set_allocated_block(::LocatedBlockProto* block) {
  delete block_;
  block_ = block;
  if (block) {
    set_has_block();
  } else {
    clear_has_block();
  }
  // @@protoc_insertion_point(field_set_allocated:AddBlockResponseProto.block)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenewLeaseRequestProto::kClientNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenewLeaseRequestProto::RenewLeaseRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RenewLeaseRequestProto)
}

void RenewLeaseRequestProto::InitAsDefaultInstance() {
}

RenewLeaseRequestProto::RenewLeaseRequestProto(const RenewLeaseRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RenewLeaseRequestProto)
}

void RenewLeaseRequestProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  clientname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RenewLeaseRequestProto::~RenewLeaseRequestProto() {
  // @@protoc_insertion_point(destructor:RenewLeaseRequestProto)
  SharedDtor();
}

void RenewLeaseRequestProto::SharedDtor() {
  clientname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RenewLeaseRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenewLeaseRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenewLeaseRequestProto_descriptor_;
}

const RenewLeaseRequestProto& RenewLeaseRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

RenewLeaseRequestProto* RenewLeaseRequestProto::default_instance_ = NULL;

RenewLeaseRequestProto* RenewLeaseRequestProto::New(::google::protobuf::Arena* arena) const {
  RenewLeaseRequestProto* n = new RenewLeaseRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RenewLeaseRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:RenewLeaseRequestProto)
  if (has_clientname()) {
    clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RenewLeaseRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RenewLeaseRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string clientName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientname().data(), this->clientname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RenewLeaseRequestProto.clientName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RenewLeaseRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RenewLeaseRequestProto)
  return false;
#undef DO_
}

void RenewLeaseRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RenewLeaseRequestProto)
  // required string clientName = 1;
  if (has_clientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RenewLeaseRequestProto.clientName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->clientname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RenewLeaseRequestProto)
}

::google::protobuf::uint8* RenewLeaseRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RenewLeaseRequestProto)
  // required string clientName = 1;
  if (has_clientname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RenewLeaseRequestProto.clientName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->clientname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RenewLeaseRequestProto)
  return target;
}

int RenewLeaseRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RenewLeaseRequestProto)
  int total_size = 0;

  // required string clientName = 1;
  if (has_clientname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientname());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenewLeaseRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RenewLeaseRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RenewLeaseRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RenewLeaseRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RenewLeaseRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RenewLeaseRequestProto)
    MergeFrom(*source);
  }
}

void RenewLeaseRequestProto::MergeFrom(const RenewLeaseRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RenewLeaseRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_clientname()) {
      set_has_clientname();
      clientname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RenewLeaseRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RenewLeaseRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenewLeaseRequestProto::CopyFrom(const RenewLeaseRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RenewLeaseRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenewLeaseRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RenewLeaseRequestProto::Swap(RenewLeaseRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenewLeaseRequestProto::InternalSwap(RenewLeaseRequestProto* other) {
  clientname_.Swap(&other->clientname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RenewLeaseRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RenewLeaseRequestProto_descriptor_;
  metadata.reflection = RenewLeaseRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RenewLeaseRequestProto

// required string clientName = 1;
bool RenewLeaseRequestProto::has_clientname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RenewLeaseRequestProto::set_has_clientname() {
  _has_bits_[0] |= 0x00000001u;
}
void RenewLeaseRequestProto::clear_has_clientname() {
  _has_bits_[0] &= ~0x00000001u;
}
void RenewLeaseRequestProto::clear_clientname() {
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientname();
}
 const ::std::string& RenewLeaseRequestProto::clientname() const {
  // @@protoc_insertion_point(field_get:RenewLeaseRequestProto.clientName)
  return clientname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenewLeaseRequestProto::set_clientname(const ::std::string& value) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RenewLeaseRequestProto.clientName)
}
 void RenewLeaseRequestProto::set_clientname(const char* value) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RenewLeaseRequestProto.clientName)
}
 void RenewLeaseRequestProto::set_clientname(const char* value, size_t size) {
  set_has_clientname();
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RenewLeaseRequestProto.clientName)
}
 ::std::string* RenewLeaseRequestProto::mutable_clientname() {
  set_has_clientname();
  // @@protoc_insertion_point(field_mutable:RenewLeaseRequestProto.clientName)
  return clientname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RenewLeaseRequestProto::release_clientname() {
  // @@protoc_insertion_point(field_release:RenewLeaseRequestProto.clientName)
  clear_has_clientname();
  return clientname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenewLeaseRequestProto::set_allocated_clientname(::std::string* clientname) {
  if (clientname != NULL) {
    set_has_clientname();
  } else {
    clear_has_clientname();
  }
  clientname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientname);
  // @@protoc_insertion_point(field_set_allocated:RenewLeaseRequestProto.clientName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenewLeaseResponseProto::RenewLeaseResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RenewLeaseResponseProto)
}

void RenewLeaseResponseProto::InitAsDefaultInstance() {
}

RenewLeaseResponseProto::RenewLeaseResponseProto(const RenewLeaseResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RenewLeaseResponseProto)
}

void RenewLeaseResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RenewLeaseResponseProto::~RenewLeaseResponseProto() {
  // @@protoc_insertion_point(destructor:RenewLeaseResponseProto)
  SharedDtor();
}

void RenewLeaseResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RenewLeaseResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenewLeaseResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenewLeaseResponseProto_descriptor_;
}

const RenewLeaseResponseProto& RenewLeaseResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

RenewLeaseResponseProto* RenewLeaseResponseProto::default_instance_ = NULL;

RenewLeaseResponseProto* RenewLeaseResponseProto::New(::google::protobuf::Arena* arena) const {
  RenewLeaseResponseProto* n = new RenewLeaseResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RenewLeaseResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:RenewLeaseResponseProto)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RenewLeaseResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RenewLeaseResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:RenewLeaseResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RenewLeaseResponseProto)
  return false;
#undef DO_
}

void RenewLeaseResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RenewLeaseResponseProto)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RenewLeaseResponseProto)
}

::google::protobuf::uint8* RenewLeaseResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RenewLeaseResponseProto)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RenewLeaseResponseProto)
  return target;
}

int RenewLeaseResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RenewLeaseResponseProto)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenewLeaseResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RenewLeaseResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RenewLeaseResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RenewLeaseResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RenewLeaseResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RenewLeaseResponseProto)
    MergeFrom(*source);
  }
}

void RenewLeaseResponseProto::MergeFrom(const RenewLeaseResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RenewLeaseResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RenewLeaseResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RenewLeaseResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenewLeaseResponseProto::CopyFrom(const RenewLeaseResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RenewLeaseResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenewLeaseResponseProto::IsInitialized() const {

  return true;
}

void RenewLeaseResponseProto::Swap(RenewLeaseResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenewLeaseResponseProto::InternalSwap(RenewLeaseResponseProto* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RenewLeaseResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RenewLeaseResponseProto_descriptor_;
  metadata.reflection = RenewLeaseResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RenewLeaseResponseProto

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenameRequestProto::kSrcFieldNumber;
const int RenameRequestProto::kDstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenameRequestProto::RenameRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RenameRequestProto)
}

void RenameRequestProto::InitAsDefaultInstance() {
}

RenameRequestProto::RenameRequestProto(const RenameRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RenameRequestProto)
}

void RenameRequestProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RenameRequestProto::~RenameRequestProto() {
  // @@protoc_insertion_point(destructor:RenameRequestProto)
  SharedDtor();
}

void RenameRequestProto::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RenameRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenameRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenameRequestProto_descriptor_;
}

const RenameRequestProto& RenameRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

RenameRequestProto* RenameRequestProto::default_instance_ = NULL;

RenameRequestProto* RenameRequestProto::New(::google::protobuf::Arena* arena) const {
  RenameRequestProto* n = new RenameRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RenameRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:RenameRequestProto)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_src()) {
      src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_dst()) {
      dst_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RenameRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RenameRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RenameRequestProto.src");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dst;
        break;
      }

      // required string dst = 2;
      case 2: {
        if (tag == 18) {
         parse_dst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dst().data(), this->dst().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RenameRequestProto.dst");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RenameRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RenameRequestProto)
  return false;
#undef DO_
}

void RenameRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RenameRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RenameRequestProto.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src(), output);
  }

  // required string dst = 2;
  if (has_dst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dst().data(), this->dst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RenameRequestProto.dst");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dst(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RenameRequestProto)
}

::google::protobuf::uint8* RenameRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RenameRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RenameRequestProto.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  // required string dst = 2;
  if (has_dst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dst().data(), this->dst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RenameRequestProto.dst");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dst(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RenameRequestProto)
  return target;
}

int RenameRequestProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RenameRequestProto)
  int total_size = 0;

  if (has_src()) {
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }

  if (has_dst()) {
    // required string dst = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dst());
  }

  return total_size;
}
int RenameRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RenameRequestProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());

    // required string dst = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dst());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenameRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RenameRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RenameRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RenameRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RenameRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RenameRequestProto)
    MergeFrom(*source);
  }
}

void RenameRequestProto::MergeFrom(const RenameRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RenameRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_has_src();
      src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
    }
    if (from.has_dst()) {
      set_has_dst();
      dst_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RenameRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RenameRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameRequestProto::CopyFrom(const RenameRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RenameRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RenameRequestProto::Swap(RenameRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenameRequestProto::InternalSwap(RenameRequestProto* other) {
  src_.Swap(&other->src_);
  dst_.Swap(&other->dst_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RenameRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RenameRequestProto_descriptor_;
  metadata.reflection = RenameRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RenameRequestProto

// required string src = 1;
bool RenameRequestProto::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RenameRequestProto::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
void RenameRequestProto::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
void RenameRequestProto::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_src();
}
 const ::std::string& RenameRequestProto::src() const {
  // @@protoc_insertion_point(field_get:RenameRequestProto.src)
  return src_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenameRequestProto::set_src(const ::std::string& value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RenameRequestProto.src)
}
 void RenameRequestProto::set_src(const char* value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RenameRequestProto.src)
}
 void RenameRequestProto::set_src(const char* value, size_t size) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RenameRequestProto.src)
}
 ::std::string* RenameRequestProto::mutable_src() {
  set_has_src();
  // @@protoc_insertion_point(field_mutable:RenameRequestProto.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RenameRequestProto::release_src() {
  // @@protoc_insertion_point(field_release:RenameRequestProto.src)
  clear_has_src();
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenameRequestProto::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    set_has_src();
  } else {
    clear_has_src();
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:RenameRequestProto.src)
}

// required string dst = 2;
bool RenameRequestProto::has_dst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RenameRequestProto::set_has_dst() {
  _has_bits_[0] |= 0x00000002u;
}
void RenameRequestProto::clear_has_dst() {
  _has_bits_[0] &= ~0x00000002u;
}
void RenameRequestProto::clear_dst() {
  dst_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dst();
}
 const ::std::string& RenameRequestProto::dst() const {
  // @@protoc_insertion_point(field_get:RenameRequestProto.dst)
  return dst_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenameRequestProto::set_dst(const ::std::string& value) {
  set_has_dst();
  dst_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RenameRequestProto.dst)
}
 void RenameRequestProto::set_dst(const char* value) {
  set_has_dst();
  dst_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RenameRequestProto.dst)
}
 void RenameRequestProto::set_dst(const char* value, size_t size) {
  set_has_dst();
  dst_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RenameRequestProto.dst)
}
 ::std::string* RenameRequestProto::mutable_dst() {
  set_has_dst();
  // @@protoc_insertion_point(field_mutable:RenameRequestProto.dst)
  return dst_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RenameRequestProto::release_dst() {
  // @@protoc_insertion_point(field_release:RenameRequestProto.dst)
  clear_has_dst();
  return dst_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RenameRequestProto::set_allocated_dst(::std::string* dst) {
  if (dst != NULL) {
    set_has_dst();
  } else {
    clear_has_dst();
  }
  dst_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst);
  // @@protoc_insertion_point(field_set_allocated:RenameRequestProto.dst)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenameResponseProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenameResponseProto::RenameResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RenameResponseProto)
}

void RenameResponseProto::InitAsDefaultInstance() {
}

RenameResponseProto::RenameResponseProto(const RenameResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RenameResponseProto)
}

void RenameResponseProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RenameResponseProto::~RenameResponseProto() {
  // @@protoc_insertion_point(destructor:RenameResponseProto)
  SharedDtor();
}

void RenameResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RenameResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenameResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RenameResponseProto_descriptor_;
}

const RenameResponseProto& RenameResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

RenameResponseProto* RenameResponseProto::default_instance_ = NULL;

RenameResponseProto* RenameResponseProto::New(::google::protobuf::Arena* arena) const {
  RenameResponseProto* n = new RenameResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RenameResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:RenameResponseProto)
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RenameResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RenameResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RenameResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RenameResponseProto)
  return false;
#undef DO_
}

void RenameResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RenameResponseProto)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RenameResponseProto)
}

::google::protobuf::uint8* RenameResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RenameResponseProto)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RenameResponseProto)
  return target;
}

int RenameResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RenameResponseProto)
  int total_size = 0;

  // required bool result = 1;
  if (has_result()) {
    total_size += 1 + 1;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenameResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RenameResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RenameResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RenameResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RenameResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RenameResponseProto)
    MergeFrom(*source);
  }
}

void RenameResponseProto::MergeFrom(const RenameResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RenameResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RenameResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RenameResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameResponseProto::CopyFrom(const RenameResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RenameResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RenameResponseProto::Swap(RenameResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenameResponseProto::InternalSwap(RenameResponseProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RenameResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RenameResponseProto_descriptor_;
  metadata.reflection = RenameResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RenameResponseProto

// required bool result = 1;
bool RenameResponseProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RenameResponseProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void RenameResponseProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void RenameResponseProto::clear_result() {
  result_ = false;
  clear_has_result();
}
 bool RenameResponseProto::result() const {
  // @@protoc_insertion_point(field_get:RenameResponseProto.result)
  return result_;
}
 void RenameResponseProto::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:RenameResponseProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRequestProto::kSrcFieldNumber;
const int DeleteRequestProto::kRecursiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRequestProto::DeleteRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteRequestProto)
}

void DeleteRequestProto::InitAsDefaultInstance() {
}

DeleteRequestProto::DeleteRequestProto(const DeleteRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeleteRequestProto)
}

void DeleteRequestProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recursive_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteRequestProto::~DeleteRequestProto() {
  // @@protoc_insertion_point(destructor:DeleteRequestProto)
  SharedDtor();
}

void DeleteRequestProto::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DeleteRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteRequestProto_descriptor_;
}

const DeleteRequestProto& DeleteRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

DeleteRequestProto* DeleteRequestProto::default_instance_ = NULL;

DeleteRequestProto* DeleteRequestProto::New(::google::protobuf::Arena* arena) const {
  DeleteRequestProto* n = new DeleteRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteRequestProto)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_src()) {
      src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    recursive_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DeleteRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DeleteRequestProto.src");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_recursive;
        break;
      }

      // required bool recursive = 2;
      case 2: {
        if (tag == 16) {
         parse_recursive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recursive_)));
          set_has_recursive();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteRequestProto)
  return false;
#undef DO_
}

void DeleteRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeleteRequestProto.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src(), output);
  }

  // required bool recursive = 2;
  if (has_recursive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->recursive(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteRequestProto)
}

::google::protobuf::uint8* DeleteRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeleteRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DeleteRequestProto.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  // required bool recursive = 2;
  if (has_recursive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->recursive(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteRequestProto)
  return target;
}

int DeleteRequestProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DeleteRequestProto)
  int total_size = 0;

  if (has_src()) {
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }

  if (has_recursive()) {
    // required bool recursive = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
int DeleteRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteRequestProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());

    // required bool recursive = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DeleteRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteRequestProto)
    MergeFrom(*source);
  }
}

void DeleteRequestProto::MergeFrom(const DeleteRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_has_src();
      src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
    }
    if (from.has_recursive()) {
      set_recursive(from.recursive());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DeleteRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRequestProto::CopyFrom(const DeleteRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DeleteRequestProto::Swap(DeleteRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRequestProto::InternalSwap(DeleteRequestProto* other) {
  src_.Swap(&other->src_);
  std::swap(recursive_, other->recursive_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteRequestProto_descriptor_;
  metadata.reflection = DeleteRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteRequestProto

// required string src = 1;
bool DeleteRequestProto::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DeleteRequestProto::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
void DeleteRequestProto::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
void DeleteRequestProto::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_src();
}
 const ::std::string& DeleteRequestProto::src() const {
  // @@protoc_insertion_point(field_get:DeleteRequestProto.src)
  return src_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteRequestProto::set_src(const ::std::string& value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeleteRequestProto.src)
}
 void DeleteRequestProto::set_src(const char* value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeleteRequestProto.src)
}
 void DeleteRequestProto::set_src(const char* value, size_t size) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeleteRequestProto.src)
}
 ::std::string* DeleteRequestProto::mutable_src() {
  set_has_src();
  // @@protoc_insertion_point(field_mutable:DeleteRequestProto.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DeleteRequestProto::release_src() {
  // @@protoc_insertion_point(field_release:DeleteRequestProto.src)
  clear_has_src();
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteRequestProto::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    set_has_src();
  } else {
    clear_has_src();
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:DeleteRequestProto.src)
}

// required bool recursive = 2;
bool DeleteRequestProto::has_recursive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DeleteRequestProto::set_has_recursive() {
  _has_bits_[0] |= 0x00000002u;
}
void DeleteRequestProto::clear_has_recursive() {
  _has_bits_[0] &= ~0x00000002u;
}
void DeleteRequestProto::clear_recursive() {
  recursive_ = false;
  clear_has_recursive();
}
 bool DeleteRequestProto::recursive() const {
  // @@protoc_insertion_point(field_get:DeleteRequestProto.recursive)
  return recursive_;
}
 void DeleteRequestProto::set_recursive(bool value) {
  set_has_recursive();
  recursive_ = value;
  // @@protoc_insertion_point(field_set:DeleteRequestProto.recursive)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteResponseProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteResponseProto::DeleteResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteResponseProto)
}

void DeleteResponseProto::InitAsDefaultInstance() {
}

DeleteResponseProto::DeleteResponseProto(const DeleteResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeleteResponseProto)
}

void DeleteResponseProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteResponseProto::~DeleteResponseProto() {
  // @@protoc_insertion_point(destructor:DeleteResponseProto)
  SharedDtor();
}

void DeleteResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteResponseProto_descriptor_;
}

const DeleteResponseProto& DeleteResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

DeleteResponseProto* DeleteResponseProto::default_instance_ = NULL;

DeleteResponseProto* DeleteResponseProto::New(::google::protobuf::Arena* arena) const {
  DeleteResponseProto* n = new DeleteResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:DeleteResponseProto)
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DeleteResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteResponseProto)
  return false;
#undef DO_
}

void DeleteResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteResponseProto)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteResponseProto)
}

::google::protobuf::uint8* DeleteResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeleteResponseProto)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteResponseProto)
  return target;
}

int DeleteResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DeleteResponseProto)
  int total_size = 0;

  // required bool result = 1;
  if (has_result()) {
    total_size += 1 + 1;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeleteResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DeleteResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeleteResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeleteResponseProto)
    MergeFrom(*source);
  }
}

void DeleteResponseProto::MergeFrom(const DeleteResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeleteResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DeleteResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeleteResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResponseProto::CopyFrom(const DeleteResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeleteResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DeleteResponseProto::Swap(DeleteResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteResponseProto::InternalSwap(DeleteResponseProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteResponseProto_descriptor_;
  metadata.reflection = DeleteResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteResponseProto

// required bool result = 1;
bool DeleteResponseProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DeleteResponseProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void DeleteResponseProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void DeleteResponseProto::clear_result() {
  result_ = false;
  clear_has_result();
}
 bool DeleteResponseProto::result() const {
  // @@protoc_insertion_point(field_get:DeleteResponseProto.result)
  return result_;
}
 void DeleteResponseProto::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DeleteResponseProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MkdirsRequestProto::kSrcFieldNumber;
const int MkdirsRequestProto::kMaskedFieldNumber;
const int MkdirsRequestProto::kCreateParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MkdirsRequestProto::MkdirsRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MkdirsRequestProto)
}

void MkdirsRequestProto::InitAsDefaultInstance() {
  masked_ = const_cast< ::FsPermissionProto*>(&::FsPermissionProto::default_instance());
}

MkdirsRequestProto::MkdirsRequestProto(const MkdirsRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MkdirsRequestProto)
}

void MkdirsRequestProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  masked_ = NULL;
  createparent_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MkdirsRequestProto::~MkdirsRequestProto() {
  // @@protoc_insertion_point(destructor:MkdirsRequestProto)
  SharedDtor();
}

void MkdirsRequestProto::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete masked_;
  }
}

void MkdirsRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MkdirsRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MkdirsRequestProto_descriptor_;
}

const MkdirsRequestProto& MkdirsRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

MkdirsRequestProto* MkdirsRequestProto::default_instance_ = NULL;

MkdirsRequestProto* MkdirsRequestProto::New(::google::protobuf::Arena* arena) const {
  MkdirsRequestProto* n = new MkdirsRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MkdirsRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:MkdirsRequestProto)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_src()) {
      src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_masked()) {
      if (masked_ != NULL) masked_->::FsPermissionProto::Clear();
    }
    createparent_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MkdirsRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MkdirsRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MkdirsRequestProto.src");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_masked;
        break;
      }

      // required .FsPermissionProto masked = 2;
      case 2: {
        if (tag == 18) {
         parse_masked:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_masked()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_createParent;
        break;
      }

      // required bool createParent = 3;
      case 3: {
        if (tag == 24) {
         parse_createParent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &createparent_)));
          set_has_createparent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MkdirsRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MkdirsRequestProto)
  return false;
#undef DO_
}

void MkdirsRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MkdirsRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MkdirsRequestProto.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src(), output);
  }

  // required .FsPermissionProto masked = 2;
  if (has_masked()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->masked_, output);
  }

  // required bool createParent = 3;
  if (has_createparent()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->createparent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MkdirsRequestProto)
}

::google::protobuf::uint8* MkdirsRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MkdirsRequestProto)
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MkdirsRequestProto.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  // required .FsPermissionProto masked = 2;
  if (has_masked()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->masked_, false, target);
  }

  // required bool createParent = 3;
  if (has_createparent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->createparent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MkdirsRequestProto)
  return target;
}

int MkdirsRequestProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MkdirsRequestProto)
  int total_size = 0;

  if (has_src()) {
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }

  if (has_masked()) {
    // required .FsPermissionProto masked = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->masked_);
  }

  if (has_createparent()) {
    // required bool createParent = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
int MkdirsRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MkdirsRequestProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string src = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());

    // required .FsPermissionProto masked = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->masked_);

    // required bool createParent = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MkdirsRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MkdirsRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MkdirsRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MkdirsRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MkdirsRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MkdirsRequestProto)
    MergeFrom(*source);
  }
}

void MkdirsRequestProto::MergeFrom(const MkdirsRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MkdirsRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_has_src();
      src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
    }
    if (from.has_masked()) {
      mutable_masked()->::FsPermissionProto::MergeFrom(from.masked());
    }
    if (from.has_createparent()) {
      set_createparent(from.createparent());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MkdirsRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MkdirsRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MkdirsRequestProto::CopyFrom(const MkdirsRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MkdirsRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MkdirsRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_masked()) {
    if (!this->masked_->IsInitialized()) return false;
  }
  return true;
}

void MkdirsRequestProto::Swap(MkdirsRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MkdirsRequestProto::InternalSwap(MkdirsRequestProto* other) {
  src_.Swap(&other->src_);
  std::swap(masked_, other->masked_);
  std::swap(createparent_, other->createparent_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MkdirsRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MkdirsRequestProto_descriptor_;
  metadata.reflection = MkdirsRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MkdirsRequestProto

// required string src = 1;
bool MkdirsRequestProto::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MkdirsRequestProto::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
void MkdirsRequestProto::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
void MkdirsRequestProto::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_src();
}
 const ::std::string& MkdirsRequestProto::src() const {
  // @@protoc_insertion_point(field_get:MkdirsRequestProto.src)
  return src_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MkdirsRequestProto::set_src(const ::std::string& value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MkdirsRequestProto.src)
}
 void MkdirsRequestProto::set_src(const char* value) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MkdirsRequestProto.src)
}
 void MkdirsRequestProto::set_src(const char* value, size_t size) {
  set_has_src();
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MkdirsRequestProto.src)
}
 ::std::string* MkdirsRequestProto::mutable_src() {
  set_has_src();
  // @@protoc_insertion_point(field_mutable:MkdirsRequestProto.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MkdirsRequestProto::release_src() {
  // @@protoc_insertion_point(field_release:MkdirsRequestProto.src)
  clear_has_src();
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MkdirsRequestProto::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    set_has_src();
  } else {
    clear_has_src();
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:MkdirsRequestProto.src)
}

// required .FsPermissionProto masked = 2;
bool MkdirsRequestProto::has_masked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MkdirsRequestProto::set_has_masked() {
  _has_bits_[0] |= 0x00000002u;
}
void MkdirsRequestProto::clear_has_masked() {
  _has_bits_[0] &= ~0x00000002u;
}
void MkdirsRequestProto::clear_masked() {
  if (masked_ != NULL) masked_->::FsPermissionProto::Clear();
  clear_has_masked();
}
const ::FsPermissionProto& MkdirsRequestProto::masked() const {
  // @@protoc_insertion_point(field_get:MkdirsRequestProto.masked)
  return masked_ != NULL ? *masked_ : *default_instance_->masked_;
}
::FsPermissionProto* MkdirsRequestProto::mutable_masked() {
  set_has_masked();
  if (masked_ == NULL) {
    masked_ = new ::FsPermissionProto;
  }
  // @@protoc_insertion_point(field_mutable:MkdirsRequestProto.masked)
  return masked_;
}
::FsPermissionProto* MkdirsRequestProto::release_masked() {
  // @@protoc_insertion_point(field_release:MkdirsRequestProto.masked)
  clear_has_masked();
  ::FsPermissionProto* temp = masked_;
  masked_ = NULL;
  return temp;
}
void MkdirsRequestProto::set_allocated_masked(::FsPermissionProto* masked) {
  delete masked_;
  masked_ = masked;
  if (masked) {
    set_has_masked();
  } else {
    clear_has_masked();
  }
  // @@protoc_insertion_point(field_set_allocated:MkdirsRequestProto.masked)
}

// required bool createParent = 3;
bool MkdirsRequestProto::has_createparent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MkdirsRequestProto::set_has_createparent() {
  _has_bits_[0] |= 0x00000004u;
}
void MkdirsRequestProto::clear_has_createparent() {
  _has_bits_[0] &= ~0x00000004u;
}
void MkdirsRequestProto::clear_createparent() {
  createparent_ = false;
  clear_has_createparent();
}
 bool MkdirsRequestProto::createparent() const {
  // @@protoc_insertion_point(field_get:MkdirsRequestProto.createParent)
  return createparent_;
}
 void MkdirsRequestProto::set_createparent(bool value) {
  set_has_createparent();
  createparent_ = value;
  // @@protoc_insertion_point(field_set:MkdirsRequestProto.createParent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MkdirsResponseProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MkdirsResponseProto::MkdirsResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MkdirsResponseProto)
}

void MkdirsResponseProto::InitAsDefaultInstance() {
}

MkdirsResponseProto::MkdirsResponseProto(const MkdirsResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MkdirsResponseProto)
}

void MkdirsResponseProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MkdirsResponseProto::~MkdirsResponseProto() {
  // @@protoc_insertion_point(destructor:MkdirsResponseProto)
  SharedDtor();
}

void MkdirsResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MkdirsResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MkdirsResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MkdirsResponseProto_descriptor_;
}

const MkdirsResponseProto& MkdirsResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

MkdirsResponseProto* MkdirsResponseProto::default_instance_ = NULL;

MkdirsResponseProto* MkdirsResponseProto::New(::google::protobuf::Arena* arena) const {
  MkdirsResponseProto* n = new MkdirsResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MkdirsResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:MkdirsResponseProto)
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MkdirsResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MkdirsResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MkdirsResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MkdirsResponseProto)
  return false;
#undef DO_
}

void MkdirsResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MkdirsResponseProto)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MkdirsResponseProto)
}

::google::protobuf::uint8* MkdirsResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MkdirsResponseProto)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MkdirsResponseProto)
  return target;
}

int MkdirsResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MkdirsResponseProto)
  int total_size = 0;

  // required bool result = 1;
  if (has_result()) {
    total_size += 1 + 1;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MkdirsResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MkdirsResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MkdirsResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MkdirsResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MkdirsResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MkdirsResponseProto)
    MergeFrom(*source);
  }
}

void MkdirsResponseProto::MergeFrom(const MkdirsResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MkdirsResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MkdirsResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MkdirsResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MkdirsResponseProto::CopyFrom(const MkdirsResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MkdirsResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MkdirsResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MkdirsResponseProto::Swap(MkdirsResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MkdirsResponseProto::InternalSwap(MkdirsResponseProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MkdirsResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MkdirsResponseProto_descriptor_;
  metadata.reflection = MkdirsResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MkdirsResponseProto

// required bool result = 1;
bool MkdirsResponseProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MkdirsResponseProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void MkdirsResponseProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void MkdirsResponseProto::clear_result() {
  result_ = false;
  clear_has_result();
}
 bool MkdirsResponseProto::result() const {
  // @@protoc_insertion_point(field_get:MkdirsResponseProto.result)
  return result_;
}
 void MkdirsResponseProto::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:MkdirsResponseProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFsStatsRequestProto::GetFsStatsRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetFsStatsRequestProto)
}

void GetFsStatsRequestProto::InitAsDefaultInstance() {
}

GetFsStatsRequestProto::GetFsStatsRequestProto(const GetFsStatsRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetFsStatsRequestProto)
}

void GetFsStatsRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFsStatsRequestProto::~GetFsStatsRequestProto() {
  // @@protoc_insertion_point(destructor:GetFsStatsRequestProto)
  SharedDtor();
}

void GetFsStatsRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFsStatsRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFsStatsRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFsStatsRequestProto_descriptor_;
}

const GetFsStatsRequestProto& GetFsStatsRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetFsStatsRequestProto* GetFsStatsRequestProto::default_instance_ = NULL;

GetFsStatsRequestProto* GetFsStatsRequestProto::New(::google::protobuf::Arena* arena) const {
  GetFsStatsRequestProto* n = new GetFsStatsRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFsStatsRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetFsStatsRequestProto)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetFsStatsRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetFsStatsRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GetFsStatsRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetFsStatsRequestProto)
  return false;
#undef DO_
}

void GetFsStatsRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetFsStatsRequestProto)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetFsStatsRequestProto)
}

::google::protobuf::uint8* GetFsStatsRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetFsStatsRequestProto)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetFsStatsRequestProto)
  return target;
}

int GetFsStatsRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetFsStatsRequestProto)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFsStatsRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetFsStatsRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetFsStatsRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFsStatsRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetFsStatsRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetFsStatsRequestProto)
    MergeFrom(*source);
  }
}

void GetFsStatsRequestProto::MergeFrom(const GetFsStatsRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetFsStatsRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetFsStatsRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetFsStatsRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFsStatsRequestProto::CopyFrom(const GetFsStatsRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetFsStatsRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFsStatsRequestProto::IsInitialized() const {

  return true;
}

void GetFsStatsRequestProto::Swap(GetFsStatsRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFsStatsRequestProto::InternalSwap(GetFsStatsRequestProto* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFsStatsRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFsStatsRequestProto_descriptor_;
  metadata.reflection = GetFsStatsRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFsStatsRequestProto

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFsStatsResponseProto::kCapacityFieldNumber;
const int GetFsStatsResponseProto::kUsedFieldNumber;
const int GetFsStatsResponseProto::kRemainingFieldNumber;
const int GetFsStatsResponseProto::kUnderReplicatedFieldNumber;
const int GetFsStatsResponseProto::kCorruptBlocksFieldNumber;
const int GetFsStatsResponseProto::kMissingBlocksFieldNumber;
const int GetFsStatsResponseProto::kMissingReplOneBlocksFieldNumber;
const int GetFsStatsResponseProto::kBlocksInFutureFieldNumber;
const int GetFsStatsResponseProto::kPendingDeletionBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFsStatsResponseProto::GetFsStatsResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetFsStatsResponseProto)
}

void GetFsStatsResponseProto::InitAsDefaultInstance() {
}

GetFsStatsResponseProto::GetFsStatsResponseProto(const GetFsStatsResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetFsStatsResponseProto)
}

void GetFsStatsResponseProto::SharedCtor() {
  _cached_size_ = 0;
  capacity_ = GOOGLE_ULONGLONG(0);
  used_ = GOOGLE_ULONGLONG(0);
  remaining_ = GOOGLE_ULONGLONG(0);
  under_replicated_ = GOOGLE_ULONGLONG(0);
  corrupt_blocks_ = GOOGLE_ULONGLONG(0);
  missing_blocks_ = GOOGLE_ULONGLONG(0);
  missing_repl_one_blocks_ = GOOGLE_ULONGLONG(0);
  blocks_in_future_ = GOOGLE_ULONGLONG(0);
  pending_deletion_blocks_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFsStatsResponseProto::~GetFsStatsResponseProto() {
  // @@protoc_insertion_point(destructor:GetFsStatsResponseProto)
  SharedDtor();
}

void GetFsStatsResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFsStatsResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFsStatsResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFsStatsResponseProto_descriptor_;
}

const GetFsStatsResponseProto& GetFsStatsResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetFsStatsResponseProto* GetFsStatsResponseProto::default_instance_ = NULL;

GetFsStatsResponseProto* GetFsStatsResponseProto::New(::google::protobuf::Arena* arena) const {
  GetFsStatsResponseProto* n = new GetFsStatsResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFsStatsResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetFsStatsResponseProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetFsStatsResponseProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetFsStatsResponseProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(capacity_, blocks_in_future_);
  }
  pending_deletion_blocks_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetFsStatsResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetFsStatsResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 capacity = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &capacity_)));
          set_has_capacity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_used;
        break;
      }

      // required uint64 used = 2;
      case 2: {
        if (tag == 16) {
         parse_used:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &used_)));
          set_has_used();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_remaining;
        break;
      }

      // required uint64 remaining = 3;
      case 3: {
        if (tag == 24) {
         parse_remaining:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &remaining_)));
          set_has_remaining();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_under_replicated;
        break;
      }

      // required uint64 under_replicated = 4;
      case 4: {
        if (tag == 32) {
         parse_under_replicated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &under_replicated_)));
          set_has_under_replicated();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_corrupt_blocks;
        break;
      }

      // required uint64 corrupt_blocks = 5;
      case 5: {
        if (tag == 40) {
         parse_corrupt_blocks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &corrupt_blocks_)));
          set_has_corrupt_blocks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_missing_blocks;
        break;
      }

      // required uint64 missing_blocks = 6;
      case 6: {
        if (tag == 48) {
         parse_missing_blocks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &missing_blocks_)));
          set_has_missing_blocks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_missing_repl_one_blocks;
        break;
      }

      // optional uint64 missing_repl_one_blocks = 7;
      case 7: {
        if (tag == 56) {
         parse_missing_repl_one_blocks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &missing_repl_one_blocks_)));
          set_has_missing_repl_one_blocks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_blocks_in_future;
        break;
      }

      // optional uint64 blocks_in_future = 8;
      case 8: {
        if (tag == 64) {
         parse_blocks_in_future:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &blocks_in_future_)));
          set_has_blocks_in_future();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_pending_deletion_blocks;
        break;
      }

      // optional uint64 pending_deletion_blocks = 9;
      case 9: {
        if (tag == 72) {
         parse_pending_deletion_blocks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pending_deletion_blocks_)));
          set_has_pending_deletion_blocks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetFsStatsResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetFsStatsResponseProto)
  return false;
#undef DO_
}

void GetFsStatsResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetFsStatsResponseProto)
  // required uint64 capacity = 1;
  if (has_capacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->capacity(), output);
  }

  // required uint64 used = 2;
  if (has_used()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->used(), output);
  }

  // required uint64 remaining = 3;
  if (has_remaining()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->remaining(), output);
  }

  // required uint64 under_replicated = 4;
  if (has_under_replicated()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->under_replicated(), output);
  }

  // required uint64 corrupt_blocks = 5;
  if (has_corrupt_blocks()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->corrupt_blocks(), output);
  }

  // required uint64 missing_blocks = 6;
  if (has_missing_blocks()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->missing_blocks(), output);
  }

  // optional uint64 missing_repl_one_blocks = 7;
  if (has_missing_repl_one_blocks()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->missing_repl_one_blocks(), output);
  }

  // optional uint64 blocks_in_future = 8;
  if (has_blocks_in_future()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->blocks_in_future(), output);
  }

  // optional uint64 pending_deletion_blocks = 9;
  if (has_pending_deletion_blocks()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->pending_deletion_blocks(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetFsStatsResponseProto)
}

::google::protobuf::uint8* GetFsStatsResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetFsStatsResponseProto)
  // required uint64 capacity = 1;
  if (has_capacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->capacity(), target);
  }

  // required uint64 used = 2;
  if (has_used()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->used(), target);
  }

  // required uint64 remaining = 3;
  if (has_remaining()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->remaining(), target);
  }

  // required uint64 under_replicated = 4;
  if (has_under_replicated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->under_replicated(), target);
  }

  // required uint64 corrupt_blocks = 5;
  if (has_corrupt_blocks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->corrupt_blocks(), target);
  }

  // required uint64 missing_blocks = 6;
  if (has_missing_blocks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->missing_blocks(), target);
  }

  // optional uint64 missing_repl_one_blocks = 7;
  if (has_missing_repl_one_blocks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->missing_repl_one_blocks(), target);
  }

  // optional uint64 blocks_in_future = 8;
  if (has_blocks_in_future()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->blocks_in_future(), target);
  }

  // optional uint64 pending_deletion_blocks = 9;
  if (has_pending_deletion_blocks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->pending_deletion_blocks(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetFsStatsResponseProto)
  return target;
}

int GetFsStatsResponseProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GetFsStatsResponseProto)
  int total_size = 0;

  if (has_capacity()) {
    // required uint64 capacity = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->capacity());
  }

  if (has_used()) {
    // required uint64 used = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->used());
  }

  if (has_remaining()) {
    // required uint64 remaining = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->remaining());
  }

  if (has_under_replicated()) {
    // required uint64 under_replicated = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->under_replicated());
  }

  if (has_corrupt_blocks()) {
    // required uint64 corrupt_blocks = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->corrupt_blocks());
  }

  if (has_missing_blocks()) {
    // required uint64 missing_blocks = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->missing_blocks());
  }

  return total_size;
}
int GetFsStatsResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetFsStatsResponseProto)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required uint64 capacity = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->capacity());

    // required uint64 used = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->used());

    // required uint64 remaining = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->remaining());

    // required uint64 under_replicated = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->under_replicated());

    // required uint64 corrupt_blocks = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->corrupt_blocks());

    // required uint64 missing_blocks = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->missing_blocks());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[6 / 32] & 192u) {
    // optional uint64 missing_repl_one_blocks = 7;
    if (has_missing_repl_one_blocks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->missing_repl_one_blocks());
    }

    // optional uint64 blocks_in_future = 8;
    if (has_blocks_in_future()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->blocks_in_future());
    }

  }
  // optional uint64 pending_deletion_blocks = 9;
  if (has_pending_deletion_blocks()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pending_deletion_blocks());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFsStatsResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetFsStatsResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetFsStatsResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFsStatsResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetFsStatsResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetFsStatsResponseProto)
    MergeFrom(*source);
  }
}

void GetFsStatsResponseProto::MergeFrom(const GetFsStatsResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetFsStatsResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_capacity()) {
      set_capacity(from.capacity());
    }
    if (from.has_used()) {
      set_used(from.used());
    }
    if (from.has_remaining()) {
      set_remaining(from.remaining());
    }
    if (from.has_under_replicated()) {
      set_under_replicated(from.under_replicated());
    }
    if (from.has_corrupt_blocks()) {
      set_corrupt_blocks(from.corrupt_blocks());
    }
    if (from.has_missing_blocks()) {
      set_missing_blocks(from.missing_blocks());
    }
    if (from.has_missing_repl_one_blocks()) {
      set_missing_repl_one_blocks(from.missing_repl_one_blocks());
    }
    if (from.has_blocks_in_future()) {
      set_blocks_in_future(from.blocks_in_future());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_pending_deletion_blocks()) {
      set_pending_deletion_blocks(from.pending_deletion_blocks());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetFsStatsResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetFsStatsResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFsStatsResponseProto::CopyFrom(const GetFsStatsResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetFsStatsResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFsStatsResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void GetFsStatsResponseProto::Swap(GetFsStatsResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFsStatsResponseProto::InternalSwap(GetFsStatsResponseProto* other) {
  std::swap(capacity_, other->capacity_);
  std::swap(used_, other->used_);
  std::swap(remaining_, other->remaining_);
  std::swap(under_replicated_, other->under_replicated_);
  std::swap(corrupt_blocks_, other->corrupt_blocks_);
  std::swap(missing_blocks_, other->missing_blocks_);
  std::swap(missing_repl_one_blocks_, other->missing_repl_one_blocks_);
  std::swap(blocks_in_future_, other->blocks_in_future_);
  std::swap(pending_deletion_blocks_, other->pending_deletion_blocks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFsStatsResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFsStatsResponseProto_descriptor_;
  metadata.reflection = GetFsStatsResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFsStatsResponseProto

// required uint64 capacity = 1;
bool GetFsStatsResponseProto::has_capacity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetFsStatsResponseProto::set_has_capacity() {
  _has_bits_[0] |= 0x00000001u;
}
void GetFsStatsResponseProto::clear_has_capacity() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetFsStatsResponseProto::clear_capacity() {
  capacity_ = GOOGLE_ULONGLONG(0);
  clear_has_capacity();
}
 ::google::protobuf::uint64 GetFsStatsResponseProto::capacity() const {
  // @@protoc_insertion_point(field_get:GetFsStatsResponseProto.capacity)
  return capacity_;
}
 void GetFsStatsResponseProto::set_capacity(::google::protobuf::uint64 value) {
  set_has_capacity();
  capacity_ = value;
  // @@protoc_insertion_point(field_set:GetFsStatsResponseProto.capacity)
}

// required uint64 used = 2;
bool GetFsStatsResponseProto::has_used() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetFsStatsResponseProto::set_has_used() {
  _has_bits_[0] |= 0x00000002u;
}
void GetFsStatsResponseProto::clear_has_used() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetFsStatsResponseProto::clear_used() {
  used_ = GOOGLE_ULONGLONG(0);
  clear_has_used();
}
 ::google::protobuf::uint64 GetFsStatsResponseProto::used() const {
  // @@protoc_insertion_point(field_get:GetFsStatsResponseProto.used)
  return used_;
}
 void GetFsStatsResponseProto::set_used(::google::protobuf::uint64 value) {
  set_has_used();
  used_ = value;
  // @@protoc_insertion_point(field_set:GetFsStatsResponseProto.used)
}

// required uint64 remaining = 3;
bool GetFsStatsResponseProto::has_remaining() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetFsStatsResponseProto::set_has_remaining() {
  _has_bits_[0] |= 0x00000004u;
}
void GetFsStatsResponseProto::clear_has_remaining() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetFsStatsResponseProto::clear_remaining() {
  remaining_ = GOOGLE_ULONGLONG(0);
  clear_has_remaining();
}
 ::google::protobuf::uint64 GetFsStatsResponseProto::remaining() const {
  // @@protoc_insertion_point(field_get:GetFsStatsResponseProto.remaining)
  return remaining_;
}
 void GetFsStatsResponseProto::set_remaining(::google::protobuf::uint64 value) {
  set_has_remaining();
  remaining_ = value;
  // @@protoc_insertion_point(field_set:GetFsStatsResponseProto.remaining)
}

// required uint64 under_replicated = 4;
bool GetFsStatsResponseProto::has_under_replicated() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetFsStatsResponseProto::set_has_under_replicated() {
  _has_bits_[0] |= 0x00000008u;
}
void GetFsStatsResponseProto::clear_has_under_replicated() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetFsStatsResponseProto::clear_under_replicated() {
  under_replicated_ = GOOGLE_ULONGLONG(0);
  clear_has_under_replicated();
}
 ::google::protobuf::uint64 GetFsStatsResponseProto::under_replicated() const {
  // @@protoc_insertion_point(field_get:GetFsStatsResponseProto.under_replicated)
  return under_replicated_;
}
 void GetFsStatsResponseProto::set_under_replicated(::google::protobuf::uint64 value) {
  set_has_under_replicated();
  under_replicated_ = value;
  // @@protoc_insertion_point(field_set:GetFsStatsResponseProto.under_replicated)
}

// required uint64 corrupt_blocks = 5;
bool GetFsStatsResponseProto::has_corrupt_blocks() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetFsStatsResponseProto::set_has_corrupt_blocks() {
  _has_bits_[0] |= 0x00000010u;
}
void GetFsStatsResponseProto::clear_has_corrupt_blocks() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetFsStatsResponseProto::clear_corrupt_blocks() {
  corrupt_blocks_ = GOOGLE_ULONGLONG(0);
  clear_has_corrupt_blocks();
}
 ::google::protobuf::uint64 GetFsStatsResponseProto::corrupt_blocks() const {
  // @@protoc_insertion_point(field_get:GetFsStatsResponseProto.corrupt_blocks)
  return corrupt_blocks_;
}
 void GetFsStatsResponseProto::set_corrupt_blocks(::google::protobuf::uint64 value) {
  set_has_corrupt_blocks();
  corrupt_blocks_ = value;
  // @@protoc_insertion_point(field_set:GetFsStatsResponseProto.corrupt_blocks)
}

// required uint64 missing_blocks = 6;
bool GetFsStatsResponseProto::has_missing_blocks() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GetFsStatsResponseProto::set_has_missing_blocks() {
  _has_bits_[0] |= 0x00000020u;
}
void GetFsStatsResponseProto::clear_has_missing_blocks() {
  _has_bits_[0] &= ~0x00000020u;
}
void GetFsStatsResponseProto::clear_missing_blocks() {
  missing_blocks_ = GOOGLE_ULONGLONG(0);
  clear_has_missing_blocks();
}
 ::google::protobuf::uint64 GetFsStatsResponseProto::missing_blocks() const {
  // @@protoc_insertion_point(field_get:GetFsStatsResponseProto.missing_blocks)
  return missing_blocks_;
}
 void GetFsStatsResponseProto::set_missing_blocks(::google::protobuf::uint64 value) {
  set_has_missing_blocks();
  missing_blocks_ = value;
  // @@protoc_insertion_point(field_set:GetFsStatsResponseProto.missing_blocks)
}

// optional uint64 missing_repl_one_blocks = 7;
bool GetFsStatsResponseProto::has_missing_repl_one_blocks() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GetFsStatsResponseProto::set_has_missing_repl_one_blocks() {
  _has_bits_[0] |= 0x00000040u;
}
void GetFsStatsResponseProto::clear_has_missing_repl_one_blocks() {
  _has_bits_[0] &= ~0x00000040u;
}
void GetFsStatsResponseProto::clear_missing_repl_one_blocks() {
  missing_repl_one_blocks_ = GOOGLE_ULONGLONG(0);
  clear_has_missing_repl_one_blocks();
}
 ::google::protobuf::uint64 GetFsStatsResponseProto::missing_repl_one_blocks() const {
  // @@protoc_insertion_point(field_get:GetFsStatsResponseProto.missing_repl_one_blocks)
  return missing_repl_one_blocks_;
}
 void GetFsStatsResponseProto::set_missing_repl_one_blocks(::google::protobuf::uint64 value) {
  set_has_missing_repl_one_blocks();
  missing_repl_one_blocks_ = value;
  // @@protoc_insertion_point(field_set:GetFsStatsResponseProto.missing_repl_one_blocks)
}

// optional uint64 blocks_in_future = 8;
bool GetFsStatsResponseProto::has_blocks_in_future() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GetFsStatsResponseProto::set_has_blocks_in_future() {
  _has_bits_[0] |= 0x00000080u;
}
void GetFsStatsResponseProto::clear_has_blocks_in_future() {
  _has_bits_[0] &= ~0x00000080u;
}
void GetFsStatsResponseProto::clear_blocks_in_future() {
  blocks_in_future_ = GOOGLE_ULONGLONG(0);
  clear_has_blocks_in_future();
}
 ::google::protobuf::uint64 GetFsStatsResponseProto::blocks_in_future() const {
  // @@protoc_insertion_point(field_get:GetFsStatsResponseProto.blocks_in_future)
  return blocks_in_future_;
}
 void GetFsStatsResponseProto::set_blocks_in_future(::google::protobuf::uint64 value) {
  set_has_blocks_in_future();
  blocks_in_future_ = value;
  // @@protoc_insertion_point(field_set:GetFsStatsResponseProto.blocks_in_future)
}

// optional uint64 pending_deletion_blocks = 9;
bool GetFsStatsResponseProto::has_pending_deletion_blocks() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GetFsStatsResponseProto::set_has_pending_deletion_blocks() {
  _has_bits_[0] |= 0x00000100u;
}
void GetFsStatsResponseProto::clear_has_pending_deletion_blocks() {
  _has_bits_[0] &= ~0x00000100u;
}
void GetFsStatsResponseProto::clear_pending_deletion_blocks() {
  pending_deletion_blocks_ = GOOGLE_ULONGLONG(0);
  clear_has_pending_deletion_blocks();
}
 ::google::protobuf::uint64 GetFsStatsResponseProto::pending_deletion_blocks() const {
  // @@protoc_insertion_point(field_get:GetFsStatsResponseProto.pending_deletion_blocks)
  return pending_deletion_blocks_;
}
 void GetFsStatsResponseProto::set_pending_deletion_blocks(::google::protobuf::uint64 value) {
  set_has_pending_deletion_blocks();
  pending_deletion_blocks_ = value;
  // @@protoc_insertion_point(field_set:GetFsStatsResponseProto.pending_deletion_blocks)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSafeModeRequestProto::kActionFieldNumber;
const int SetSafeModeRequestProto::kCheckedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSafeModeRequestProto::SetSafeModeRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetSafeModeRequestProto)
}

void SetSafeModeRequestProto::InitAsDefaultInstance() {
}

SetSafeModeRequestProto::SetSafeModeRequestProto(const SetSafeModeRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetSafeModeRequestProto)
}

void SetSafeModeRequestProto::SharedCtor() {
  _cached_size_ = 0;
  action_ = 1;
  checked_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetSafeModeRequestProto::~SetSafeModeRequestProto() {
  // @@protoc_insertion_point(destructor:SetSafeModeRequestProto)
  SharedDtor();
}

void SetSafeModeRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetSafeModeRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSafeModeRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetSafeModeRequestProto_descriptor_;
}

const SetSafeModeRequestProto& SetSafeModeRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

SetSafeModeRequestProto* SetSafeModeRequestProto::default_instance_ = NULL;

SetSafeModeRequestProto* SetSafeModeRequestProto::New(::google::protobuf::Arena* arena) const {
  SetSafeModeRequestProto* n = new SetSafeModeRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSafeModeRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:SetSafeModeRequestProto)
  if (_has_bits_[0 / 32] & 3u) {
    action_ = 1;
    checked_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SetSafeModeRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetSafeModeRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .SafeModeActionProto action = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SafeModeActionProto_IsValid(value)) {
            set_action(static_cast< ::SafeModeActionProto >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_checked;
        break;
      }

      // optional bool checked = 2 [default = false];
      case 2: {
        if (tag == 16) {
         parse_checked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &checked_)));
          set_has_checked();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetSafeModeRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetSafeModeRequestProto)
  return false;
#undef DO_
}

void SetSafeModeRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetSafeModeRequestProto)
  // required .SafeModeActionProto action = 1;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->action(), output);
  }

  // optional bool checked = 2 [default = false];
  if (has_checked()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->checked(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SetSafeModeRequestProto)
}

::google::protobuf::uint8* SetSafeModeRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SetSafeModeRequestProto)
  // required .SafeModeActionProto action = 1;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->action(), target);
  }

  // optional bool checked = 2 [default = false];
  if (has_checked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->checked(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetSafeModeRequestProto)
  return target;
}

int SetSafeModeRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetSafeModeRequestProto)
  int total_size = 0;

  // required .SafeModeActionProto action = 1;
  if (has_action()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }
  // optional bool checked = 2 [default = false];
  if (has_checked()) {
    total_size += 1 + 1;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSafeModeRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetSafeModeRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetSafeModeRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSafeModeRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetSafeModeRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetSafeModeRequestProto)
    MergeFrom(*source);
  }
}

void SetSafeModeRequestProto::MergeFrom(const SetSafeModeRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetSafeModeRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_action()) {
      set_action(from.action());
    }
    if (from.has_checked()) {
      set_checked(from.checked());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SetSafeModeRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetSafeModeRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSafeModeRequestProto::CopyFrom(const SetSafeModeRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetSafeModeRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSafeModeRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetSafeModeRequestProto::Swap(SetSafeModeRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSafeModeRequestProto::InternalSwap(SetSafeModeRequestProto* other) {
  std::swap(action_, other->action_);
  std::swap(checked_, other->checked_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetSafeModeRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetSafeModeRequestProto_descriptor_;
  metadata.reflection = SetSafeModeRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetSafeModeRequestProto

// required .SafeModeActionProto action = 1;
bool SetSafeModeRequestProto::has_action() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetSafeModeRequestProto::set_has_action() {
  _has_bits_[0] |= 0x00000001u;
}
void SetSafeModeRequestProto::clear_has_action() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetSafeModeRequestProto::clear_action() {
  action_ = 1;
  clear_has_action();
}
 ::SafeModeActionProto SetSafeModeRequestProto::action() const {
  // @@protoc_insertion_point(field_get:SetSafeModeRequestProto.action)
  return static_cast< ::SafeModeActionProto >(action_);
}
 void SetSafeModeRequestProto::set_action(::SafeModeActionProto value) {
  assert(::SafeModeActionProto_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:SetSafeModeRequestProto.action)
}

// optional bool checked = 2 [default = false];
bool SetSafeModeRequestProto::has_checked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetSafeModeRequestProto::set_has_checked() {
  _has_bits_[0] |= 0x00000002u;
}
void SetSafeModeRequestProto::clear_has_checked() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetSafeModeRequestProto::clear_checked() {
  checked_ = false;
  clear_has_checked();
}
 bool SetSafeModeRequestProto::checked() const {
  // @@protoc_insertion_point(field_get:SetSafeModeRequestProto.checked)
  return checked_;
}
 void SetSafeModeRequestProto::set_checked(bool value) {
  set_has_checked();
  checked_ = value;
  // @@protoc_insertion_point(field_set:SetSafeModeRequestProto.checked)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSafeModeResponseProto::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSafeModeResponseProto::SetSafeModeResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetSafeModeResponseProto)
}

void SetSafeModeResponseProto::InitAsDefaultInstance() {
}

SetSafeModeResponseProto::SetSafeModeResponseProto(const SetSafeModeResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetSafeModeResponseProto)
}

void SetSafeModeResponseProto::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetSafeModeResponseProto::~SetSafeModeResponseProto() {
  // @@protoc_insertion_point(destructor:SetSafeModeResponseProto)
  SharedDtor();
}

void SetSafeModeResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetSafeModeResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSafeModeResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetSafeModeResponseProto_descriptor_;
}

const SetSafeModeResponseProto& SetSafeModeResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

SetSafeModeResponseProto* SetSafeModeResponseProto::default_instance_ = NULL;

SetSafeModeResponseProto* SetSafeModeResponseProto::New(::google::protobuf::Arena* arena) const {
  SetSafeModeResponseProto* n = new SetSafeModeResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSafeModeResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:SetSafeModeResponseProto)
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SetSafeModeResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetSafeModeResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetSafeModeResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetSafeModeResponseProto)
  return false;
#undef DO_
}

void SetSafeModeResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetSafeModeResponseProto)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SetSafeModeResponseProto)
}

::google::protobuf::uint8* SetSafeModeResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SetSafeModeResponseProto)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetSafeModeResponseProto)
  return target;
}

int SetSafeModeResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetSafeModeResponseProto)
  int total_size = 0;

  // required bool result = 1;
  if (has_result()) {
    total_size += 1 + 1;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSafeModeResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetSafeModeResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetSafeModeResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSafeModeResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetSafeModeResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetSafeModeResponseProto)
    MergeFrom(*source);
  }
}

void SetSafeModeResponseProto::MergeFrom(const SetSafeModeResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetSafeModeResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SetSafeModeResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetSafeModeResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSafeModeResponseProto::CopyFrom(const SetSafeModeResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetSafeModeResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSafeModeResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetSafeModeResponseProto::Swap(SetSafeModeResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSafeModeResponseProto::InternalSwap(SetSafeModeResponseProto* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetSafeModeResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetSafeModeResponseProto_descriptor_;
  metadata.reflection = SetSafeModeResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetSafeModeResponseProto

// required bool result = 1;
bool SetSafeModeResponseProto::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetSafeModeResponseProto::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SetSafeModeResponseProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetSafeModeResponseProto::clear_result() {
  result_ = false;
  clear_has_result();
}
 bool SetSafeModeResponseProto::result() const {
  // @@protoc_insertion_point(field_get:SetSafeModeResponseProto.result)
  return result_;
}
 void SetSafeModeResponseProto::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SetSafeModeResponseProto.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDatanodeReportRequestProto::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDatanodeReportRequestProto::GetDatanodeReportRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetDatanodeReportRequestProto)
}

void GetDatanodeReportRequestProto::InitAsDefaultInstance() {
}

GetDatanodeReportRequestProto::GetDatanodeReportRequestProto(const GetDatanodeReportRequestProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetDatanodeReportRequestProto)
}

void GetDatanodeReportRequestProto::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDatanodeReportRequestProto::~GetDatanodeReportRequestProto() {
  // @@protoc_insertion_point(destructor:GetDatanodeReportRequestProto)
  SharedDtor();
}

void GetDatanodeReportRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetDatanodeReportRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDatanodeReportRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDatanodeReportRequestProto_descriptor_;
}

const GetDatanodeReportRequestProto& GetDatanodeReportRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetDatanodeReportRequestProto* GetDatanodeReportRequestProto::default_instance_ = NULL;

GetDatanodeReportRequestProto* GetDatanodeReportRequestProto::New(::google::protobuf::Arena* arena) const {
  GetDatanodeReportRequestProto* n = new GetDatanodeReportRequestProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDatanodeReportRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetDatanodeReportRequestProto)
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetDatanodeReportRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetDatanodeReportRequestProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DatanodeReportTypeProto type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DatanodeReportTypeProto_IsValid(value)) {
            set_type(static_cast< ::DatanodeReportTypeProto >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetDatanodeReportRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetDatanodeReportRequestProto)
  return false;
#undef DO_
}

void GetDatanodeReportRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetDatanodeReportRequestProto)
  // required .DatanodeReportTypeProto type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetDatanodeReportRequestProto)
}

::google::protobuf::uint8* GetDatanodeReportRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetDatanodeReportRequestProto)
  // required .DatanodeReportTypeProto type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetDatanodeReportRequestProto)
  return target;
}

int GetDatanodeReportRequestProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetDatanodeReportRequestProto)
  int total_size = 0;

  // required .DatanodeReportTypeProto type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDatanodeReportRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetDatanodeReportRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetDatanodeReportRequestProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDatanodeReportRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetDatanodeReportRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetDatanodeReportRequestProto)
    MergeFrom(*source);
  }
}

void GetDatanodeReportRequestProto::MergeFrom(const GetDatanodeReportRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetDatanodeReportRequestProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetDatanodeReportRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetDatanodeReportRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDatanodeReportRequestProto::CopyFrom(const GetDatanodeReportRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetDatanodeReportRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDatanodeReportRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetDatanodeReportRequestProto::Swap(GetDatanodeReportRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDatanodeReportRequestProto::InternalSwap(GetDatanodeReportRequestProto* other) {
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDatanodeReportRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDatanodeReportRequestProto_descriptor_;
  metadata.reflection = GetDatanodeReportRequestProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetDatanodeReportRequestProto

// required .DatanodeReportTypeProto type = 1;
bool GetDatanodeReportRequestProto::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetDatanodeReportRequestProto::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void GetDatanodeReportRequestProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetDatanodeReportRequestProto::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::DatanodeReportTypeProto GetDatanodeReportRequestProto::type() const {
  // @@protoc_insertion_point(field_get:GetDatanodeReportRequestProto.type)
  return static_cast< ::DatanodeReportTypeProto >(type_);
}
 void GetDatanodeReportRequestProto::set_type(::DatanodeReportTypeProto value) {
  assert(::DatanodeReportTypeProto_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:GetDatanodeReportRequestProto.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDatanodeReportResponseProto::kDiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDatanodeReportResponseProto::GetDatanodeReportResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetDatanodeReportResponseProto)
}

void GetDatanodeReportResponseProto::InitAsDefaultInstance() {
}

GetDatanodeReportResponseProto::GetDatanodeReportResponseProto(const GetDatanodeReportResponseProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetDatanodeReportResponseProto)
}

void GetDatanodeReportResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetDatanodeReportResponseProto::~GetDatanodeReportResponseProto() {
  // @@protoc_insertion_point(destructor:GetDatanodeReportResponseProto)
  SharedDtor();
}

void GetDatanodeReportResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetDatanodeReportResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDatanodeReportResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDatanodeReportResponseProto_descriptor_;
}

const GetDatanodeReportResponseProto& GetDatanodeReportResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_namenode_2eproto();
  return *default_instance_;
}

GetDatanodeReportResponseProto* GetDatanodeReportResponseProto::default_instance_ = NULL;

GetDatanodeReportResponseProto* GetDatanodeReportResponseProto::New(::google::protobuf::Arena* arena) const {
  GetDatanodeReportResponseProto* n = new GetDatanodeReportResponseProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDatanodeReportResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:GetDatanodeReportResponseProto)
  di_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetDatanodeReportResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetDatanodeReportResponseProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DatanodeInfoProto di = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_di:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_di()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_di;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetDatanodeReportResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetDatanodeReportResponseProto)
  return false;
#undef DO_
}

void GetDatanodeReportResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetDatanodeReportResponseProto)
  // repeated .DatanodeInfoProto di = 1;
  for (unsigned int i = 0, n = this->di_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->di(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetDatanodeReportResponseProto)
}

::google::protobuf::uint8* GetDatanodeReportResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetDatanodeReportResponseProto)
  // repeated .DatanodeInfoProto di = 1;
  for (unsigned int i = 0, n = this->di_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->di(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetDatanodeReportResponseProto)
  return target;
}

int GetDatanodeReportResponseProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GetDatanodeReportResponseProto)
  int total_size = 0;

  // repeated .DatanodeInfoProto di = 1;
  total_size += 1 * this->di_size();
  for (int i = 0; i < this->di_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->di(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDatanodeReportResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetDatanodeReportResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetDatanodeReportResponseProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDatanodeReportResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetDatanodeReportResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetDatanodeReportResponseProto)
    MergeFrom(*source);
  }
}

void GetDatanodeReportResponseProto::MergeFrom(const GetDatanodeReportResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetDatanodeReportResponseProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  di_.MergeFrom(from.di_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetDatanodeReportResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetDatanodeReportResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDatanodeReportResponseProto::CopyFrom(const GetDatanodeReportResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetDatanodeReportResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDatanodeReportResponseProto::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->di())) return false;
  return true;
}

void GetDatanodeReportResponseProto::Swap(GetDatanodeReportResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDatanodeReportResponseProto::InternalSwap(GetDatanodeReportResponseProto* other) {
  di_.UnsafeArenaSwap(&other->di_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDatanodeReportResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDatanodeReportResponseProto_descriptor_;
  metadata.reflection = GetDatanodeReportResponseProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetDatanodeReportResponseProto

// repeated .DatanodeInfoProto di = 1;
int GetDatanodeReportResponseProto::di_size() const {
  return di_.size();
}
void GetDatanodeReportResponseProto::clear_di() {
  di_.Clear();
}
const ::DatanodeInfoProto& GetDatanodeReportResponseProto::di(int index) const {
  // @@protoc_insertion_point(field_get:GetDatanodeReportResponseProto.di)
  return di_.Get(index);
}
::DatanodeInfoProto* GetDatanodeReportResponseProto::mutable_di(int index) {
  // @@protoc_insertion_point(field_mutable:GetDatanodeReportResponseProto.di)
  return di_.Mutable(index);
}
::DatanodeInfoProto* GetDatanodeReportResponseProto::add_di() {
  // @@protoc_insertion_point(field_add:GetDatanodeReportResponseProto.di)
  return di_.Add();
}
::google::protobuf::RepeatedPtrField< ::DatanodeInfoProto >*
GetDatanodeReportResponseProto::mutable_di() {
  // @@protoc_insertion_point(field_mutable_list:GetDatanodeReportResponseProto.di)
  return &di_;
}
const ::google::protobuf::RepeatedPtrField< ::DatanodeInfoProto >&
GetDatanodeReportResponseProto::di() const {
  // @@protoc_insertion_point(field_list:GetDatanodeReportResponseProto.di)
  return di_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
