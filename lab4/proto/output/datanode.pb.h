// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datanode.proto

#ifndef PROTOBUF_datanode_2eproto__INCLUDED
#define PROTOBUF_datanode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_datanode_2eproto();
void protobuf_AssignDesc_datanode_2eproto();
void protobuf_ShutdownFile_datanode_2eproto();

class CachingStrategyProto;
class OpReadBlockProto;
class OpWriteBlockProto;
class PacketHeaderProto;
class PipelineAckProto;

enum OpWriteBlockProto_BlockConstructionStage {
  OpWriteBlockProto_BlockConstructionStage_PIPELINE_SETUP_APPEND = 0,
  OpWriteBlockProto_BlockConstructionStage_PIPELINE_SETUP_APPEND_RECOVERY = 1,
  OpWriteBlockProto_BlockConstructionStage_DATA_STREAMING = 2,
  OpWriteBlockProto_BlockConstructionStage_PIPELINE_SETUP_STREAMING_RECOVERY = 3,
  OpWriteBlockProto_BlockConstructionStage_PIPELINE_CLOSE = 4,
  OpWriteBlockProto_BlockConstructionStage_PIPELINE_CLOSE_RECOVERY = 5,
  OpWriteBlockProto_BlockConstructionStage_PIPELINE_SETUP_CREATE = 6,
  OpWriteBlockProto_BlockConstructionStage_TRANSFER_RBW = 7,
  OpWriteBlockProto_BlockConstructionStage_TRANSFER_FINALIZED = 8
};
bool OpWriteBlockProto_BlockConstructionStage_IsValid(int value);
const OpWriteBlockProto_BlockConstructionStage OpWriteBlockProto_BlockConstructionStage_BlockConstructionStage_MIN = OpWriteBlockProto_BlockConstructionStage_PIPELINE_SETUP_APPEND;
const OpWriteBlockProto_BlockConstructionStage OpWriteBlockProto_BlockConstructionStage_BlockConstructionStage_MAX = OpWriteBlockProto_BlockConstructionStage_TRANSFER_FINALIZED;
const int OpWriteBlockProto_BlockConstructionStage_BlockConstructionStage_ARRAYSIZE = OpWriteBlockProto_BlockConstructionStage_BlockConstructionStage_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpWriteBlockProto_BlockConstructionStage_descriptor();
inline const ::std::string& OpWriteBlockProto_BlockConstructionStage_Name(OpWriteBlockProto_BlockConstructionStage value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpWriteBlockProto_BlockConstructionStage_descriptor(), value);
}
inline bool OpWriteBlockProto_BlockConstructionStage_Parse(
    const ::std::string& name, OpWriteBlockProto_BlockConstructionStage* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpWriteBlockProto_BlockConstructionStage>(
    OpWriteBlockProto_BlockConstructionStage_descriptor(), name, value);
}
// ===================================================================

class CachingStrategyProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CachingStrategyProto) */ {
 public:
  CachingStrategyProto();
  virtual ~CachingStrategyProto();

  CachingStrategyProto(const CachingStrategyProto& from);

  inline CachingStrategyProto& operator=(const CachingStrategyProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CachingStrategyProto& default_instance();

  void Swap(CachingStrategyProto* other);

  // implements Message ----------------------------------------------

  inline CachingStrategyProto* New() const { return New(NULL); }

  CachingStrategyProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CachingStrategyProto& from);
  void MergeFrom(const CachingStrategyProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CachingStrategyProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool dropBehind = 1;
  bool has_dropbehind() const;
  void clear_dropbehind();
  static const int kDropBehindFieldNumber = 1;
  bool dropbehind() const;
  void set_dropbehind(bool value);

  // optional int64 readahead = 2;
  bool has_readahead() const;
  void clear_readahead();
  static const int kReadaheadFieldNumber = 2;
  ::google::protobuf::int64 readahead() const;
  void set_readahead(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CachingStrategyProto)
 private:
  inline void set_has_dropbehind();
  inline void clear_has_dropbehind();
  inline void set_has_readahead();
  inline void clear_has_readahead();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 readahead_;
  bool dropbehind_;
  friend void  protobuf_AddDesc_datanode_2eproto();
  friend void protobuf_AssignDesc_datanode_2eproto();
  friend void protobuf_ShutdownFile_datanode_2eproto();

  void InitAsDefaultInstance();
  static CachingStrategyProto* default_instance_;
};
// -------------------------------------------------------------------

class OpReadBlockProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpReadBlockProto) */ {
 public:
  OpReadBlockProto();
  virtual ~OpReadBlockProto();

  OpReadBlockProto(const OpReadBlockProto& from);

  inline OpReadBlockProto& operator=(const OpReadBlockProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpReadBlockProto& default_instance();

  void Swap(OpReadBlockProto* other);

  // implements Message ----------------------------------------------

  inline OpReadBlockProto* New() const { return New(NULL); }

  OpReadBlockProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpReadBlockProto& from);
  void MergeFrom(const OpReadBlockProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpReadBlockProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ClientOperationHeaderProto header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::ClientOperationHeaderProto& header() const;
  ::ClientOperationHeaderProto* mutable_header();
  ::ClientOperationHeaderProto* release_header();
  void set_allocated_header(::ClientOperationHeaderProto* header);

  // required uint64 offset = 2;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // required uint64 len = 3;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 3;
  ::google::protobuf::uint64 len() const;
  void set_len(::google::protobuf::uint64 value);

  // optional bool sendChecksums = 4 [default = true];
  bool has_sendchecksums() const;
  void clear_sendchecksums();
  static const int kSendChecksumsFieldNumber = 4;
  bool sendchecksums() const;
  void set_sendchecksums(bool value);

  // optional .CachingStrategyProto cachingStrategy = 5;
  bool has_cachingstrategy() const;
  void clear_cachingstrategy();
  static const int kCachingStrategyFieldNumber = 5;
  const ::CachingStrategyProto& cachingstrategy() const;
  ::CachingStrategyProto* mutable_cachingstrategy();
  ::CachingStrategyProto* release_cachingstrategy();
  void set_allocated_cachingstrategy(::CachingStrategyProto* cachingstrategy);

  // @@protoc_insertion_point(class_scope:OpReadBlockProto)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_len();
  inline void clear_has_len();
  inline void set_has_sendchecksums();
  inline void clear_has_sendchecksums();
  inline void set_has_cachingstrategy();
  inline void clear_has_cachingstrategy();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ClientOperationHeaderProto* header_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint64 len_;
  ::CachingStrategyProto* cachingstrategy_;
  bool sendchecksums_;
  friend void  protobuf_AddDesc_datanode_2eproto();
  friend void protobuf_AssignDesc_datanode_2eproto();
  friend void protobuf_ShutdownFile_datanode_2eproto();

  void InitAsDefaultInstance();
  static OpReadBlockProto* default_instance_;
};
// -------------------------------------------------------------------

class PacketHeaderProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PacketHeaderProto) */ {
 public:
  PacketHeaderProto();
  virtual ~PacketHeaderProto();

  PacketHeaderProto(const PacketHeaderProto& from);

  inline PacketHeaderProto& operator=(const PacketHeaderProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketHeaderProto& default_instance();

  void Swap(PacketHeaderProto* other);

  // implements Message ----------------------------------------------

  inline PacketHeaderProto* New() const { return New(NULL); }

  PacketHeaderProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PacketHeaderProto& from);
  void MergeFrom(const PacketHeaderProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PacketHeaderProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sfixed64 offsetInBlock = 1;
  bool has_offsetinblock() const;
  void clear_offsetinblock();
  static const int kOffsetInBlockFieldNumber = 1;
  ::google::protobuf::int64 offsetinblock() const;
  void set_offsetinblock(::google::protobuf::int64 value);

  // required sfixed64 seqno = 2;
  bool has_seqno() const;
  void clear_seqno();
  static const int kSeqnoFieldNumber = 2;
  ::google::protobuf::int64 seqno() const;
  void set_seqno(::google::protobuf::int64 value);

  // required bool lastPacketInBlock = 3;
  bool has_lastpacketinblock() const;
  void clear_lastpacketinblock();
  static const int kLastPacketInBlockFieldNumber = 3;
  bool lastpacketinblock() const;
  void set_lastpacketinblock(bool value);

  // required sfixed32 dataLen = 4;
  bool has_datalen() const;
  void clear_datalen();
  static const int kDataLenFieldNumber = 4;
  ::google::protobuf::int32 datalen() const;
  void set_datalen(::google::protobuf::int32 value);

  // optional bool syncBlock = 5 [default = false];
  bool has_syncblock() const;
  void clear_syncblock();
  static const int kSyncBlockFieldNumber = 5;
  bool syncblock() const;
  void set_syncblock(bool value);

  // @@protoc_insertion_point(class_scope:PacketHeaderProto)
 private:
  inline void set_has_offsetinblock();
  inline void clear_has_offsetinblock();
  inline void set_has_seqno();
  inline void clear_has_seqno();
  inline void set_has_lastpacketinblock();
  inline void clear_has_lastpacketinblock();
  inline void set_has_datalen();
  inline void clear_has_datalen();
  inline void set_has_syncblock();
  inline void clear_has_syncblock();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 offsetinblock_;
  ::google::protobuf::int64 seqno_;
  ::google::protobuf::int32 datalen_;
  bool lastpacketinblock_;
  bool syncblock_;
  friend void  protobuf_AddDesc_datanode_2eproto();
  friend void protobuf_AssignDesc_datanode_2eproto();
  friend void protobuf_ShutdownFile_datanode_2eproto();

  void InitAsDefaultInstance();
  static PacketHeaderProto* default_instance_;
};
// -------------------------------------------------------------------

class OpWriteBlockProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpWriteBlockProto) */ {
 public:
  OpWriteBlockProto();
  virtual ~OpWriteBlockProto();

  OpWriteBlockProto(const OpWriteBlockProto& from);

  inline OpWriteBlockProto& operator=(const OpWriteBlockProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpWriteBlockProto& default_instance();

  void Swap(OpWriteBlockProto* other);

  // implements Message ----------------------------------------------

  inline OpWriteBlockProto* New() const { return New(NULL); }

  OpWriteBlockProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpWriteBlockProto& from);
  void MergeFrom(const OpWriteBlockProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpWriteBlockProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef OpWriteBlockProto_BlockConstructionStage BlockConstructionStage;
  static const BlockConstructionStage PIPELINE_SETUP_APPEND =
    OpWriteBlockProto_BlockConstructionStage_PIPELINE_SETUP_APPEND;
  static const BlockConstructionStage PIPELINE_SETUP_APPEND_RECOVERY =
    OpWriteBlockProto_BlockConstructionStage_PIPELINE_SETUP_APPEND_RECOVERY;
  static const BlockConstructionStage DATA_STREAMING =
    OpWriteBlockProto_BlockConstructionStage_DATA_STREAMING;
  static const BlockConstructionStage PIPELINE_SETUP_STREAMING_RECOVERY =
    OpWriteBlockProto_BlockConstructionStage_PIPELINE_SETUP_STREAMING_RECOVERY;
  static const BlockConstructionStage PIPELINE_CLOSE =
    OpWriteBlockProto_BlockConstructionStage_PIPELINE_CLOSE;
  static const BlockConstructionStage PIPELINE_CLOSE_RECOVERY =
    OpWriteBlockProto_BlockConstructionStage_PIPELINE_CLOSE_RECOVERY;
  static const BlockConstructionStage PIPELINE_SETUP_CREATE =
    OpWriteBlockProto_BlockConstructionStage_PIPELINE_SETUP_CREATE;
  static const BlockConstructionStage TRANSFER_RBW =
    OpWriteBlockProto_BlockConstructionStage_TRANSFER_RBW;
  static const BlockConstructionStage TRANSFER_FINALIZED =
    OpWriteBlockProto_BlockConstructionStage_TRANSFER_FINALIZED;
  static inline bool BlockConstructionStage_IsValid(int value) {
    return OpWriteBlockProto_BlockConstructionStage_IsValid(value);
  }
  static const BlockConstructionStage BlockConstructionStage_MIN =
    OpWriteBlockProto_BlockConstructionStage_BlockConstructionStage_MIN;
  static const BlockConstructionStage BlockConstructionStage_MAX =
    OpWriteBlockProto_BlockConstructionStage_BlockConstructionStage_MAX;
  static const int BlockConstructionStage_ARRAYSIZE =
    OpWriteBlockProto_BlockConstructionStage_BlockConstructionStage_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BlockConstructionStage_descriptor() {
    return OpWriteBlockProto_BlockConstructionStage_descriptor();
  }
  static inline const ::std::string& BlockConstructionStage_Name(BlockConstructionStage value) {
    return OpWriteBlockProto_BlockConstructionStage_Name(value);
  }
  static inline bool BlockConstructionStage_Parse(const ::std::string& name,
      BlockConstructionStage* value) {
    return OpWriteBlockProto_BlockConstructionStage_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .ClientOperationHeaderProto header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::ClientOperationHeaderProto& header() const;
  ::ClientOperationHeaderProto* mutable_header();
  ::ClientOperationHeaderProto* release_header();
  void set_allocated_header(::ClientOperationHeaderProto* header);

  // repeated .DatanodeInfoProto targets = 2;
  int targets_size() const;
  void clear_targets();
  static const int kTargetsFieldNumber = 2;
  const ::DatanodeInfoProto& targets(int index) const;
  ::DatanodeInfoProto* mutable_targets(int index);
  ::DatanodeInfoProto* add_targets();
  ::google::protobuf::RepeatedPtrField< ::DatanodeInfoProto >*
      mutable_targets();
  const ::google::protobuf::RepeatedPtrField< ::DatanodeInfoProto >&
      targets() const;

  // optional .DatanodeInfoProto source = 3;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::DatanodeInfoProto& source() const;
  ::DatanodeInfoProto* mutable_source();
  ::DatanodeInfoProto* release_source();
  void set_allocated_source(::DatanodeInfoProto* source);

  // required .OpWriteBlockProto.BlockConstructionStage stage = 4;
  bool has_stage() const;
  void clear_stage();
  static const int kStageFieldNumber = 4;
  ::OpWriteBlockProto_BlockConstructionStage stage() const;
  void set_stage(::OpWriteBlockProto_BlockConstructionStage value);

  // required uint32 pipelineSize = 5;
  bool has_pipelinesize() const;
  void clear_pipelinesize();
  static const int kPipelineSizeFieldNumber = 5;
  ::google::protobuf::uint32 pipelinesize() const;
  void set_pipelinesize(::google::protobuf::uint32 value);

  // required uint64 minBytesRcvd = 6;
  bool has_minbytesrcvd() const;
  void clear_minbytesrcvd();
  static const int kMinBytesRcvdFieldNumber = 6;
  ::google::protobuf::uint64 minbytesrcvd() const;
  void set_minbytesrcvd(::google::protobuf::uint64 value);

  // required uint64 maxBytesRcvd = 7;
  bool has_maxbytesrcvd() const;
  void clear_maxbytesrcvd();
  static const int kMaxBytesRcvdFieldNumber = 7;
  ::google::protobuf::uint64 maxbytesrcvd() const;
  void set_maxbytesrcvd(::google::protobuf::uint64 value);

  // required uint64 latestGenerationStamp = 8;
  bool has_latestgenerationstamp() const;
  void clear_latestgenerationstamp();
  static const int kLatestGenerationStampFieldNumber = 8;
  ::google::protobuf::uint64 latestgenerationstamp() const;
  void set_latestgenerationstamp(::google::protobuf::uint64 value);

  // required .ChecksumProto requestedChecksum = 9;
  bool has_requestedchecksum() const;
  void clear_requestedchecksum();
  static const int kRequestedChecksumFieldNumber = 9;
  const ::ChecksumProto& requestedchecksum() const;
  ::ChecksumProto* mutable_requestedchecksum();
  ::ChecksumProto* release_requestedchecksum();
  void set_allocated_requestedchecksum(::ChecksumProto* requestedchecksum);

  // optional .CachingStrategyProto cachingStrategy = 10;
  bool has_cachingstrategy() const;
  void clear_cachingstrategy();
  static const int kCachingStrategyFieldNumber = 10;
  const ::CachingStrategyProto& cachingstrategy() const;
  ::CachingStrategyProto* mutable_cachingstrategy();
  ::CachingStrategyProto* release_cachingstrategy();
  void set_allocated_cachingstrategy(::CachingStrategyProto* cachingstrategy);

  // optional .StorageTypeProto storageType = 11 [default = DISK];
  bool has_storagetype() const;
  void clear_storagetype();
  static const int kStorageTypeFieldNumber = 11;
  ::StorageTypeProto storagetype() const;
  void set_storagetype(::StorageTypeProto value);

  // repeated .StorageTypeProto targetStorageTypes = 12;
  int targetstoragetypes_size() const;
  void clear_targetstoragetypes();
  static const int kTargetStorageTypesFieldNumber = 12;
  ::StorageTypeProto targetstoragetypes(int index) const;
  void set_targetstoragetypes(int index, ::StorageTypeProto value);
  void add_targetstoragetypes(::StorageTypeProto value);
  const ::google::protobuf::RepeatedField<int>& targetstoragetypes() const;
  ::google::protobuf::RepeatedField<int>* mutable_targetstoragetypes();

  // optional bool allowLazyPersist = 13 [default = false];
  bool has_allowlazypersist() const;
  void clear_allowlazypersist();
  static const int kAllowLazyPersistFieldNumber = 13;
  bool allowlazypersist() const;
  void set_allowlazypersist(bool value);

  // optional bool pinning = 14 [default = false];
  bool has_pinning() const;
  void clear_pinning();
  static const int kPinningFieldNumber = 14;
  bool pinning() const;
  void set_pinning(bool value);

  // repeated bool targetPinnings = 15;
  int targetpinnings_size() const;
  void clear_targetpinnings();
  static const int kTargetPinningsFieldNumber = 15;
  bool targetpinnings(int index) const;
  void set_targetpinnings(int index, bool value);
  void add_targetpinnings(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      targetpinnings() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_targetpinnings();

  // @@protoc_insertion_point(class_scope:OpWriteBlockProto)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_pipelinesize();
  inline void clear_has_pipelinesize();
  inline void set_has_minbytesrcvd();
  inline void clear_has_minbytesrcvd();
  inline void set_has_maxbytesrcvd();
  inline void clear_has_maxbytesrcvd();
  inline void set_has_latestgenerationstamp();
  inline void clear_has_latestgenerationstamp();
  inline void set_has_requestedchecksum();
  inline void clear_has_requestedchecksum();
  inline void set_has_cachingstrategy();
  inline void clear_has_cachingstrategy();
  inline void set_has_storagetype();
  inline void clear_has_storagetype();
  inline void set_has_allowlazypersist();
  inline void clear_has_allowlazypersist();
  inline void set_has_pinning();
  inline void clear_has_pinning();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ClientOperationHeaderProto* header_;
  ::google::protobuf::RepeatedPtrField< ::DatanodeInfoProto > targets_;
  ::DatanodeInfoProto* source_;
  int stage_;
  ::google::protobuf::uint32 pipelinesize_;
  ::google::protobuf::uint64 minbytesrcvd_;
  ::google::protobuf::uint64 maxbytesrcvd_;
  ::google::protobuf::uint64 latestgenerationstamp_;
  ::ChecksumProto* requestedchecksum_;
  ::CachingStrategyProto* cachingstrategy_;
  ::google::protobuf::RepeatedField<int> targetstoragetypes_;
  int storagetype_;
  bool allowlazypersist_;
  bool pinning_;
  ::google::protobuf::RepeatedField< bool > targetpinnings_;
  friend void  protobuf_AddDesc_datanode_2eproto();
  friend void protobuf_AssignDesc_datanode_2eproto();
  friend void protobuf_ShutdownFile_datanode_2eproto();

  void InitAsDefaultInstance();
  static OpWriteBlockProto* default_instance_;
};
// -------------------------------------------------------------------

class PipelineAckProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PipelineAckProto) */ {
 public:
  PipelineAckProto();
  virtual ~PipelineAckProto();

  PipelineAckProto(const PipelineAckProto& from);

  inline PipelineAckProto& operator=(const PipelineAckProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PipelineAckProto& default_instance();

  void Swap(PipelineAckProto* other);

  // implements Message ----------------------------------------------

  inline PipelineAckProto* New() const { return New(NULL); }

  PipelineAckProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PipelineAckProto& from);
  void MergeFrom(const PipelineAckProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PipelineAckProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 seqno = 1;
  bool has_seqno() const;
  void clear_seqno();
  static const int kSeqnoFieldNumber = 1;
  ::google::protobuf::int64 seqno() const;
  void set_seqno(::google::protobuf::int64 value);

  // repeated .Status reply = 2;
  int reply_size() const;
  void clear_reply();
  static const int kReplyFieldNumber = 2;
  ::Status reply(int index) const;
  void set_reply(int index, ::Status value);
  void add_reply(::Status value);
  const ::google::protobuf::RepeatedField<int>& reply() const;
  ::google::protobuf::RepeatedField<int>* mutable_reply();

  // optional uint64 downstreamAckTimeNanos = 3 [default = 0];
  bool has_downstreamacktimenanos() const;
  void clear_downstreamacktimenanos();
  static const int kDownstreamAckTimeNanosFieldNumber = 3;
  ::google::protobuf::uint64 downstreamacktimenanos() const;
  void set_downstreamacktimenanos(::google::protobuf::uint64 value);

  // repeated uint32 flag = 4 [packed = true];
  int flag_size() const;
  void clear_flag();
  static const int kFlagFieldNumber = 4;
  ::google::protobuf::uint32 flag(int index) const;
  void set_flag(int index, ::google::protobuf::uint32 value);
  void add_flag(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      flag() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_flag();

  // @@protoc_insertion_point(class_scope:PipelineAckProto)
 private:
  inline void set_has_seqno();
  inline void clear_has_seqno();
  inline void set_has_downstreamacktimenanos();
  inline void clear_has_downstreamacktimenanos();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 seqno_;
  ::google::protobuf::RepeatedField<int> reply_;
  ::google::protobuf::uint64 downstreamacktimenanos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > flag_;
  mutable int _flag_cached_byte_size_;
  friend void  protobuf_AddDesc_datanode_2eproto();
  friend void protobuf_AssignDesc_datanode_2eproto();
  friend void protobuf_ShutdownFile_datanode_2eproto();

  void InitAsDefaultInstance();
  static PipelineAckProto* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CachingStrategyProto

// optional bool dropBehind = 1;
inline bool CachingStrategyProto::has_dropbehind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CachingStrategyProto::set_has_dropbehind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CachingStrategyProto::clear_has_dropbehind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CachingStrategyProto::clear_dropbehind() {
  dropbehind_ = false;
  clear_has_dropbehind();
}
inline bool CachingStrategyProto::dropbehind() const {
  // @@protoc_insertion_point(field_get:CachingStrategyProto.dropBehind)
  return dropbehind_;
}
inline void CachingStrategyProto::set_dropbehind(bool value) {
  set_has_dropbehind();
  dropbehind_ = value;
  // @@protoc_insertion_point(field_set:CachingStrategyProto.dropBehind)
}

// optional int64 readahead = 2;
inline bool CachingStrategyProto::has_readahead() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CachingStrategyProto::set_has_readahead() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CachingStrategyProto::clear_has_readahead() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CachingStrategyProto::clear_readahead() {
  readahead_ = GOOGLE_LONGLONG(0);
  clear_has_readahead();
}
inline ::google::protobuf::int64 CachingStrategyProto::readahead() const {
  // @@protoc_insertion_point(field_get:CachingStrategyProto.readahead)
  return readahead_;
}
inline void CachingStrategyProto::set_readahead(::google::protobuf::int64 value) {
  set_has_readahead();
  readahead_ = value;
  // @@protoc_insertion_point(field_set:CachingStrategyProto.readahead)
}

// -------------------------------------------------------------------

// OpReadBlockProto

// required .ClientOperationHeaderProto header = 1;
inline bool OpReadBlockProto::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpReadBlockProto::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpReadBlockProto::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpReadBlockProto::clear_header() {
  if (header_ != NULL) header_->::ClientOperationHeaderProto::Clear();
  clear_has_header();
}
inline const ::ClientOperationHeaderProto& OpReadBlockProto::header() const {
  // @@protoc_insertion_point(field_get:OpReadBlockProto.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::ClientOperationHeaderProto* OpReadBlockProto::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::ClientOperationHeaderProto;
  }
  // @@protoc_insertion_point(field_mutable:OpReadBlockProto.header)
  return header_;
}
inline ::ClientOperationHeaderProto* OpReadBlockProto::release_header() {
  // @@protoc_insertion_point(field_release:OpReadBlockProto.header)
  clear_has_header();
  ::ClientOperationHeaderProto* temp = header_;
  header_ = NULL;
  return temp;
}
inline void OpReadBlockProto::set_allocated_header(::ClientOperationHeaderProto* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:OpReadBlockProto.header)
}

// required uint64 offset = 2;
inline bool OpReadBlockProto::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpReadBlockProto::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpReadBlockProto::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpReadBlockProto::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 OpReadBlockProto::offset() const {
  // @@protoc_insertion_point(field_get:OpReadBlockProto.offset)
  return offset_;
}
inline void OpReadBlockProto::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:OpReadBlockProto.offset)
}

// required uint64 len = 3;
inline bool OpReadBlockProto::has_len() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OpReadBlockProto::set_has_len() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OpReadBlockProto::clear_has_len() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OpReadBlockProto::clear_len() {
  len_ = GOOGLE_ULONGLONG(0);
  clear_has_len();
}
inline ::google::protobuf::uint64 OpReadBlockProto::len() const {
  // @@protoc_insertion_point(field_get:OpReadBlockProto.len)
  return len_;
}
inline void OpReadBlockProto::set_len(::google::protobuf::uint64 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:OpReadBlockProto.len)
}

// optional bool sendChecksums = 4 [default = true];
inline bool OpReadBlockProto::has_sendchecksums() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OpReadBlockProto::set_has_sendchecksums() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OpReadBlockProto::clear_has_sendchecksums() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OpReadBlockProto::clear_sendchecksums() {
  sendchecksums_ = true;
  clear_has_sendchecksums();
}
inline bool OpReadBlockProto::sendchecksums() const {
  // @@protoc_insertion_point(field_get:OpReadBlockProto.sendChecksums)
  return sendchecksums_;
}
inline void OpReadBlockProto::set_sendchecksums(bool value) {
  set_has_sendchecksums();
  sendchecksums_ = value;
  // @@protoc_insertion_point(field_set:OpReadBlockProto.sendChecksums)
}

// optional .CachingStrategyProto cachingStrategy = 5;
inline bool OpReadBlockProto::has_cachingstrategy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OpReadBlockProto::set_has_cachingstrategy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OpReadBlockProto::clear_has_cachingstrategy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OpReadBlockProto::clear_cachingstrategy() {
  if (cachingstrategy_ != NULL) cachingstrategy_->::CachingStrategyProto::Clear();
  clear_has_cachingstrategy();
}
inline const ::CachingStrategyProto& OpReadBlockProto::cachingstrategy() const {
  // @@protoc_insertion_point(field_get:OpReadBlockProto.cachingStrategy)
  return cachingstrategy_ != NULL ? *cachingstrategy_ : *default_instance_->cachingstrategy_;
}
inline ::CachingStrategyProto* OpReadBlockProto::mutable_cachingstrategy() {
  set_has_cachingstrategy();
  if (cachingstrategy_ == NULL) {
    cachingstrategy_ = new ::CachingStrategyProto;
  }
  // @@protoc_insertion_point(field_mutable:OpReadBlockProto.cachingStrategy)
  return cachingstrategy_;
}
inline ::CachingStrategyProto* OpReadBlockProto::release_cachingstrategy() {
  // @@protoc_insertion_point(field_release:OpReadBlockProto.cachingStrategy)
  clear_has_cachingstrategy();
  ::CachingStrategyProto* temp = cachingstrategy_;
  cachingstrategy_ = NULL;
  return temp;
}
inline void OpReadBlockProto::set_allocated_cachingstrategy(::CachingStrategyProto* cachingstrategy) {
  delete cachingstrategy_;
  cachingstrategy_ = cachingstrategy;
  if (cachingstrategy) {
    set_has_cachingstrategy();
  } else {
    clear_has_cachingstrategy();
  }
  // @@protoc_insertion_point(field_set_allocated:OpReadBlockProto.cachingStrategy)
}

// -------------------------------------------------------------------

// PacketHeaderProto

// required sfixed64 offsetInBlock = 1;
inline bool PacketHeaderProto::has_offsetinblock() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PacketHeaderProto::set_has_offsetinblock() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PacketHeaderProto::clear_has_offsetinblock() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PacketHeaderProto::clear_offsetinblock() {
  offsetinblock_ = GOOGLE_LONGLONG(0);
  clear_has_offsetinblock();
}
inline ::google::protobuf::int64 PacketHeaderProto::offsetinblock() const {
  // @@protoc_insertion_point(field_get:PacketHeaderProto.offsetInBlock)
  return offsetinblock_;
}
inline void PacketHeaderProto::set_offsetinblock(::google::protobuf::int64 value) {
  set_has_offsetinblock();
  offsetinblock_ = value;
  // @@protoc_insertion_point(field_set:PacketHeaderProto.offsetInBlock)
}

// required sfixed64 seqno = 2;
inline bool PacketHeaderProto::has_seqno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PacketHeaderProto::set_has_seqno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PacketHeaderProto::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PacketHeaderProto::clear_seqno() {
  seqno_ = GOOGLE_LONGLONG(0);
  clear_has_seqno();
}
inline ::google::protobuf::int64 PacketHeaderProto::seqno() const {
  // @@protoc_insertion_point(field_get:PacketHeaderProto.seqno)
  return seqno_;
}
inline void PacketHeaderProto::set_seqno(::google::protobuf::int64 value) {
  set_has_seqno();
  seqno_ = value;
  // @@protoc_insertion_point(field_set:PacketHeaderProto.seqno)
}

// required bool lastPacketInBlock = 3;
inline bool PacketHeaderProto::has_lastpacketinblock() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PacketHeaderProto::set_has_lastpacketinblock() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PacketHeaderProto::clear_has_lastpacketinblock() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PacketHeaderProto::clear_lastpacketinblock() {
  lastpacketinblock_ = false;
  clear_has_lastpacketinblock();
}
inline bool PacketHeaderProto::lastpacketinblock() const {
  // @@protoc_insertion_point(field_get:PacketHeaderProto.lastPacketInBlock)
  return lastpacketinblock_;
}
inline void PacketHeaderProto::set_lastpacketinblock(bool value) {
  set_has_lastpacketinblock();
  lastpacketinblock_ = value;
  // @@protoc_insertion_point(field_set:PacketHeaderProto.lastPacketInBlock)
}

// required sfixed32 dataLen = 4;
inline bool PacketHeaderProto::has_datalen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PacketHeaderProto::set_has_datalen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PacketHeaderProto::clear_has_datalen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PacketHeaderProto::clear_datalen() {
  datalen_ = 0;
  clear_has_datalen();
}
inline ::google::protobuf::int32 PacketHeaderProto::datalen() const {
  // @@protoc_insertion_point(field_get:PacketHeaderProto.dataLen)
  return datalen_;
}
inline void PacketHeaderProto::set_datalen(::google::protobuf::int32 value) {
  set_has_datalen();
  datalen_ = value;
  // @@protoc_insertion_point(field_set:PacketHeaderProto.dataLen)
}

// optional bool syncBlock = 5 [default = false];
inline bool PacketHeaderProto::has_syncblock() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PacketHeaderProto::set_has_syncblock() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PacketHeaderProto::clear_has_syncblock() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PacketHeaderProto::clear_syncblock() {
  syncblock_ = false;
  clear_has_syncblock();
}
inline bool PacketHeaderProto::syncblock() const {
  // @@protoc_insertion_point(field_get:PacketHeaderProto.syncBlock)
  return syncblock_;
}
inline void PacketHeaderProto::set_syncblock(bool value) {
  set_has_syncblock();
  syncblock_ = value;
  // @@protoc_insertion_point(field_set:PacketHeaderProto.syncBlock)
}

// -------------------------------------------------------------------

// OpWriteBlockProto

// required .ClientOperationHeaderProto header = 1;
inline bool OpWriteBlockProto::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpWriteBlockProto::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpWriteBlockProto::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpWriteBlockProto::clear_header() {
  if (header_ != NULL) header_->::ClientOperationHeaderProto::Clear();
  clear_has_header();
}
inline const ::ClientOperationHeaderProto& OpWriteBlockProto::header() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::ClientOperationHeaderProto* OpWriteBlockProto::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::ClientOperationHeaderProto;
  }
  // @@protoc_insertion_point(field_mutable:OpWriteBlockProto.header)
  return header_;
}
inline ::ClientOperationHeaderProto* OpWriteBlockProto::release_header() {
  // @@protoc_insertion_point(field_release:OpWriteBlockProto.header)
  clear_has_header();
  ::ClientOperationHeaderProto* temp = header_;
  header_ = NULL;
  return temp;
}
inline void OpWriteBlockProto::set_allocated_header(::ClientOperationHeaderProto* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:OpWriteBlockProto.header)
}

// repeated .DatanodeInfoProto targets = 2;
inline int OpWriteBlockProto::targets_size() const {
  return targets_.size();
}
inline void OpWriteBlockProto::clear_targets() {
  targets_.Clear();
}
inline const ::DatanodeInfoProto& OpWriteBlockProto::targets(int index) const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.targets)
  return targets_.Get(index);
}
inline ::DatanodeInfoProto* OpWriteBlockProto::mutable_targets(int index) {
  // @@protoc_insertion_point(field_mutable:OpWriteBlockProto.targets)
  return targets_.Mutable(index);
}
inline ::DatanodeInfoProto* OpWriteBlockProto::add_targets() {
  // @@protoc_insertion_point(field_add:OpWriteBlockProto.targets)
  return targets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DatanodeInfoProto >*
OpWriteBlockProto::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:OpWriteBlockProto.targets)
  return &targets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DatanodeInfoProto >&
OpWriteBlockProto::targets() const {
  // @@protoc_insertion_point(field_list:OpWriteBlockProto.targets)
  return targets_;
}

// optional .DatanodeInfoProto source = 3;
inline bool OpWriteBlockProto::has_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OpWriteBlockProto::set_has_source() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OpWriteBlockProto::clear_has_source() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OpWriteBlockProto::clear_source() {
  if (source_ != NULL) source_->::DatanodeInfoProto::Clear();
  clear_has_source();
}
inline const ::DatanodeInfoProto& OpWriteBlockProto::source() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.source)
  return source_ != NULL ? *source_ : *default_instance_->source_;
}
inline ::DatanodeInfoProto* OpWriteBlockProto::mutable_source() {
  set_has_source();
  if (source_ == NULL) {
    source_ = new ::DatanodeInfoProto;
  }
  // @@protoc_insertion_point(field_mutable:OpWriteBlockProto.source)
  return source_;
}
inline ::DatanodeInfoProto* OpWriteBlockProto::release_source() {
  // @@protoc_insertion_point(field_release:OpWriteBlockProto.source)
  clear_has_source();
  ::DatanodeInfoProto* temp = source_;
  source_ = NULL;
  return temp;
}
inline void OpWriteBlockProto::set_allocated_source(::DatanodeInfoProto* source) {
  delete source_;
  source_ = source;
  if (source) {
    set_has_source();
  } else {
    clear_has_source();
  }
  // @@protoc_insertion_point(field_set_allocated:OpWriteBlockProto.source)
}

// required .OpWriteBlockProto.BlockConstructionStage stage = 4;
inline bool OpWriteBlockProto::has_stage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OpWriteBlockProto::set_has_stage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OpWriteBlockProto::clear_has_stage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OpWriteBlockProto::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::OpWriteBlockProto_BlockConstructionStage OpWriteBlockProto::stage() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.stage)
  return static_cast< ::OpWriteBlockProto_BlockConstructionStage >(stage_);
}
inline void OpWriteBlockProto::set_stage(::OpWriteBlockProto_BlockConstructionStage value) {
  assert(::OpWriteBlockProto_BlockConstructionStage_IsValid(value));
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:OpWriteBlockProto.stage)
}

// required uint32 pipelineSize = 5;
inline bool OpWriteBlockProto::has_pipelinesize() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OpWriteBlockProto::set_has_pipelinesize() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OpWriteBlockProto::clear_has_pipelinesize() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OpWriteBlockProto::clear_pipelinesize() {
  pipelinesize_ = 0u;
  clear_has_pipelinesize();
}
inline ::google::protobuf::uint32 OpWriteBlockProto::pipelinesize() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.pipelineSize)
  return pipelinesize_;
}
inline void OpWriteBlockProto::set_pipelinesize(::google::protobuf::uint32 value) {
  set_has_pipelinesize();
  pipelinesize_ = value;
  // @@protoc_insertion_point(field_set:OpWriteBlockProto.pipelineSize)
}

// required uint64 minBytesRcvd = 6;
inline bool OpWriteBlockProto::has_minbytesrcvd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OpWriteBlockProto::set_has_minbytesrcvd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OpWriteBlockProto::clear_has_minbytesrcvd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OpWriteBlockProto::clear_minbytesrcvd() {
  minbytesrcvd_ = GOOGLE_ULONGLONG(0);
  clear_has_minbytesrcvd();
}
inline ::google::protobuf::uint64 OpWriteBlockProto::minbytesrcvd() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.minBytesRcvd)
  return minbytesrcvd_;
}
inline void OpWriteBlockProto::set_minbytesrcvd(::google::protobuf::uint64 value) {
  set_has_minbytesrcvd();
  minbytesrcvd_ = value;
  // @@protoc_insertion_point(field_set:OpWriteBlockProto.minBytesRcvd)
}

// required uint64 maxBytesRcvd = 7;
inline bool OpWriteBlockProto::has_maxbytesrcvd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OpWriteBlockProto::set_has_maxbytesrcvd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OpWriteBlockProto::clear_has_maxbytesrcvd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OpWriteBlockProto::clear_maxbytesrcvd() {
  maxbytesrcvd_ = GOOGLE_ULONGLONG(0);
  clear_has_maxbytesrcvd();
}
inline ::google::protobuf::uint64 OpWriteBlockProto::maxbytesrcvd() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.maxBytesRcvd)
  return maxbytesrcvd_;
}
inline void OpWriteBlockProto::set_maxbytesrcvd(::google::protobuf::uint64 value) {
  set_has_maxbytesrcvd();
  maxbytesrcvd_ = value;
  // @@protoc_insertion_point(field_set:OpWriteBlockProto.maxBytesRcvd)
}

// required uint64 latestGenerationStamp = 8;
inline bool OpWriteBlockProto::has_latestgenerationstamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OpWriteBlockProto::set_has_latestgenerationstamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OpWriteBlockProto::clear_has_latestgenerationstamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OpWriteBlockProto::clear_latestgenerationstamp() {
  latestgenerationstamp_ = GOOGLE_ULONGLONG(0);
  clear_has_latestgenerationstamp();
}
inline ::google::protobuf::uint64 OpWriteBlockProto::latestgenerationstamp() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.latestGenerationStamp)
  return latestgenerationstamp_;
}
inline void OpWriteBlockProto::set_latestgenerationstamp(::google::protobuf::uint64 value) {
  set_has_latestgenerationstamp();
  latestgenerationstamp_ = value;
  // @@protoc_insertion_point(field_set:OpWriteBlockProto.latestGenerationStamp)
}

// required .ChecksumProto requestedChecksum = 9;
inline bool OpWriteBlockProto::has_requestedchecksum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OpWriteBlockProto::set_has_requestedchecksum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OpWriteBlockProto::clear_has_requestedchecksum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OpWriteBlockProto::clear_requestedchecksum() {
  if (requestedchecksum_ != NULL) requestedchecksum_->::ChecksumProto::Clear();
  clear_has_requestedchecksum();
}
inline const ::ChecksumProto& OpWriteBlockProto::requestedchecksum() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.requestedChecksum)
  return requestedchecksum_ != NULL ? *requestedchecksum_ : *default_instance_->requestedchecksum_;
}
inline ::ChecksumProto* OpWriteBlockProto::mutable_requestedchecksum() {
  set_has_requestedchecksum();
  if (requestedchecksum_ == NULL) {
    requestedchecksum_ = new ::ChecksumProto;
  }
  // @@protoc_insertion_point(field_mutable:OpWriteBlockProto.requestedChecksum)
  return requestedchecksum_;
}
inline ::ChecksumProto* OpWriteBlockProto::release_requestedchecksum() {
  // @@protoc_insertion_point(field_release:OpWriteBlockProto.requestedChecksum)
  clear_has_requestedchecksum();
  ::ChecksumProto* temp = requestedchecksum_;
  requestedchecksum_ = NULL;
  return temp;
}
inline void OpWriteBlockProto::set_allocated_requestedchecksum(::ChecksumProto* requestedchecksum) {
  delete requestedchecksum_;
  requestedchecksum_ = requestedchecksum;
  if (requestedchecksum) {
    set_has_requestedchecksum();
  } else {
    clear_has_requestedchecksum();
  }
  // @@protoc_insertion_point(field_set_allocated:OpWriteBlockProto.requestedChecksum)
}

// optional .CachingStrategyProto cachingStrategy = 10;
inline bool OpWriteBlockProto::has_cachingstrategy() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OpWriteBlockProto::set_has_cachingstrategy() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OpWriteBlockProto::clear_has_cachingstrategy() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OpWriteBlockProto::clear_cachingstrategy() {
  if (cachingstrategy_ != NULL) cachingstrategy_->::CachingStrategyProto::Clear();
  clear_has_cachingstrategy();
}
inline const ::CachingStrategyProto& OpWriteBlockProto::cachingstrategy() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.cachingStrategy)
  return cachingstrategy_ != NULL ? *cachingstrategy_ : *default_instance_->cachingstrategy_;
}
inline ::CachingStrategyProto* OpWriteBlockProto::mutable_cachingstrategy() {
  set_has_cachingstrategy();
  if (cachingstrategy_ == NULL) {
    cachingstrategy_ = new ::CachingStrategyProto;
  }
  // @@protoc_insertion_point(field_mutable:OpWriteBlockProto.cachingStrategy)
  return cachingstrategy_;
}
inline ::CachingStrategyProto* OpWriteBlockProto::release_cachingstrategy() {
  // @@protoc_insertion_point(field_release:OpWriteBlockProto.cachingStrategy)
  clear_has_cachingstrategy();
  ::CachingStrategyProto* temp = cachingstrategy_;
  cachingstrategy_ = NULL;
  return temp;
}
inline void OpWriteBlockProto::set_allocated_cachingstrategy(::CachingStrategyProto* cachingstrategy) {
  delete cachingstrategy_;
  cachingstrategy_ = cachingstrategy;
  if (cachingstrategy) {
    set_has_cachingstrategy();
  } else {
    clear_has_cachingstrategy();
  }
  // @@protoc_insertion_point(field_set_allocated:OpWriteBlockProto.cachingStrategy)
}

// optional .StorageTypeProto storageType = 11 [default = DISK];
inline bool OpWriteBlockProto::has_storagetype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OpWriteBlockProto::set_has_storagetype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OpWriteBlockProto::clear_has_storagetype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OpWriteBlockProto::clear_storagetype() {
  storagetype_ = 1;
  clear_has_storagetype();
}
inline ::StorageTypeProto OpWriteBlockProto::storagetype() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.storageType)
  return static_cast< ::StorageTypeProto >(storagetype_);
}
inline void OpWriteBlockProto::set_storagetype(::StorageTypeProto value) {
  assert(::StorageTypeProto_IsValid(value));
  set_has_storagetype();
  storagetype_ = value;
  // @@protoc_insertion_point(field_set:OpWriteBlockProto.storageType)
}

// repeated .StorageTypeProto targetStorageTypes = 12;
inline int OpWriteBlockProto::targetstoragetypes_size() const {
  return targetstoragetypes_.size();
}
inline void OpWriteBlockProto::clear_targetstoragetypes() {
  targetstoragetypes_.Clear();
}
inline ::StorageTypeProto OpWriteBlockProto::targetstoragetypes(int index) const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.targetStorageTypes)
  return static_cast< ::StorageTypeProto >(targetstoragetypes_.Get(index));
}
inline void OpWriteBlockProto::set_targetstoragetypes(int index, ::StorageTypeProto value) {
  assert(::StorageTypeProto_IsValid(value));
  targetstoragetypes_.Set(index, value);
  // @@protoc_insertion_point(field_set:OpWriteBlockProto.targetStorageTypes)
}
inline void OpWriteBlockProto::add_targetstoragetypes(::StorageTypeProto value) {
  assert(::StorageTypeProto_IsValid(value));
  targetstoragetypes_.Add(value);
  // @@protoc_insertion_point(field_add:OpWriteBlockProto.targetStorageTypes)
}
inline const ::google::protobuf::RepeatedField<int>&
OpWriteBlockProto::targetstoragetypes() const {
  // @@protoc_insertion_point(field_list:OpWriteBlockProto.targetStorageTypes)
  return targetstoragetypes_;
}
inline ::google::protobuf::RepeatedField<int>*
OpWriteBlockProto::mutable_targetstoragetypes() {
  // @@protoc_insertion_point(field_mutable_list:OpWriteBlockProto.targetStorageTypes)
  return &targetstoragetypes_;
}

// optional bool allowLazyPersist = 13 [default = false];
inline bool OpWriteBlockProto::has_allowlazypersist() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OpWriteBlockProto::set_has_allowlazypersist() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OpWriteBlockProto::clear_has_allowlazypersist() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OpWriteBlockProto::clear_allowlazypersist() {
  allowlazypersist_ = false;
  clear_has_allowlazypersist();
}
inline bool OpWriteBlockProto::allowlazypersist() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.allowLazyPersist)
  return allowlazypersist_;
}
inline void OpWriteBlockProto::set_allowlazypersist(bool value) {
  set_has_allowlazypersist();
  allowlazypersist_ = value;
  // @@protoc_insertion_point(field_set:OpWriteBlockProto.allowLazyPersist)
}

// optional bool pinning = 14 [default = false];
inline bool OpWriteBlockProto::has_pinning() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OpWriteBlockProto::set_has_pinning() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OpWriteBlockProto::clear_has_pinning() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OpWriteBlockProto::clear_pinning() {
  pinning_ = false;
  clear_has_pinning();
}
inline bool OpWriteBlockProto::pinning() const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.pinning)
  return pinning_;
}
inline void OpWriteBlockProto::set_pinning(bool value) {
  set_has_pinning();
  pinning_ = value;
  // @@protoc_insertion_point(field_set:OpWriteBlockProto.pinning)
}

// repeated bool targetPinnings = 15;
inline int OpWriteBlockProto::targetpinnings_size() const {
  return targetpinnings_.size();
}
inline void OpWriteBlockProto::clear_targetpinnings() {
  targetpinnings_.Clear();
}
inline bool OpWriteBlockProto::targetpinnings(int index) const {
  // @@protoc_insertion_point(field_get:OpWriteBlockProto.targetPinnings)
  return targetpinnings_.Get(index);
}
inline void OpWriteBlockProto::set_targetpinnings(int index, bool value) {
  targetpinnings_.Set(index, value);
  // @@protoc_insertion_point(field_set:OpWriteBlockProto.targetPinnings)
}
inline void OpWriteBlockProto::add_targetpinnings(bool value) {
  targetpinnings_.Add(value);
  // @@protoc_insertion_point(field_add:OpWriteBlockProto.targetPinnings)
}
inline const ::google::protobuf::RepeatedField< bool >&
OpWriteBlockProto::targetpinnings() const {
  // @@protoc_insertion_point(field_list:OpWriteBlockProto.targetPinnings)
  return targetpinnings_;
}
inline ::google::protobuf::RepeatedField< bool >*
OpWriteBlockProto::mutable_targetpinnings() {
  // @@protoc_insertion_point(field_mutable_list:OpWriteBlockProto.targetPinnings)
  return &targetpinnings_;
}

// -------------------------------------------------------------------

// PipelineAckProto

// required sint64 seqno = 1;
inline bool PipelineAckProto::has_seqno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PipelineAckProto::set_has_seqno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PipelineAckProto::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PipelineAckProto::clear_seqno() {
  seqno_ = GOOGLE_LONGLONG(0);
  clear_has_seqno();
}
inline ::google::protobuf::int64 PipelineAckProto::seqno() const {
  // @@protoc_insertion_point(field_get:PipelineAckProto.seqno)
  return seqno_;
}
inline void PipelineAckProto::set_seqno(::google::protobuf::int64 value) {
  set_has_seqno();
  seqno_ = value;
  // @@protoc_insertion_point(field_set:PipelineAckProto.seqno)
}

// repeated .Status reply = 2;
inline int PipelineAckProto::reply_size() const {
  return reply_.size();
}
inline void PipelineAckProto::clear_reply() {
  reply_.Clear();
}
inline ::Status PipelineAckProto::reply(int index) const {
  // @@protoc_insertion_point(field_get:PipelineAckProto.reply)
  return static_cast< ::Status >(reply_.Get(index));
}
inline void PipelineAckProto::set_reply(int index, ::Status value) {
  assert(::Status_IsValid(value));
  reply_.Set(index, value);
  // @@protoc_insertion_point(field_set:PipelineAckProto.reply)
}
inline void PipelineAckProto::add_reply(::Status value) {
  assert(::Status_IsValid(value));
  reply_.Add(value);
  // @@protoc_insertion_point(field_add:PipelineAckProto.reply)
}
inline const ::google::protobuf::RepeatedField<int>&
PipelineAckProto::reply() const {
  // @@protoc_insertion_point(field_list:PipelineAckProto.reply)
  return reply_;
}
inline ::google::protobuf::RepeatedField<int>*
PipelineAckProto::mutable_reply() {
  // @@protoc_insertion_point(field_mutable_list:PipelineAckProto.reply)
  return &reply_;
}

// optional uint64 downstreamAckTimeNanos = 3 [default = 0];
inline bool PipelineAckProto::has_downstreamacktimenanos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PipelineAckProto::set_has_downstreamacktimenanos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PipelineAckProto::clear_has_downstreamacktimenanos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PipelineAckProto::clear_downstreamacktimenanos() {
  downstreamacktimenanos_ = GOOGLE_ULONGLONG(0);
  clear_has_downstreamacktimenanos();
}
inline ::google::protobuf::uint64 PipelineAckProto::downstreamacktimenanos() const {
  // @@protoc_insertion_point(field_get:PipelineAckProto.downstreamAckTimeNanos)
  return downstreamacktimenanos_;
}
inline void PipelineAckProto::set_downstreamacktimenanos(::google::protobuf::uint64 value) {
  set_has_downstreamacktimenanos();
  downstreamacktimenanos_ = value;
  // @@protoc_insertion_point(field_set:PipelineAckProto.downstreamAckTimeNanos)
}

// repeated uint32 flag = 4 [packed = true];
inline int PipelineAckProto::flag_size() const {
  return flag_.size();
}
inline void PipelineAckProto::clear_flag() {
  flag_.Clear();
}
inline ::google::protobuf::uint32 PipelineAckProto::flag(int index) const {
  // @@protoc_insertion_point(field_get:PipelineAckProto.flag)
  return flag_.Get(index);
}
inline void PipelineAckProto::set_flag(int index, ::google::protobuf::uint32 value) {
  flag_.Set(index, value);
  // @@protoc_insertion_point(field_set:PipelineAckProto.flag)
}
inline void PipelineAckProto::add_flag(::google::protobuf::uint32 value) {
  flag_.Add(value);
  // @@protoc_insertion_point(field_add:PipelineAckProto.flag)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PipelineAckProto::flag() const {
  // @@protoc_insertion_point(field_list:PipelineAckProto.flag)
  return flag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PipelineAckProto::mutable_flag() {
  // @@protoc_insertion_point(field_mutable_list:PipelineAckProto.flag)
  return &flag_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::OpWriteBlockProto_BlockConstructionStage> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OpWriteBlockProto_BlockConstructionStage>() {
  return ::OpWriteBlockProto_BlockConstructionStage_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_datanode_2eproto__INCLUDED
